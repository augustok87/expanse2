{"version":3,"file":"vite-productBundleMain.js","sources":["../node_modules/.pnpm/svelte@3.59.1/node_modules/svelte/internal/index.mjs","../frontend/productBundles/settings.js","../node_modules/.pnpm/svelte@3.59.1/node_modules/svelte/store/index.mjs","../frontend/productBundles/utils.js","../frontend/productBundles/ProductVariant.js","../frontend/productBundles/StorageManager.js","../frontend/productBundles/store.js","../node_modules/.pnpm/graphql-request@6.1.0_graphql@16.6.0/node_modules/graphql-request/build/esm/defaultJsonSerializer.js","../node_modules/.pnpm/graphql-request@6.1.0_graphql@16.6.0/node_modules/graphql-request/build/esm/helpers.js","../node_modules/.pnpm/graphql-request@6.1.0_graphql@16.6.0/node_modules/graphql-request/build/esm/parseArgs.js","../node_modules/.pnpm/graphql@16.6.0/node_modules/graphql/jsutils/devAssert.mjs","../node_modules/.pnpm/graphql@16.6.0/node_modules/graphql/jsutils/isObjectLike.mjs","../node_modules/.pnpm/graphql@16.6.0/node_modules/graphql/jsutils/invariant.mjs","../node_modules/.pnpm/graphql@16.6.0/node_modules/graphql/language/location.mjs","../node_modules/.pnpm/graphql@16.6.0/node_modules/graphql/language/printLocation.mjs","../node_modules/.pnpm/graphql@16.6.0/node_modules/graphql/error/GraphQLError.mjs","../node_modules/.pnpm/graphql@16.6.0/node_modules/graphql/error/syntaxError.mjs","../node_modules/.pnpm/graphql@16.6.0/node_modules/graphql/language/ast.mjs","../node_modules/.pnpm/graphql@16.6.0/node_modules/graphql/language/directiveLocation.mjs","../node_modules/.pnpm/graphql@16.6.0/node_modules/graphql/language/kinds.mjs","../node_modules/.pnpm/graphql@16.6.0/node_modules/graphql/language/characterClasses.mjs","../node_modules/.pnpm/graphql@16.6.0/node_modules/graphql/language/blockString.mjs","../node_modules/.pnpm/graphql@16.6.0/node_modules/graphql/language/tokenKind.mjs","../node_modules/.pnpm/graphql@16.6.0/node_modules/graphql/language/lexer.mjs","../node_modules/.pnpm/graphql@16.6.0/node_modules/graphql/jsutils/inspect.mjs","../node_modules/.pnpm/graphql@16.6.0/node_modules/graphql/jsutils/instanceOf.mjs","../node_modules/.pnpm/graphql@16.6.0/node_modules/graphql/language/source.mjs","../node_modules/.pnpm/graphql@16.6.0/node_modules/graphql/language/parser.mjs","../node_modules/.pnpm/graphql@16.6.0/node_modules/graphql/language/printString.mjs","../node_modules/.pnpm/graphql@16.6.0/node_modules/graphql/language/visitor.mjs","../node_modules/.pnpm/graphql@16.6.0/node_modules/graphql/language/printer.mjs","../node_modules/.pnpm/graphql-request@6.1.0_graphql@16.6.0/node_modules/graphql-request/build/esm/resolveRequestDocument.js","../node_modules/.pnpm/graphql-request@6.1.0_graphql@16.6.0/node_modules/graphql-request/build/esm/types.js","../node_modules/.pnpm/cross-fetch@3.1.6/node_modules/cross-fetch/dist/browser-ponyfill.js","../node_modules/.pnpm/graphql-request@6.1.0_graphql@16.6.0/node_modules/graphql-request/build/esm/index.js","../frontend/productBundles/fetcher.js","../frontend/productBundles/Paginator.js","../frontend/productBundles/ProductVariantParser.js","../frontend/productBundles/ProductBox.svelte","../frontend/productBundles/SelectedProductThumbnail.svelte","../frontend/productBundles/AddBundleToCartBtn.svelte","../frontend/productBundles/PageButton.svelte","../frontend/productBundles/App.svelte","../frontend/entrypoints/productBundleMain.js"],"sourcesContent":["function noop() { }\nconst identity = x => x;\nfunction assign(tar, src) {\n    // @ts-ignore\n    for (const k in src)\n        tar[k] = src[k];\n    return tar;\n}\n// Adapted from https://github.com/then/is-promise/blob/master/index.js\n// Distributed under MIT License https://github.com/then/is-promise/blob/master/LICENSE\nfunction is_promise(value) {\n    return !!value && (typeof value === 'object' || typeof value === 'function') && typeof value.then === 'function';\n}\nfunction add_location(element, file, line, column, char) {\n    element.__svelte_meta = {\n        loc: { file, line, column, char }\n    };\n}\nfunction run(fn) {\n    return fn();\n}\nfunction blank_object() {\n    return Object.create(null);\n}\nfunction run_all(fns) {\n    fns.forEach(run);\n}\nfunction is_function(thing) {\n    return typeof thing === 'function';\n}\nfunction safe_not_equal(a, b) {\n    return a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');\n}\nlet src_url_equal_anchor;\nfunction src_url_equal(element_src, url) {\n    if (!src_url_equal_anchor) {\n        src_url_equal_anchor = document.createElement('a');\n    }\n    src_url_equal_anchor.href = url;\n    return element_src === src_url_equal_anchor.href;\n}\nfunction not_equal(a, b) {\n    return a != a ? b == b : a !== b;\n}\nfunction is_empty(obj) {\n    return Object.keys(obj).length === 0;\n}\nfunction validate_store(store, name) {\n    if (store != null && typeof store.subscribe !== 'function') {\n        throw new Error(`'${name}' is not a store with a 'subscribe' method`);\n    }\n}\nfunction subscribe(store, ...callbacks) {\n    if (store == null) {\n        return noop;\n    }\n    const unsub = store.subscribe(...callbacks);\n    return unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\nfunction get_store_value(store) {\n    let value;\n    subscribe(store, _ => value = _)();\n    return value;\n}\nfunction component_subscribe(component, store, callback) {\n    component.$$.on_destroy.push(subscribe(store, callback));\n}\nfunction create_slot(definition, ctx, $$scope, fn) {\n    if (definition) {\n        const slot_ctx = get_slot_context(definition, ctx, $$scope, fn);\n        return definition[0](slot_ctx);\n    }\n}\nfunction get_slot_context(definition, ctx, $$scope, fn) {\n    return definition[1] && fn\n        ? assign($$scope.ctx.slice(), definition[1](fn(ctx)))\n        : $$scope.ctx;\n}\nfunction get_slot_changes(definition, $$scope, dirty, fn) {\n    if (definition[2] && fn) {\n        const lets = definition[2](fn(dirty));\n        if ($$scope.dirty === undefined) {\n            return lets;\n        }\n        if (typeof lets === 'object') {\n            const merged = [];\n            const len = Math.max($$scope.dirty.length, lets.length);\n            for (let i = 0; i < len; i += 1) {\n                merged[i] = $$scope.dirty[i] | lets[i];\n            }\n            return merged;\n        }\n        return $$scope.dirty | lets;\n    }\n    return $$scope.dirty;\n}\nfunction update_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn) {\n    if (slot_changes) {\n        const slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n        slot.p(slot_context, slot_changes);\n    }\n}\nfunction update_slot(slot, slot_definition, ctx, $$scope, dirty, get_slot_changes_fn, get_slot_context_fn) {\n    const slot_changes = get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n    update_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn);\n}\nfunction get_all_dirty_from_scope($$scope) {\n    if ($$scope.ctx.length > 32) {\n        const dirty = [];\n        const length = $$scope.ctx.length / 32;\n        for (let i = 0; i < length; i++) {\n            dirty[i] = -1;\n        }\n        return dirty;\n    }\n    return -1;\n}\nfunction exclude_internal_props(props) {\n    const result = {};\n    for (const k in props)\n        if (k[0] !== '$')\n            result[k] = props[k];\n    return result;\n}\nfunction compute_rest_props(props, keys) {\n    const rest = {};\n    keys = new Set(keys);\n    for (const k in props)\n        if (!keys.has(k) && k[0] !== '$')\n            rest[k] = props[k];\n    return rest;\n}\nfunction compute_slots(slots) {\n    const result = {};\n    for (const key in slots) {\n        result[key] = true;\n    }\n    return result;\n}\nfunction once(fn) {\n    let ran = false;\n    return function (...args) {\n        if (ran)\n            return;\n        ran = true;\n        fn.call(this, ...args);\n    };\n}\nfunction null_to_empty(value) {\n    return value == null ? '' : value;\n}\nfunction set_store_value(store, ret, value) {\n    store.set(value);\n    return ret;\n}\nconst has_prop = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\nfunction action_destroyer(action_result) {\n    return action_result && is_function(action_result.destroy) ? action_result.destroy : noop;\n}\nfunction split_css_unit(value) {\n    const split = typeof value === 'string' && value.match(/^\\s*(-?[\\d.]+)([^\\s]*)\\s*$/);\n    return split ? [parseFloat(split[1]), split[2] || 'px'] : [value, 'px'];\n}\nconst contenteditable_truthy_values = ['', true, 1, 'true', 'contenteditable'];\n\nconst is_client = typeof window !== 'undefined';\nlet now = is_client\n    ? () => window.performance.now()\n    : () => Date.now();\nlet raf = is_client ? cb => requestAnimationFrame(cb) : noop;\n// used internally for testing\nfunction set_now(fn) {\n    now = fn;\n}\nfunction set_raf(fn) {\n    raf = fn;\n}\n\nconst tasks = new Set();\nfunction run_tasks(now) {\n    tasks.forEach(task => {\n        if (!task.c(now)) {\n            tasks.delete(task);\n            task.f();\n        }\n    });\n    if (tasks.size !== 0)\n        raf(run_tasks);\n}\n/**\n * For testing purposes only!\n */\nfunction clear_loops() {\n    tasks.clear();\n}\n/**\n * Creates a new task that runs on each raf frame\n * until it returns a falsy value or is aborted\n */\nfunction loop(callback) {\n    let task;\n    if (tasks.size === 0)\n        raf(run_tasks);\n    return {\n        promise: new Promise(fulfill => {\n            tasks.add(task = { c: callback, f: fulfill });\n        }),\n        abort() {\n            tasks.delete(task);\n        }\n    };\n}\n\nconst globals = (typeof window !== 'undefined'\n    ? window\n    : typeof globalThis !== 'undefined'\n        ? globalThis\n        : global);\n\n/**\n * Resize observer singleton.\n * One listener per element only!\n * https://groups.google.com/a/chromium.org/g/blink-dev/c/z6ienONUb5A/m/F5-VcUZtBAAJ\n */\nclass ResizeObserverSingleton {\n    constructor(options) {\n        this.options = options;\n        this._listeners = 'WeakMap' in globals ? new WeakMap() : undefined;\n    }\n    observe(element, listener) {\n        this._listeners.set(element, listener);\n        this._getObserver().observe(element, this.options);\n        return () => {\n            this._listeners.delete(element);\n            this._observer.unobserve(element); // this line can probably be removed\n        };\n    }\n    _getObserver() {\n        var _a;\n        return (_a = this._observer) !== null && _a !== void 0 ? _a : (this._observer = new ResizeObserver((entries) => {\n            var _a;\n            for (const entry of entries) {\n                ResizeObserverSingleton.entries.set(entry.target, entry);\n                (_a = this._listeners.get(entry.target)) === null || _a === void 0 ? void 0 : _a(entry);\n            }\n        }));\n    }\n}\n// Needs to be written like this to pass the tree-shake-test\nResizeObserverSingleton.entries = 'WeakMap' in globals ? new WeakMap() : undefined;\n\n// Track which nodes are claimed during hydration. Unclaimed nodes can then be removed from the DOM\n// at the end of hydration without touching the remaining nodes.\nlet is_hydrating = false;\nfunction start_hydrating() {\n    is_hydrating = true;\n}\nfunction end_hydrating() {\n    is_hydrating = false;\n}\nfunction upper_bound(low, high, key, value) {\n    // Return first index of value larger than input value in the range [low, high)\n    while (low < high) {\n        const mid = low + ((high - low) >> 1);\n        if (key(mid) <= value) {\n            low = mid + 1;\n        }\n        else {\n            high = mid;\n        }\n    }\n    return low;\n}\nfunction init_hydrate(target) {\n    if (target.hydrate_init)\n        return;\n    target.hydrate_init = true;\n    // We know that all children have claim_order values since the unclaimed have been detached if target is not <head>\n    let children = target.childNodes;\n    // If target is <head>, there may be children without claim_order\n    if (target.nodeName === 'HEAD') {\n        const myChildren = [];\n        for (let i = 0; i < children.length; i++) {\n            const node = children[i];\n            if (node.claim_order !== undefined) {\n                myChildren.push(node);\n            }\n        }\n        children = myChildren;\n    }\n    /*\n    * Reorder claimed children optimally.\n    * We can reorder claimed children optimally by finding the longest subsequence of\n    * nodes that are already claimed in order and only moving the rest. The longest\n    * subsequence of nodes that are claimed in order can be found by\n    * computing the longest increasing subsequence of .claim_order values.\n    *\n    * This algorithm is optimal in generating the least amount of reorder operations\n    * possible.\n    *\n    * Proof:\n    * We know that, given a set of reordering operations, the nodes that do not move\n    * always form an increasing subsequence, since they do not move among each other\n    * meaning that they must be already ordered among each other. Thus, the maximal\n    * set of nodes that do not move form a longest increasing subsequence.\n    */\n    // Compute longest increasing subsequence\n    // m: subsequence length j => index k of smallest value that ends an increasing subsequence of length j\n    const m = new Int32Array(children.length + 1);\n    // Predecessor indices + 1\n    const p = new Int32Array(children.length);\n    m[0] = -1;\n    let longest = 0;\n    for (let i = 0; i < children.length; i++) {\n        const current = children[i].claim_order;\n        // Find the largest subsequence length such that it ends in a value less than our current value\n        // upper_bound returns first greater value, so we subtract one\n        // with fast path for when we are on the current longest subsequence\n        const seqLen = ((longest > 0 && children[m[longest]].claim_order <= current) ? longest + 1 : upper_bound(1, longest, idx => children[m[idx]].claim_order, current)) - 1;\n        p[i] = m[seqLen] + 1;\n        const newLen = seqLen + 1;\n        // We can guarantee that current is the smallest value. Otherwise, we would have generated a longer sequence.\n        m[newLen] = i;\n        longest = Math.max(newLen, longest);\n    }\n    // The longest increasing subsequence of nodes (initially reversed)\n    const lis = [];\n    // The rest of the nodes, nodes that will be moved\n    const toMove = [];\n    let last = children.length - 1;\n    for (let cur = m[longest] + 1; cur != 0; cur = p[cur - 1]) {\n        lis.push(children[cur - 1]);\n        for (; last >= cur; last--) {\n            toMove.push(children[last]);\n        }\n        last--;\n    }\n    for (; last >= 0; last--) {\n        toMove.push(children[last]);\n    }\n    lis.reverse();\n    // We sort the nodes being moved to guarantee that their insertion order matches the claim order\n    toMove.sort((a, b) => a.claim_order - b.claim_order);\n    // Finally, we move the nodes\n    for (let i = 0, j = 0; i < toMove.length; i++) {\n        while (j < lis.length && toMove[i].claim_order >= lis[j].claim_order) {\n            j++;\n        }\n        const anchor = j < lis.length ? lis[j] : null;\n        target.insertBefore(toMove[i], anchor);\n    }\n}\nfunction append(target, node) {\n    target.appendChild(node);\n}\nfunction append_styles(target, style_sheet_id, styles) {\n    const append_styles_to = get_root_for_style(target);\n    if (!append_styles_to.getElementById(style_sheet_id)) {\n        const style = element('style');\n        style.id = style_sheet_id;\n        style.textContent = styles;\n        append_stylesheet(append_styles_to, style);\n    }\n}\nfunction get_root_for_style(node) {\n    if (!node)\n        return document;\n    const root = node.getRootNode ? node.getRootNode() : node.ownerDocument;\n    if (root && root.host) {\n        return root;\n    }\n    return node.ownerDocument;\n}\nfunction append_empty_stylesheet(node) {\n    const style_element = element('style');\n    append_stylesheet(get_root_for_style(node), style_element);\n    return style_element.sheet;\n}\nfunction append_stylesheet(node, style) {\n    append(node.head || node, style);\n    return style.sheet;\n}\nfunction append_hydration(target, node) {\n    if (is_hydrating) {\n        init_hydrate(target);\n        if ((target.actual_end_child === undefined) || ((target.actual_end_child !== null) && (target.actual_end_child.parentNode !== target))) {\n            target.actual_end_child = target.firstChild;\n        }\n        // Skip nodes of undefined ordering\n        while ((target.actual_end_child !== null) && (target.actual_end_child.claim_order === undefined)) {\n            target.actual_end_child = target.actual_end_child.nextSibling;\n        }\n        if (node !== target.actual_end_child) {\n            // We only insert if the ordering of this node should be modified or the parent node is not target\n            if (node.claim_order !== undefined || node.parentNode !== target) {\n                target.insertBefore(node, target.actual_end_child);\n            }\n        }\n        else {\n            target.actual_end_child = node.nextSibling;\n        }\n    }\n    else if (node.parentNode !== target || node.nextSibling !== null) {\n        target.appendChild(node);\n    }\n}\nfunction insert(target, node, anchor) {\n    target.insertBefore(node, anchor || null);\n}\nfunction insert_hydration(target, node, anchor) {\n    if (is_hydrating && !anchor) {\n        append_hydration(target, node);\n    }\n    else if (node.parentNode !== target || node.nextSibling != anchor) {\n        target.insertBefore(node, anchor || null);\n    }\n}\nfunction detach(node) {\n    if (node.parentNode) {\n        node.parentNode.removeChild(node);\n    }\n}\nfunction destroy_each(iterations, detaching) {\n    for (let i = 0; i < iterations.length; i += 1) {\n        if (iterations[i])\n            iterations[i].d(detaching);\n    }\n}\nfunction element(name) {\n    return document.createElement(name);\n}\nfunction element_is(name, is) {\n    return document.createElement(name, { is });\n}\nfunction object_without_properties(obj, exclude) {\n    const target = {};\n    for (const k in obj) {\n        if (has_prop(obj, k)\n            // @ts-ignore\n            && exclude.indexOf(k) === -1) {\n            // @ts-ignore\n            target[k] = obj[k];\n        }\n    }\n    return target;\n}\nfunction svg_element(name) {\n    return document.createElementNS('http://www.w3.org/2000/svg', name);\n}\nfunction text(data) {\n    return document.createTextNode(data);\n}\nfunction space() {\n    return text(' ');\n}\nfunction empty() {\n    return text('');\n}\nfunction comment(content) {\n    return document.createComment(content);\n}\nfunction listen(node, event, handler, options) {\n    node.addEventListener(event, handler, options);\n    return () => node.removeEventListener(event, handler, options);\n}\nfunction prevent_default(fn) {\n    return function (event) {\n        event.preventDefault();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_propagation(fn) {\n    return function (event) {\n        event.stopPropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_immediate_propagation(fn) {\n    return function (event) {\n        event.stopImmediatePropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction self(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.target === this)\n            fn.call(this, event);\n    };\n}\nfunction trusted(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.isTrusted)\n            fn.call(this, event);\n    };\n}\nfunction attr(node, attribute, value) {\n    if (value == null)\n        node.removeAttribute(attribute);\n    else if (node.getAttribute(attribute) !== value)\n        node.setAttribute(attribute, value);\n}\n/**\n * List of attributes that should always be set through the attr method,\n * because updating them through the property setter doesn't work reliably.\n * In the example of `width`/`height`, the problem is that the setter only\n * accepts numeric values, but the attribute can also be set to a string like `50%`.\n * If this list becomes too big, rethink this approach.\n */\nconst always_set_through_set_attribute = ['width', 'height'];\nfunction set_attributes(node, attributes) {\n    // @ts-ignore\n    const descriptors = Object.getOwnPropertyDescriptors(node.__proto__);\n    for (const key in attributes) {\n        if (attributes[key] == null) {\n            node.removeAttribute(key);\n        }\n        else if (key === 'style') {\n            node.style.cssText = attributes[key];\n        }\n        else if (key === '__value') {\n            node.value = node[key] = attributes[key];\n        }\n        else if (descriptors[key] && descriptors[key].set && always_set_through_set_attribute.indexOf(key) === -1) {\n            node[key] = attributes[key];\n        }\n        else {\n            attr(node, key, attributes[key]);\n        }\n    }\n}\nfunction set_svg_attributes(node, attributes) {\n    for (const key in attributes) {\n        attr(node, key, attributes[key]);\n    }\n}\nfunction set_custom_element_data_map(node, data_map) {\n    Object.keys(data_map).forEach((key) => {\n        set_custom_element_data(node, key, data_map[key]);\n    });\n}\nfunction set_custom_element_data(node, prop, value) {\n    if (prop in node) {\n        node[prop] = typeof node[prop] === 'boolean' && value === '' ? true : value;\n    }\n    else {\n        attr(node, prop, value);\n    }\n}\nfunction set_dynamic_element_data(tag) {\n    return (/-/.test(tag)) ? set_custom_element_data_map : set_attributes;\n}\nfunction xlink_attr(node, attribute, value) {\n    node.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\nfunction get_binding_group_value(group, __value, checked) {\n    const value = new Set();\n    for (let i = 0; i < group.length; i += 1) {\n        if (group[i].checked)\n            value.add(group[i].__value);\n    }\n    if (!checked) {\n        value.delete(__value);\n    }\n    return Array.from(value);\n}\nfunction init_binding_group(group) {\n    let _inputs;\n    return {\n        /* push */ p(...inputs) {\n            _inputs = inputs;\n            _inputs.forEach(input => group.push(input));\n        },\n        /* remove */ r() {\n            _inputs.forEach(input => group.splice(group.indexOf(input), 1));\n        }\n    };\n}\nfunction init_binding_group_dynamic(group, indexes) {\n    let _group = get_binding_group(group);\n    let _inputs;\n    function get_binding_group(group) {\n        for (let i = 0; i < indexes.length; i++) {\n            group = group[indexes[i]] = group[indexes[i]] || [];\n        }\n        return group;\n    }\n    function push() {\n        _inputs.forEach(input => _group.push(input));\n    }\n    function remove() {\n        _inputs.forEach(input => _group.splice(_group.indexOf(input), 1));\n    }\n    return {\n        /* update */ u(new_indexes) {\n            indexes = new_indexes;\n            const new_group = get_binding_group(group);\n            if (new_group !== _group) {\n                remove();\n                _group = new_group;\n                push();\n            }\n        },\n        /* push */ p(...inputs) {\n            _inputs = inputs;\n            push();\n        },\n        /* remove */ r: remove\n    };\n}\nfunction to_number(value) {\n    return value === '' ? null : +value;\n}\nfunction time_ranges_to_array(ranges) {\n    const array = [];\n    for (let i = 0; i < ranges.length; i += 1) {\n        array.push({ start: ranges.start(i), end: ranges.end(i) });\n    }\n    return array;\n}\nfunction children(element) {\n    return Array.from(element.childNodes);\n}\nfunction init_claim_info(nodes) {\n    if (nodes.claim_info === undefined) {\n        nodes.claim_info = { last_index: 0, total_claimed: 0 };\n    }\n}\nfunction claim_node(nodes, predicate, processNode, createNode, dontUpdateLastIndex = false) {\n    // Try to find nodes in an order such that we lengthen the longest increasing subsequence\n    init_claim_info(nodes);\n    const resultNode = (() => {\n        // We first try to find an element after the previous one\n        for (let i = nodes.claim_info.last_index; i < nodes.length; i++) {\n            const node = nodes[i];\n            if (predicate(node)) {\n                const replacement = processNode(node);\n                if (replacement === undefined) {\n                    nodes.splice(i, 1);\n                }\n                else {\n                    nodes[i] = replacement;\n                }\n                if (!dontUpdateLastIndex) {\n                    nodes.claim_info.last_index = i;\n                }\n                return node;\n            }\n        }\n        // Otherwise, we try to find one before\n        // We iterate in reverse so that we don't go too far back\n        for (let i = nodes.claim_info.last_index - 1; i >= 0; i--) {\n            const node = nodes[i];\n            if (predicate(node)) {\n                const replacement = processNode(node);\n                if (replacement === undefined) {\n                    nodes.splice(i, 1);\n                }\n                else {\n                    nodes[i] = replacement;\n                }\n                if (!dontUpdateLastIndex) {\n                    nodes.claim_info.last_index = i;\n                }\n                else if (replacement === undefined) {\n                    // Since we spliced before the last_index, we decrease it\n                    nodes.claim_info.last_index--;\n                }\n                return node;\n            }\n        }\n        // If we can't find any matching node, we create a new one\n        return createNode();\n    })();\n    resultNode.claim_order = nodes.claim_info.total_claimed;\n    nodes.claim_info.total_claimed += 1;\n    return resultNode;\n}\nfunction claim_element_base(nodes, name, attributes, create_element) {\n    return claim_node(nodes, (node) => node.nodeName === name, (node) => {\n        const remove = [];\n        for (let j = 0; j < node.attributes.length; j++) {\n            const attribute = node.attributes[j];\n            if (!attributes[attribute.name]) {\n                remove.push(attribute.name);\n            }\n        }\n        remove.forEach(v => node.removeAttribute(v));\n        return undefined;\n    }, () => create_element(name));\n}\nfunction claim_element(nodes, name, attributes) {\n    return claim_element_base(nodes, name, attributes, element);\n}\nfunction claim_svg_element(nodes, name, attributes) {\n    return claim_element_base(nodes, name, attributes, svg_element);\n}\nfunction claim_text(nodes, data) {\n    return claim_node(nodes, (node) => node.nodeType === 3, (node) => {\n        const dataStr = '' + data;\n        if (node.data.startsWith(dataStr)) {\n            if (node.data.length !== dataStr.length) {\n                return node.splitText(dataStr.length);\n            }\n        }\n        else {\n            node.data = dataStr;\n        }\n    }, () => text(data), true // Text nodes should not update last index since it is likely not worth it to eliminate an increasing subsequence of actual elements\n    );\n}\nfunction claim_space(nodes) {\n    return claim_text(nodes, ' ');\n}\nfunction claim_comment(nodes, data) {\n    return claim_node(nodes, (node) => node.nodeType === 8, (node) => {\n        node.data = '' + data;\n        return undefined;\n    }, () => comment(data), true);\n}\nfunction find_comment(nodes, text, start) {\n    for (let i = start; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeType === 8 /* comment node */ && node.textContent.trim() === text) {\n            return i;\n        }\n    }\n    return nodes.length;\n}\nfunction claim_html_tag(nodes, is_svg) {\n    // find html opening tag\n    const start_index = find_comment(nodes, 'HTML_TAG_START', 0);\n    const end_index = find_comment(nodes, 'HTML_TAG_END', start_index);\n    if (start_index === end_index) {\n        return new HtmlTagHydration(undefined, is_svg);\n    }\n    init_claim_info(nodes);\n    const html_tag_nodes = nodes.splice(start_index, end_index - start_index + 1);\n    detach(html_tag_nodes[0]);\n    detach(html_tag_nodes[html_tag_nodes.length - 1]);\n    const claimed_nodes = html_tag_nodes.slice(1, html_tag_nodes.length - 1);\n    for (const n of claimed_nodes) {\n        n.claim_order = nodes.claim_info.total_claimed;\n        nodes.claim_info.total_claimed += 1;\n    }\n    return new HtmlTagHydration(claimed_nodes, is_svg);\n}\nfunction set_data(text, data) {\n    data = '' + data;\n    if (text.data === data)\n        return;\n    text.data = data;\n}\nfunction set_data_contenteditable(text, data) {\n    data = '' + data;\n    if (text.wholeText === data)\n        return;\n    text.data = data;\n}\nfunction set_data_maybe_contenteditable(text, data, attr_value) {\n    if (~contenteditable_truthy_values.indexOf(attr_value)) {\n        set_data_contenteditable(text, data);\n    }\n    else {\n        set_data(text, data);\n    }\n}\nfunction set_input_value(input, value) {\n    input.value = value == null ? '' : value;\n}\nfunction set_input_type(input, type) {\n    try {\n        input.type = type;\n    }\n    catch (e) {\n        // do nothing\n    }\n}\nfunction set_style(node, key, value, important) {\n    if (value == null) {\n        node.style.removeProperty(key);\n    }\n    else {\n        node.style.setProperty(key, value, important ? 'important' : '');\n    }\n}\nfunction select_option(select, value, mounting) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        if (option.__value === value) {\n            option.selected = true;\n            return;\n        }\n    }\n    if (!mounting || value !== undefined) {\n        select.selectedIndex = -1; // no option should be selected\n    }\n}\nfunction select_options(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        option.selected = ~value.indexOf(option.__value);\n    }\n}\nfunction select_value(select) {\n    const selected_option = select.querySelector(':checked');\n    return selected_option && selected_option.__value;\n}\nfunction select_multiple_value(select) {\n    return [].map.call(select.querySelectorAll(':checked'), option => option.__value);\n}\n// unfortunately this can't be a constant as that wouldn't be tree-shakeable\n// so we cache the result instead\nlet crossorigin;\nfunction is_crossorigin() {\n    if (crossorigin === undefined) {\n        crossorigin = false;\n        try {\n            if (typeof window !== 'undefined' && window.parent) {\n                void window.parent.document;\n            }\n        }\n        catch (error) {\n            crossorigin = true;\n        }\n    }\n    return crossorigin;\n}\nfunction add_iframe_resize_listener(node, fn) {\n    const computed_style = getComputedStyle(node);\n    if (computed_style.position === 'static') {\n        node.style.position = 'relative';\n    }\n    const iframe = element('iframe');\n    iframe.setAttribute('style', 'display: block; position: absolute; top: 0; left: 0; width: 100%; height: 100%; ' +\n        'overflow: hidden; border: 0; opacity: 0; pointer-events: none; z-index: -1;');\n    iframe.setAttribute('aria-hidden', 'true');\n    iframe.tabIndex = -1;\n    const crossorigin = is_crossorigin();\n    let unsubscribe;\n    if (crossorigin) {\n        iframe.src = \"data:text/html,<script>onresize=function(){parent.postMessage(0,'*')}</script>\";\n        unsubscribe = listen(window, 'message', (event) => {\n            if (event.source === iframe.contentWindow)\n                fn();\n        });\n    }\n    else {\n        iframe.src = 'about:blank';\n        iframe.onload = () => {\n            unsubscribe = listen(iframe.contentWindow, 'resize', fn);\n            // make sure an initial resize event is fired _after_ the iframe is loaded (which is asynchronous)\n            // see https://github.com/sveltejs/svelte/issues/4233\n            fn();\n        };\n    }\n    append(node, iframe);\n    return () => {\n        if (crossorigin) {\n            unsubscribe();\n        }\n        else if (unsubscribe && iframe.contentWindow) {\n            unsubscribe();\n        }\n        detach(iframe);\n    };\n}\nconst resize_observer_content_box = /* @__PURE__ */ new ResizeObserverSingleton({ box: 'content-box' });\nconst resize_observer_border_box = /* @__PURE__ */ new ResizeObserverSingleton({ box: 'border-box' });\nconst resize_observer_device_pixel_content_box = /* @__PURE__ */ new ResizeObserverSingleton({ box: 'device-pixel-content-box' });\nfunction toggle_class(element, name, toggle) {\n    element.classList[toggle ? 'add' : 'remove'](name);\n}\nfunction custom_event(type, detail, { bubbles = false, cancelable = false } = {}) {\n    const e = document.createEvent('CustomEvent');\n    e.initCustomEvent(type, bubbles, cancelable, detail);\n    return e;\n}\nfunction query_selector_all(selector, parent = document.body) {\n    return Array.from(parent.querySelectorAll(selector));\n}\nfunction head_selector(nodeId, head) {\n    const result = [];\n    let started = 0;\n    for (const node of head.childNodes) {\n        if (node.nodeType === 8 /* comment node */) {\n            const comment = node.textContent.trim();\n            if (comment === `HEAD_${nodeId}_END`) {\n                started -= 1;\n                result.push(node);\n            }\n            else if (comment === `HEAD_${nodeId}_START`) {\n                started += 1;\n                result.push(node);\n            }\n        }\n        else if (started > 0) {\n            result.push(node);\n        }\n    }\n    return result;\n}\nclass HtmlTag {\n    constructor(is_svg = false) {\n        this.is_svg = false;\n        this.is_svg = is_svg;\n        this.e = this.n = null;\n    }\n    c(html) {\n        this.h(html);\n    }\n    m(html, target, anchor = null) {\n        if (!this.e) {\n            if (this.is_svg)\n                this.e = svg_element(target.nodeName);\n            /** #7364  target for <template> may be provided as #document-fragment(11) */\n            else\n                this.e = element((target.nodeType === 11 ? 'TEMPLATE' : target.nodeName));\n            this.t = target.tagName !== 'TEMPLATE' ? target : target.content;\n            this.c(html);\n        }\n        this.i(anchor);\n    }\n    h(html) {\n        this.e.innerHTML = html;\n        this.n = Array.from(this.e.nodeName === 'TEMPLATE' ? this.e.content.childNodes : this.e.childNodes);\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert(this.t, this.n[i], anchor);\n        }\n    }\n    p(html) {\n        this.d();\n        this.h(html);\n        this.i(this.a);\n    }\n    d() {\n        this.n.forEach(detach);\n    }\n}\nclass HtmlTagHydration extends HtmlTag {\n    constructor(claimed_nodes, is_svg = false) {\n        super(is_svg);\n        this.e = this.n = null;\n        this.l = claimed_nodes;\n    }\n    c(html) {\n        if (this.l) {\n            this.n = this.l;\n        }\n        else {\n            super.c(html);\n        }\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert_hydration(this.t, this.n[i], anchor);\n        }\n    }\n}\nfunction attribute_to_object(attributes) {\n    const result = {};\n    for (const attribute of attributes) {\n        result[attribute.name] = attribute.value;\n    }\n    return result;\n}\nfunction get_custom_elements_slots(element) {\n    const result = {};\n    element.childNodes.forEach((node) => {\n        result[node.slot || 'default'] = true;\n    });\n    return result;\n}\nfunction construct_svelte_component(component, props) {\n    return new component(props);\n}\n\n// we need to store the information for multiple documents because a Svelte application could also contain iframes\n// https://github.com/sveltejs/svelte/issues/3624\nconst managed_styles = new Map();\nlet active = 0;\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\nfunction hash(str) {\n    let hash = 5381;\n    let i = str.length;\n    while (i--)\n        hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n    return hash >>> 0;\n}\nfunction create_style_information(doc, node) {\n    const info = { stylesheet: append_empty_stylesheet(node), rules: {} };\n    managed_styles.set(doc, info);\n    return info;\n}\nfunction create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {\n    const step = 16.666 / duration;\n    let keyframes = '{\\n';\n    for (let p = 0; p <= 1; p += step) {\n        const t = a + (b - a) * ease(p);\n        keyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\n    }\n    const rule = keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\n    const name = `__svelte_${hash(rule)}_${uid}`;\n    const doc = get_root_for_style(node);\n    const { stylesheet, rules } = managed_styles.get(doc) || create_style_information(doc, node);\n    if (!rules[name]) {\n        rules[name] = true;\n        stylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);\n    }\n    const animation = node.style.animation || '';\n    node.style.animation = `${animation ? `${animation}, ` : ''}${name} ${duration}ms linear ${delay}ms 1 both`;\n    active += 1;\n    return name;\n}\nfunction delete_rule(node, name) {\n    const previous = (node.style.animation || '').split(', ');\n    const next = previous.filter(name\n        ? anim => anim.indexOf(name) < 0 // remove specific animation\n        : anim => anim.indexOf('__svelte') === -1 // remove all Svelte animations\n    );\n    const deleted = previous.length - next.length;\n    if (deleted) {\n        node.style.animation = next.join(', ');\n        active -= deleted;\n        if (!active)\n            clear_rules();\n    }\n}\nfunction clear_rules() {\n    raf(() => {\n        if (active)\n            return;\n        managed_styles.forEach(info => {\n            const { ownerNode } = info.stylesheet;\n            // there is no ownerNode if it runs on jsdom.\n            if (ownerNode)\n                detach(ownerNode);\n        });\n        managed_styles.clear();\n    });\n}\n\nfunction create_animation(node, from, fn, params) {\n    if (!from)\n        return noop;\n    const to = node.getBoundingClientRect();\n    if (from.left === to.left && from.right === to.right && from.top === to.top && from.bottom === to.bottom)\n        return noop;\n    const { delay = 0, duration = 300, easing = identity, \n    // @ts-ignore todo: should this be separated from destructuring? Or start/end added to public api and documentation?\n    start: start_time = now() + delay, \n    // @ts-ignore todo:\n    end = start_time + duration, tick = noop, css } = fn(node, { from, to }, params);\n    let running = true;\n    let started = false;\n    let name;\n    function start() {\n        if (css) {\n            name = create_rule(node, 0, 1, duration, delay, easing, css);\n        }\n        if (!delay) {\n            started = true;\n        }\n    }\n    function stop() {\n        if (css)\n            delete_rule(node, name);\n        running = false;\n    }\n    loop(now => {\n        if (!started && now >= start_time) {\n            started = true;\n        }\n        if (started && now >= end) {\n            tick(1, 0);\n            stop();\n        }\n        if (!running) {\n            return false;\n        }\n        if (started) {\n            const p = now - start_time;\n            const t = 0 + 1 * easing(p / duration);\n            tick(t, 1 - t);\n        }\n        return true;\n    });\n    start();\n    tick(0, 1);\n    return stop;\n}\nfunction fix_position(node) {\n    const style = getComputedStyle(node);\n    if (style.position !== 'absolute' && style.position !== 'fixed') {\n        const { width, height } = style;\n        const a = node.getBoundingClientRect();\n        node.style.position = 'absolute';\n        node.style.width = width;\n        node.style.height = height;\n        add_transform(node, a);\n    }\n}\nfunction add_transform(node, a) {\n    const b = node.getBoundingClientRect();\n    if (a.left !== b.left || a.top !== b.top) {\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        node.style.transform = `${transform} translate(${a.left - b.left}px, ${a.top - b.top}px)`;\n    }\n}\n\nlet current_component;\nfunction set_current_component(component) {\n    current_component = component;\n}\nfunction get_current_component() {\n    if (!current_component)\n        throw new Error('Function called outside component initialization');\n    return current_component;\n}\n/**\n * Schedules a callback to run immediately before the component is updated after any state change.\n *\n * The first time the callback runs will be before the initial `onMount`\n *\n * https://svelte.dev/docs#run-time-svelte-beforeupdate\n */\nfunction beforeUpdate(fn) {\n    get_current_component().$$.before_update.push(fn);\n}\n/**\n * The `onMount` function schedules a callback to run as soon as the component has been mounted to the DOM.\n * It must be called during the component's initialisation (but doesn't need to live *inside* the component;\n * it can be called from an external module).\n *\n * `onMount` does not run inside a [server-side component](/docs#run-time-server-side-component-api).\n *\n * https://svelte.dev/docs#run-time-svelte-onmount\n */\nfunction onMount(fn) {\n    get_current_component().$$.on_mount.push(fn);\n}\n/**\n * Schedules a callback to run immediately after the component has been updated.\n *\n * The first time the callback runs will be after the initial `onMount`\n */\nfunction afterUpdate(fn) {\n    get_current_component().$$.after_update.push(fn);\n}\n/**\n * Schedules a callback to run immediately before the component is unmounted.\n *\n * Out of `onMount`, `beforeUpdate`, `afterUpdate` and `onDestroy`, this is the\n * only one that runs inside a server-side component.\n *\n * https://svelte.dev/docs#run-time-svelte-ondestroy\n */\nfunction onDestroy(fn) {\n    get_current_component().$$.on_destroy.push(fn);\n}\n/**\n * Creates an event dispatcher that can be used to dispatch [component events](/docs#template-syntax-component-directives-on-eventname).\n * Event dispatchers are functions that can take two arguments: `name` and `detail`.\n *\n * Component events created with `createEventDispatcher` create a\n * [CustomEvent](https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent).\n * These events do not [bubble](https://developer.mozilla.org/en-US/docs/Learn/JavaScript/Building_blocks/Events#Event_bubbling_and_capture).\n * The `detail` argument corresponds to the [CustomEvent.detail](https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent/detail)\n * property and can contain any type of data.\n *\n * https://svelte.dev/docs#run-time-svelte-createeventdispatcher\n */\nfunction createEventDispatcher() {\n    const component = get_current_component();\n    return (type, detail, { cancelable = false } = {}) => {\n        const callbacks = component.$$.callbacks[type];\n        if (callbacks) {\n            // TODO are there situations where events could be dispatched\n            // in a server (non-DOM) environment?\n            const event = custom_event(type, detail, { cancelable });\n            callbacks.slice().forEach(fn => {\n                fn.call(component, event);\n            });\n            return !event.defaultPrevented;\n        }\n        return true;\n    };\n}\n/**\n * Associates an arbitrary `context` object with the current component and the specified `key`\n * and returns that object. The context is then available to children of the component\n * (including slotted content) with `getContext`.\n *\n * Like lifecycle functions, this must be called during component initialisation.\n *\n * https://svelte.dev/docs#run-time-svelte-setcontext\n */\nfunction setContext(key, context) {\n    get_current_component().$$.context.set(key, context);\n    return context;\n}\n/**\n * Retrieves the context that belongs to the closest parent component with the specified `key`.\n * Must be called during component initialisation.\n *\n * https://svelte.dev/docs#run-time-svelte-getcontext\n */\nfunction getContext(key) {\n    return get_current_component().$$.context.get(key);\n}\n/**\n * Retrieves the whole context map that belongs to the closest parent component.\n * Must be called during component initialisation. Useful, for example, if you\n * programmatically create a component and want to pass the existing context to it.\n *\n * https://svelte.dev/docs#run-time-svelte-getallcontexts\n */\nfunction getAllContexts() {\n    return get_current_component().$$.context;\n}\n/**\n * Checks whether a given `key` has been set in the context of a parent component.\n * Must be called during component initialisation.\n *\n * https://svelte.dev/docs#run-time-svelte-hascontext\n */\nfunction hasContext(key) {\n    return get_current_component().$$.context.has(key);\n}\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\nfunction bubble(component, event) {\n    const callbacks = component.$$.callbacks[event.type];\n    if (callbacks) {\n        // @ts-ignore\n        callbacks.slice().forEach(fn => fn.call(this, event));\n    }\n}\n\nconst dirty_components = [];\nconst intros = { enabled: false };\nconst binding_callbacks = [];\nlet render_callbacks = [];\nconst flush_callbacks = [];\nconst resolved_promise = /* @__PURE__ */ Promise.resolve();\nlet update_scheduled = false;\nfunction schedule_update() {\n    if (!update_scheduled) {\n        update_scheduled = true;\n        resolved_promise.then(flush);\n    }\n}\nfunction tick() {\n    schedule_update();\n    return resolved_promise;\n}\nfunction add_render_callback(fn) {\n    render_callbacks.push(fn);\n}\nfunction add_flush_callback(fn) {\n    flush_callbacks.push(fn);\n}\n// flush() calls callbacks in this order:\n// 1. All beforeUpdate callbacks, in order: parents before children\n// 2. All bind:this callbacks, in reverse order: children before parents.\n// 3. All afterUpdate callbacks, in order: parents before children. EXCEPT\n//    for afterUpdates called during the initial onMount, which are called in\n//    reverse order: children before parents.\n// Since callbacks might update component values, which could trigger another\n// call to flush(), the following steps guard against this:\n// 1. During beforeUpdate, any updated components will be added to the\n//    dirty_components array and will cause a reentrant call to flush(). Because\n//    the flush index is kept outside the function, the reentrant call will pick\n//    up where the earlier call left off and go through all dirty components. The\n//    current_component value is saved and restored so that the reentrant call will\n//    not interfere with the \"parent\" flush() call.\n// 2. bind:this callbacks cannot trigger new flush() calls.\n// 3. During afterUpdate, any updated components will NOT have their afterUpdate\n//    callback called a second time; the seen_callbacks set, outside the flush()\n//    function, guarantees this behavior.\nconst seen_callbacks = new Set();\nlet flushidx = 0; // Do *not* move this inside the flush() function\nfunction flush() {\n    // Do not reenter flush while dirty components are updated, as this can\n    // result in an infinite loop. Instead, let the inner flush handle it.\n    // Reentrancy is ok afterwards for bindings etc.\n    if (flushidx !== 0) {\n        return;\n    }\n    const saved_component = current_component;\n    do {\n        // first, call beforeUpdate functions\n        // and update components\n        try {\n            while (flushidx < dirty_components.length) {\n                const component = dirty_components[flushidx];\n                flushidx++;\n                set_current_component(component);\n                update(component.$$);\n            }\n        }\n        catch (e) {\n            // reset dirty state to not end up in a deadlocked state and then rethrow\n            dirty_components.length = 0;\n            flushidx = 0;\n            throw e;\n        }\n        set_current_component(null);\n        dirty_components.length = 0;\n        flushidx = 0;\n        while (binding_callbacks.length)\n            binding_callbacks.pop()();\n        // then, once components are updated, call\n        // afterUpdate functions. This may cause\n        // subsequent updates...\n        for (let i = 0; i < render_callbacks.length; i += 1) {\n            const callback = render_callbacks[i];\n            if (!seen_callbacks.has(callback)) {\n                // ...so guard against infinite loops\n                seen_callbacks.add(callback);\n                callback();\n            }\n        }\n        render_callbacks.length = 0;\n    } while (dirty_components.length);\n    while (flush_callbacks.length) {\n        flush_callbacks.pop()();\n    }\n    update_scheduled = false;\n    seen_callbacks.clear();\n    set_current_component(saved_component);\n}\nfunction update($$) {\n    if ($$.fragment !== null) {\n        $$.update();\n        run_all($$.before_update);\n        const dirty = $$.dirty;\n        $$.dirty = [-1];\n        $$.fragment && $$.fragment.p($$.ctx, dirty);\n        $$.after_update.forEach(add_render_callback);\n    }\n}\n/**\n * Useful for example to execute remaining `afterUpdate` callbacks before executing `destroy`.\n */\nfunction flush_render_callbacks(fns) {\n    const filtered = [];\n    const targets = [];\n    render_callbacks.forEach((c) => fns.indexOf(c) === -1 ? filtered.push(c) : targets.push(c));\n    targets.forEach((c) => c());\n    render_callbacks = filtered;\n}\n\nlet promise;\nfunction wait() {\n    if (!promise) {\n        promise = Promise.resolve();\n        promise.then(() => {\n            promise = null;\n        });\n    }\n    return promise;\n}\nfunction dispatch(node, direction, kind) {\n    node.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\nconst outroing = new Set();\nlet outros;\nfunction group_outros() {\n    outros = {\n        r: 0,\n        c: [],\n        p: outros // parent group\n    };\n}\nfunction check_outros() {\n    if (!outros.r) {\n        run_all(outros.c);\n    }\n    outros = outros.p;\n}\nfunction transition_in(block, local) {\n    if (block && block.i) {\n        outroing.delete(block);\n        block.i(local);\n    }\n}\nfunction transition_out(block, local, detach, callback) {\n    if (block && block.o) {\n        if (outroing.has(block))\n            return;\n        outroing.add(block);\n        outros.c.push(() => {\n            outroing.delete(block);\n            if (callback) {\n                if (detach)\n                    block.d(1);\n                callback();\n            }\n        });\n        block.o(local);\n    }\n    else if (callback) {\n        callback();\n    }\n}\nconst null_transition = { duration: 0 };\nfunction create_in_transition(node, fn, params) {\n    const options = { direction: 'in' };\n    let config = fn(node, params, options);\n    let running = false;\n    let animation_name;\n    let task;\n    let uid = 0;\n    function cleanup() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n        tick(0, 1);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        if (task)\n            task.abort();\n        running = true;\n        add_render_callback(() => dispatch(node, true, 'start'));\n        task = loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(1, 0);\n                    dispatch(node, true, 'end');\n                    cleanup();\n                    return running = false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(t, 1 - t);\n                }\n            }\n            return running;\n        });\n    }\n    let started = false;\n    return {\n        start() {\n            if (started)\n                return;\n            started = true;\n            delete_rule(node);\n            if (is_function(config)) {\n                config = config(options);\n                wait().then(go);\n            }\n            else {\n                go();\n            }\n        },\n        invalidate() {\n            started = false;\n        },\n        end() {\n            if (running) {\n                cleanup();\n                running = false;\n            }\n        }\n    };\n}\nfunction create_out_transition(node, fn, params) {\n    const options = { direction: 'out' };\n    let config = fn(node, params, options);\n    let running = true;\n    let animation_name;\n    const group = outros;\n    group.r += 1;\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        add_render_callback(() => dispatch(node, false, 'start'));\n        loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(0, 1);\n                    dispatch(node, false, 'end');\n                    if (!--group.r) {\n                        // this will result in `end()` being called,\n                        // so we don't need to clean up here\n                        run_all(group.c);\n                    }\n                    return false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(1 - t, t);\n                }\n            }\n            return running;\n        });\n    }\n    if (is_function(config)) {\n        wait().then(() => {\n            // @ts-ignore\n            config = config(options);\n            go();\n        });\n    }\n    else {\n        go();\n    }\n    return {\n        end(reset) {\n            if (reset && config.tick) {\n                config.tick(1, 0);\n            }\n            if (running) {\n                if (animation_name)\n                    delete_rule(node, animation_name);\n                running = false;\n            }\n        }\n    };\n}\nfunction create_bidirectional_transition(node, fn, params, intro) {\n    const options = { direction: 'both' };\n    let config = fn(node, params, options);\n    let t = intro ? 0 : 1;\n    let running_program = null;\n    let pending_program = null;\n    let animation_name = null;\n    function clear_animation() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function init(program, duration) {\n        const d = (program.b - t);\n        duration *= Math.abs(d);\n        return {\n            a: t,\n            b: program.b,\n            d,\n            duration,\n            start: program.start,\n            end: program.start + duration,\n            group: program.group\n        };\n    }\n    function go(b) {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        const program = {\n            start: now() + delay,\n            b\n        };\n        if (!b) {\n            // @ts-ignore todo: improve typings\n            program.group = outros;\n            outros.r += 1;\n        }\n        if (running_program || pending_program) {\n            pending_program = program;\n        }\n        else {\n            // if this is an intro, and there's a delay, we need to do\n            // an initial tick and/or apply CSS animation immediately\n            if (css) {\n                clear_animation();\n                animation_name = create_rule(node, t, b, duration, delay, easing, css);\n            }\n            if (b)\n                tick(0, 1);\n            running_program = init(program, duration);\n            add_render_callback(() => dispatch(node, b, 'start'));\n            loop(now => {\n                if (pending_program && now > pending_program.start) {\n                    running_program = init(pending_program, duration);\n                    pending_program = null;\n                    dispatch(node, running_program.b, 'start');\n                    if (css) {\n                        clear_animation();\n                        animation_name = create_rule(node, t, running_program.b, running_program.duration, 0, easing, config.css);\n                    }\n                }\n                if (running_program) {\n                    if (now >= running_program.end) {\n                        tick(t = running_program.b, 1 - t);\n                        dispatch(node, running_program.b, 'end');\n                        if (!pending_program) {\n                            // we're done\n                            if (running_program.b) {\n                                // intro — we can tidy up immediately\n                                clear_animation();\n                            }\n                            else {\n                                // outro — needs to be coordinated\n                                if (!--running_program.group.r)\n                                    run_all(running_program.group.c);\n                            }\n                        }\n                        running_program = null;\n                    }\n                    else if (now >= running_program.start) {\n                        const p = now - running_program.start;\n                        t = running_program.a + running_program.d * easing(p / running_program.duration);\n                        tick(t, 1 - t);\n                    }\n                }\n                return !!(running_program || pending_program);\n            });\n        }\n    }\n    return {\n        run(b) {\n            if (is_function(config)) {\n                wait().then(() => {\n                    // @ts-ignore\n                    config = config(options);\n                    go(b);\n                });\n            }\n            else {\n                go(b);\n            }\n        },\n        end() {\n            clear_animation();\n            running_program = pending_program = null;\n        }\n    };\n}\n\nfunction handle_promise(promise, info) {\n    const token = info.token = {};\n    function update(type, index, key, value) {\n        if (info.token !== token)\n            return;\n        info.resolved = value;\n        let child_ctx = info.ctx;\n        if (key !== undefined) {\n            child_ctx = child_ctx.slice();\n            child_ctx[key] = value;\n        }\n        const block = type && (info.current = type)(child_ctx);\n        let needs_flush = false;\n        if (info.block) {\n            if (info.blocks) {\n                info.blocks.forEach((block, i) => {\n                    if (i !== index && block) {\n                        group_outros();\n                        transition_out(block, 1, 1, () => {\n                            if (info.blocks[i] === block) {\n                                info.blocks[i] = null;\n                            }\n                        });\n                        check_outros();\n                    }\n                });\n            }\n            else {\n                info.block.d(1);\n            }\n            block.c();\n            transition_in(block, 1);\n            block.m(info.mount(), info.anchor);\n            needs_flush = true;\n        }\n        info.block = block;\n        if (info.blocks)\n            info.blocks[index] = block;\n        if (needs_flush) {\n            flush();\n        }\n    }\n    if (is_promise(promise)) {\n        const current_component = get_current_component();\n        promise.then(value => {\n            set_current_component(current_component);\n            update(info.then, 1, info.value, value);\n            set_current_component(null);\n        }, error => {\n            set_current_component(current_component);\n            update(info.catch, 2, info.error, error);\n            set_current_component(null);\n            if (!info.hasCatch) {\n                throw error;\n            }\n        });\n        // if we previously had a then/catch block, destroy it\n        if (info.current !== info.pending) {\n            update(info.pending, 0);\n            return true;\n        }\n    }\n    else {\n        if (info.current !== info.then) {\n            update(info.then, 1, info.value, promise);\n            return true;\n        }\n        info.resolved = promise;\n    }\n}\nfunction update_await_block_branch(info, ctx, dirty) {\n    const child_ctx = ctx.slice();\n    const { resolved } = info;\n    if (info.current === info.then) {\n        child_ctx[info.value] = resolved;\n    }\n    if (info.current === info.catch) {\n        child_ctx[info.error] = resolved;\n    }\n    info.block.p(child_ctx, dirty);\n}\n\nfunction destroy_block(block, lookup) {\n    block.d(1);\n    lookup.delete(block.key);\n}\nfunction outro_and_destroy_block(block, lookup) {\n    transition_out(block, 1, 1, () => {\n        lookup.delete(block.key);\n    });\n}\nfunction fix_and_destroy_block(block, lookup) {\n    block.f();\n    destroy_block(block, lookup);\n}\nfunction fix_and_outro_and_destroy_block(block, lookup) {\n    block.f();\n    outro_and_destroy_block(block, lookup);\n}\nfunction update_keyed_each(old_blocks, dirty, get_key, dynamic, ctx, list, lookup, node, destroy, create_each_block, next, get_context) {\n    let o = old_blocks.length;\n    let n = list.length;\n    let i = o;\n    const old_indexes = {};\n    while (i--)\n        old_indexes[old_blocks[i].key] = i;\n    const new_blocks = [];\n    const new_lookup = new Map();\n    const deltas = new Map();\n    const updates = [];\n    i = n;\n    while (i--) {\n        const child_ctx = get_context(ctx, list, i);\n        const key = get_key(child_ctx);\n        let block = lookup.get(key);\n        if (!block) {\n            block = create_each_block(key, child_ctx);\n            block.c();\n        }\n        else if (dynamic) {\n            // defer updates until all the DOM shuffling is done\n            updates.push(() => block.p(child_ctx, dirty));\n        }\n        new_lookup.set(key, new_blocks[i] = block);\n        if (key in old_indexes)\n            deltas.set(key, Math.abs(i - old_indexes[key]));\n    }\n    const will_move = new Set();\n    const did_move = new Set();\n    function insert(block) {\n        transition_in(block, 1);\n        block.m(node, next);\n        lookup.set(block.key, block);\n        next = block.first;\n        n--;\n    }\n    while (o && n) {\n        const new_block = new_blocks[n - 1];\n        const old_block = old_blocks[o - 1];\n        const new_key = new_block.key;\n        const old_key = old_block.key;\n        if (new_block === old_block) {\n            // do nothing\n            next = new_block.first;\n            o--;\n            n--;\n        }\n        else if (!new_lookup.has(old_key)) {\n            // remove old block\n            destroy(old_block, lookup);\n            o--;\n        }\n        else if (!lookup.has(new_key) || will_move.has(new_key)) {\n            insert(new_block);\n        }\n        else if (did_move.has(old_key)) {\n            o--;\n        }\n        else if (deltas.get(new_key) > deltas.get(old_key)) {\n            did_move.add(new_key);\n            insert(new_block);\n        }\n        else {\n            will_move.add(old_key);\n            o--;\n        }\n    }\n    while (o--) {\n        const old_block = old_blocks[o];\n        if (!new_lookup.has(old_block.key))\n            destroy(old_block, lookup);\n    }\n    while (n)\n        insert(new_blocks[n - 1]);\n    run_all(updates);\n    return new_blocks;\n}\nfunction validate_each_keys(ctx, list, get_context, get_key) {\n    const keys = new Set();\n    for (let i = 0; i < list.length; i++) {\n        const key = get_key(get_context(ctx, list, i));\n        if (keys.has(key)) {\n            throw new Error('Cannot have duplicate keys in a keyed each');\n        }\n        keys.add(key);\n    }\n}\n\nfunction get_spread_update(levels, updates) {\n    const update = {};\n    const to_null_out = {};\n    const accounted_for = { $$scope: 1 };\n    let i = levels.length;\n    while (i--) {\n        const o = levels[i];\n        const n = updates[i];\n        if (n) {\n            for (const key in o) {\n                if (!(key in n))\n                    to_null_out[key] = 1;\n            }\n            for (const key in n) {\n                if (!accounted_for[key]) {\n                    update[key] = n[key];\n                    accounted_for[key] = 1;\n                }\n            }\n            levels[i] = n;\n        }\n        else {\n            for (const key in o) {\n                accounted_for[key] = 1;\n            }\n        }\n    }\n    for (const key in to_null_out) {\n        if (!(key in update))\n            update[key] = undefined;\n    }\n    return update;\n}\nfunction get_spread_object(spread_props) {\n    return typeof spread_props === 'object' && spread_props !== null ? spread_props : {};\n}\n\nconst _boolean_attributes = [\n    'allowfullscreen',\n    'allowpaymentrequest',\n    'async',\n    'autofocus',\n    'autoplay',\n    'checked',\n    'controls',\n    'default',\n    'defer',\n    'disabled',\n    'formnovalidate',\n    'hidden',\n    'inert',\n    'ismap',\n    'loop',\n    'multiple',\n    'muted',\n    'nomodule',\n    'novalidate',\n    'open',\n    'playsinline',\n    'readonly',\n    'required',\n    'reversed',\n    'selected'\n];\n/**\n * List of HTML boolean attributes (e.g. `<input disabled>`).\n * Source: https://html.spec.whatwg.org/multipage/indices.html\n */\nconst boolean_attributes = new Set([..._boolean_attributes]);\n\n/** regex of all html void element names */\nconst void_element_names = /^(?:area|base|br|col|command|embed|hr|img|input|keygen|link|meta|param|source|track|wbr)$/;\nfunction is_void(name) {\n    return void_element_names.test(name) || name.toLowerCase() === '!doctype';\n}\n\nconst invalid_attribute_name_character = /[\\s'\">/=\\u{FDD0}-\\u{FDEF}\\u{FFFE}\\u{FFFF}\\u{1FFFE}\\u{1FFFF}\\u{2FFFE}\\u{2FFFF}\\u{3FFFE}\\u{3FFFF}\\u{4FFFE}\\u{4FFFF}\\u{5FFFE}\\u{5FFFF}\\u{6FFFE}\\u{6FFFF}\\u{7FFFE}\\u{7FFFF}\\u{8FFFE}\\u{8FFFF}\\u{9FFFE}\\u{9FFFF}\\u{AFFFE}\\u{AFFFF}\\u{BFFFE}\\u{BFFFF}\\u{CFFFE}\\u{CFFFF}\\u{DFFFE}\\u{DFFFF}\\u{EFFFE}\\u{EFFFF}\\u{FFFFE}\\u{FFFFF}\\u{10FFFE}\\u{10FFFF}]/u;\n// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n// https://infra.spec.whatwg.org/#noncharacter\nfunction spread(args, attrs_to_add) {\n    const attributes = Object.assign({}, ...args);\n    if (attrs_to_add) {\n        const classes_to_add = attrs_to_add.classes;\n        const styles_to_add = attrs_to_add.styles;\n        if (classes_to_add) {\n            if (attributes.class == null) {\n                attributes.class = classes_to_add;\n            }\n            else {\n                attributes.class += ' ' + classes_to_add;\n            }\n        }\n        if (styles_to_add) {\n            if (attributes.style == null) {\n                attributes.style = style_object_to_string(styles_to_add);\n            }\n            else {\n                attributes.style = style_object_to_string(merge_ssr_styles(attributes.style, styles_to_add));\n            }\n        }\n    }\n    let str = '';\n    Object.keys(attributes).forEach(name => {\n        if (invalid_attribute_name_character.test(name))\n            return;\n        const value = attributes[name];\n        if (value === true)\n            str += ' ' + name;\n        else if (boolean_attributes.has(name.toLowerCase())) {\n            if (value)\n                str += ' ' + name;\n        }\n        else if (value != null) {\n            str += ` ${name}=\"${value}\"`;\n        }\n    });\n    return str;\n}\nfunction merge_ssr_styles(style_attribute, style_directive) {\n    const style_object = {};\n    for (const individual_style of style_attribute.split(';')) {\n        const colon_index = individual_style.indexOf(':');\n        const name = individual_style.slice(0, colon_index).trim();\n        const value = individual_style.slice(colon_index + 1).trim();\n        if (!name)\n            continue;\n        style_object[name] = value;\n    }\n    for (const name in style_directive) {\n        const value = style_directive[name];\n        if (value) {\n            style_object[name] = value;\n        }\n        else {\n            delete style_object[name];\n        }\n    }\n    return style_object;\n}\nconst ATTR_REGEX = /[&\"]/g;\nconst CONTENT_REGEX = /[&<]/g;\n/**\n * Note: this method is performance sensitive and has been optimized\n * https://github.com/sveltejs/svelte/pull/5701\n */\nfunction escape(value, is_attr = false) {\n    const str = String(value);\n    const pattern = is_attr ? ATTR_REGEX : CONTENT_REGEX;\n    pattern.lastIndex = 0;\n    let escaped = '';\n    let last = 0;\n    while (pattern.test(str)) {\n        const i = pattern.lastIndex - 1;\n        const ch = str[i];\n        escaped += str.substring(last, i) + (ch === '&' ? '&amp;' : (ch === '\"' ? '&quot;' : '&lt;'));\n        last = i + 1;\n    }\n    return escaped + str.substring(last);\n}\nfunction escape_attribute_value(value) {\n    // keep booleans, null, and undefined for the sake of `spread`\n    const should_escape = typeof value === 'string' || (value && typeof value === 'object');\n    return should_escape ? escape(value, true) : value;\n}\nfunction escape_object(obj) {\n    const result = {};\n    for (const key in obj) {\n        result[key] = escape_attribute_value(obj[key]);\n    }\n    return result;\n}\nfunction each(items, fn) {\n    let str = '';\n    for (let i = 0; i < items.length; i += 1) {\n        str += fn(items[i], i);\n    }\n    return str;\n}\nconst missing_component = {\n    $$render: () => ''\n};\nfunction validate_component(component, name) {\n    if (!component || !component.$$render) {\n        if (name === 'svelte:component')\n            name += ' this={...}';\n        throw new Error(`<${name}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules. Otherwise you may need to fix a <${name}>.`);\n    }\n    return component;\n}\nfunction debug(file, line, column, values) {\n    console.log(`{@debug} ${file ? file + ' ' : ''}(${line}:${column})`); // eslint-disable-line no-console\n    console.log(values); // eslint-disable-line no-console\n    return '';\n}\nlet on_destroy;\nfunction create_ssr_component(fn) {\n    function $$render(result, props, bindings, slots, context) {\n        const parent_component = current_component;\n        const $$ = {\n            on_destroy,\n            context: new Map(context || (parent_component ? parent_component.$$.context : [])),\n            // these will be immediately discarded\n            on_mount: [],\n            before_update: [],\n            after_update: [],\n            callbacks: blank_object()\n        };\n        set_current_component({ $$ });\n        const html = fn(result, props, bindings, slots);\n        set_current_component(parent_component);\n        return html;\n    }\n    return {\n        render: (props = {}, { $$slots = {}, context = new Map() } = {}) => {\n            on_destroy = [];\n            const result = { title: '', head: '', css: new Set() };\n            const html = $$render(result, props, {}, $$slots, context);\n            run_all(on_destroy);\n            return {\n                html,\n                css: {\n                    code: Array.from(result.css).map(css => css.code).join('\\n'),\n                    map: null // TODO\n                },\n                head: result.title + result.head\n            };\n        },\n        $$render\n    };\n}\nfunction add_attribute(name, value, boolean) {\n    if (value == null || (boolean && !value))\n        return '';\n    const assignment = (boolean && value === true) ? '' : `=\"${escape(value, true)}\"`;\n    return ` ${name}${assignment}`;\n}\nfunction add_classes(classes) {\n    return classes ? ` class=\"${classes}\"` : '';\n}\nfunction style_object_to_string(style_object) {\n    return Object.keys(style_object)\n        .filter(key => style_object[key])\n        .map(key => `${key}: ${escape_attribute_value(style_object[key])};`)\n        .join(' ');\n}\nfunction add_styles(style_object) {\n    const styles = style_object_to_string(style_object);\n    return styles ? ` style=\"${styles}\"` : '';\n}\n\nfunction bind(component, name, callback) {\n    const index = component.$$.props[name];\n    if (index !== undefined) {\n        component.$$.bound[index] = callback;\n        callback(component.$$.ctx[index]);\n    }\n}\nfunction create_component(block) {\n    block && block.c();\n}\nfunction claim_component(block, parent_nodes) {\n    block && block.l(parent_nodes);\n}\nfunction mount_component(component, target, anchor, customElement) {\n    const { fragment, after_update } = component.$$;\n    fragment && fragment.m(target, anchor);\n    if (!customElement) {\n        // onMount happens before the initial afterUpdate\n        add_render_callback(() => {\n            const new_on_destroy = component.$$.on_mount.map(run).filter(is_function);\n            // if the component was destroyed immediately\n            // it will update the `$$.on_destroy` reference to `null`.\n            // the destructured on_destroy may still reference to the old array\n            if (component.$$.on_destroy) {\n                component.$$.on_destroy.push(...new_on_destroy);\n            }\n            else {\n                // Edge case - component was destroyed immediately,\n                // most likely as a result of a binding initialising\n                run_all(new_on_destroy);\n            }\n            component.$$.on_mount = [];\n        });\n    }\n    after_update.forEach(add_render_callback);\n}\nfunction destroy_component(component, detaching) {\n    const $$ = component.$$;\n    if ($$.fragment !== null) {\n        flush_render_callbacks($$.after_update);\n        run_all($$.on_destroy);\n        $$.fragment && $$.fragment.d(detaching);\n        // TODO null out other refs, including component.$$ (but need to\n        // preserve final state?)\n        $$.on_destroy = $$.fragment = null;\n        $$.ctx = [];\n    }\n}\nfunction make_dirty(component, i) {\n    if (component.$$.dirty[0] === -1) {\n        dirty_components.push(component);\n        schedule_update();\n        component.$$.dirty.fill(0);\n    }\n    component.$$.dirty[(i / 31) | 0] |= (1 << (i % 31));\n}\nfunction init(component, options, instance, create_fragment, not_equal, props, append_styles, dirty = [-1]) {\n    const parent_component = current_component;\n    set_current_component(component);\n    const $$ = component.$$ = {\n        fragment: null,\n        ctx: [],\n        // state\n        props,\n        update: noop,\n        not_equal,\n        bound: blank_object(),\n        // lifecycle\n        on_mount: [],\n        on_destroy: [],\n        on_disconnect: [],\n        before_update: [],\n        after_update: [],\n        context: new Map(options.context || (parent_component ? parent_component.$$.context : [])),\n        // everything else\n        callbacks: blank_object(),\n        dirty,\n        skip_bound: false,\n        root: options.target || parent_component.$$.root\n    };\n    append_styles && append_styles($$.root);\n    let ready = false;\n    $$.ctx = instance\n        ? instance(component, options.props || {}, (i, ret, ...rest) => {\n            const value = rest.length ? rest[0] : ret;\n            if ($$.ctx && not_equal($$.ctx[i], $$.ctx[i] = value)) {\n                if (!$$.skip_bound && $$.bound[i])\n                    $$.bound[i](value);\n                if (ready)\n                    make_dirty(component, i);\n            }\n            return ret;\n        })\n        : [];\n    $$.update();\n    ready = true;\n    run_all($$.before_update);\n    // `false` as a special case of no DOM component\n    $$.fragment = create_fragment ? create_fragment($$.ctx) : false;\n    if (options.target) {\n        if (options.hydrate) {\n            start_hydrating();\n            const nodes = children(options.target);\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.l(nodes);\n            nodes.forEach(detach);\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.c();\n        }\n        if (options.intro)\n            transition_in(component.$$.fragment);\n        mount_component(component, options.target, options.anchor, options.customElement);\n        end_hydrating();\n        flush();\n    }\n    set_current_component(parent_component);\n}\nlet SvelteElement;\nif (typeof HTMLElement === 'function') {\n    SvelteElement = class extends HTMLElement {\n        constructor() {\n            super();\n            this.attachShadow({ mode: 'open' });\n        }\n        connectedCallback() {\n            const { on_mount } = this.$$;\n            this.$$.on_disconnect = on_mount.map(run).filter(is_function);\n            // @ts-ignore todo: improve typings\n            for (const key in this.$$.slotted) {\n                // @ts-ignore todo: improve typings\n                this.appendChild(this.$$.slotted[key]);\n            }\n        }\n        attributeChangedCallback(attr, _oldValue, newValue) {\n            this[attr] = newValue;\n        }\n        disconnectedCallback() {\n            run_all(this.$$.on_disconnect);\n        }\n        $destroy() {\n            destroy_component(this, 1);\n            this.$destroy = noop;\n        }\n        $on(type, callback) {\n            // TODO should this delegate to addEventListener?\n            if (!is_function(callback)) {\n                return noop;\n            }\n            const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n            callbacks.push(callback);\n            return () => {\n                const index = callbacks.indexOf(callback);\n                if (index !== -1)\n                    callbacks.splice(index, 1);\n            };\n        }\n        $set($$props) {\n            if (this.$$set && !is_empty($$props)) {\n                this.$$.skip_bound = true;\n                this.$$set($$props);\n                this.$$.skip_bound = false;\n            }\n        }\n    };\n}\n/**\n * Base class for Svelte components. Used when dev=false.\n */\nclass SvelteComponent {\n    $destroy() {\n        destroy_component(this, 1);\n        this.$destroy = noop;\n    }\n    $on(type, callback) {\n        if (!is_function(callback)) {\n            return noop;\n        }\n        const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n        callbacks.push(callback);\n        return () => {\n            const index = callbacks.indexOf(callback);\n            if (index !== -1)\n                callbacks.splice(index, 1);\n        };\n    }\n    $set($$props) {\n        if (this.$$set && !is_empty($$props)) {\n            this.$$.skip_bound = true;\n            this.$$set($$props);\n            this.$$.skip_bound = false;\n        }\n    }\n}\n\nfunction dispatch_dev(type, detail) {\n    document.dispatchEvent(custom_event(type, Object.assign({ version: '3.59.1' }, detail), { bubbles: true }));\n}\nfunction append_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append(target, node);\n}\nfunction append_hydration_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append_hydration(target, node);\n}\nfunction insert_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert(target, node, anchor);\n}\nfunction insert_hydration_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert_hydration(target, node, anchor);\n}\nfunction detach_dev(node) {\n    dispatch_dev('SvelteDOMRemove', { node });\n    detach(node);\n}\nfunction detach_between_dev(before, after) {\n    while (before.nextSibling && before.nextSibling !== after) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction detach_before_dev(after) {\n    while (after.previousSibling) {\n        detach_dev(after.previousSibling);\n    }\n}\nfunction detach_after_dev(before) {\n    while (before.nextSibling) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction listen_dev(node, event, handler, options, has_prevent_default, has_stop_propagation, has_stop_immediate_propagation) {\n    const modifiers = options === true ? ['capture'] : options ? Array.from(Object.keys(options)) : [];\n    if (has_prevent_default)\n        modifiers.push('preventDefault');\n    if (has_stop_propagation)\n        modifiers.push('stopPropagation');\n    if (has_stop_immediate_propagation)\n        modifiers.push('stopImmediatePropagation');\n    dispatch_dev('SvelteDOMAddEventListener', { node, event, handler, modifiers });\n    const dispose = listen(node, event, handler, options);\n    return () => {\n        dispatch_dev('SvelteDOMRemoveEventListener', { node, event, handler, modifiers });\n        dispose();\n    };\n}\nfunction attr_dev(node, attribute, value) {\n    attr(node, attribute, value);\n    if (value == null)\n        dispatch_dev('SvelteDOMRemoveAttribute', { node, attribute });\n    else\n        dispatch_dev('SvelteDOMSetAttribute', { node, attribute, value });\n}\nfunction prop_dev(node, property, value) {\n    node[property] = value;\n    dispatch_dev('SvelteDOMSetProperty', { node, property, value });\n}\nfunction dataset_dev(node, property, value) {\n    node.dataset[property] = value;\n    dispatch_dev('SvelteDOMSetDataset', { node, property, value });\n}\nfunction set_data_dev(text, data) {\n    data = '' + data;\n    if (text.data === data)\n        return;\n    dispatch_dev('SvelteDOMSetData', { node: text, data });\n    text.data = data;\n}\nfunction set_data_contenteditable_dev(text, data) {\n    data = '' + data;\n    if (text.wholeText === data)\n        return;\n    dispatch_dev('SvelteDOMSetData', { node: text, data });\n    text.data = data;\n}\nfunction set_data_maybe_contenteditable_dev(text, data, attr_value) {\n    if (~contenteditable_truthy_values.indexOf(attr_value)) {\n        set_data_contenteditable_dev(text, data);\n    }\n    else {\n        set_data_dev(text, data);\n    }\n}\nfunction validate_each_argument(arg) {\n    if (typeof arg !== 'string' && !(arg && typeof arg === 'object' && 'length' in arg)) {\n        let msg = '{#each} only iterates over array-like objects.';\n        if (typeof Symbol === 'function' && arg && Symbol.iterator in arg) {\n            msg += ' You can use a spread to convert this iterable into an array.';\n        }\n        throw new Error(msg);\n    }\n}\nfunction validate_slots(name, slot, keys) {\n    for (const slot_key of Object.keys(slot)) {\n        if (!~keys.indexOf(slot_key)) {\n            console.warn(`<${name}> received an unexpected slot \"${slot_key}\".`);\n        }\n    }\n}\nfunction validate_dynamic_element(tag) {\n    const is_string = typeof tag === 'string';\n    if (tag && !is_string) {\n        throw new Error('<svelte:element> expects \"this\" attribute to be a string.');\n    }\n}\nfunction validate_void_dynamic_element(tag) {\n    if (tag && is_void(tag)) {\n        console.warn(`<svelte:element this=\"${tag}\"> is self-closing and cannot have content.`);\n    }\n}\nfunction construct_svelte_component_dev(component, props) {\n    const error_message = 'this={...} of <svelte:component> should specify a Svelte component.';\n    try {\n        const instance = new component(props);\n        if (!instance.$$ || !instance.$set || !instance.$on || !instance.$destroy) {\n            throw new Error(error_message);\n        }\n        return instance;\n    }\n    catch (err) {\n        const { message } = err;\n        if (typeof message === 'string' && message.indexOf('is not a constructor') !== -1) {\n            throw new Error(error_message);\n        }\n        else {\n            throw err;\n        }\n    }\n}\n/**\n * Base class for Svelte components with some minor dev-enhancements. Used when dev=true.\n */\nclass SvelteComponentDev extends SvelteComponent {\n    constructor(options) {\n        if (!options || (!options.target && !options.$$inline)) {\n            throw new Error(\"'target' is a required option\");\n        }\n        super();\n    }\n    $destroy() {\n        super.$destroy();\n        this.$destroy = () => {\n            console.warn('Component was already destroyed'); // eslint-disable-line no-console\n        };\n    }\n    $capture_state() { }\n    $inject_state() { }\n}\n/**\n * Base class to create strongly typed Svelte components.\n * This only exists for typing purposes and should be used in `.d.ts` files.\n *\n * ### Example:\n *\n * You have component library on npm called `component-library`, from which\n * you export a component called `MyComponent`. For Svelte+TypeScript users,\n * you want to provide typings. Therefore you create a `index.d.ts`:\n * ```ts\n * import { SvelteComponentTyped } from \"svelte\";\n * export class MyComponent extends SvelteComponentTyped<{foo: string}> {}\n * ```\n * Typing this makes it possible for IDEs like VS Code with the Svelte extension\n * to provide intellisense and to use the component like this in a Svelte file\n * with TypeScript:\n * ```svelte\n * <script lang=\"ts\">\n * \timport { MyComponent } from \"component-library\";\n * </script>\n * <MyComponent foo={'bar'} />\n * ```\n *\n * #### Why not make this part of `SvelteComponent(Dev)`?\n * Because\n * ```ts\n * class ASubclassOfSvelteComponent extends SvelteComponent<{foo: string}> {}\n * const component: typeof SvelteComponent = ASubclassOfSvelteComponent;\n * ```\n * will throw a type error, so we need to separate the more strictly typed class.\n */\nclass SvelteComponentTyped extends SvelteComponentDev {\n    constructor(options) {\n        super(options);\n    }\n}\nfunction loop_guard(timeout) {\n    const start = Date.now();\n    return () => {\n        if (Date.now() - start > timeout) {\n            throw new Error('Infinite loop detected');\n        }\n    };\n}\n\nexport { HtmlTag, HtmlTagHydration, ResizeObserverSingleton, SvelteComponent, SvelteComponentDev, SvelteComponentTyped, SvelteElement, action_destroyer, add_attribute, add_classes, add_flush_callback, add_iframe_resize_listener, add_location, add_render_callback, add_styles, add_transform, afterUpdate, append, append_dev, append_empty_stylesheet, append_hydration, append_hydration_dev, append_styles, assign, attr, attr_dev, attribute_to_object, beforeUpdate, bind, binding_callbacks, blank_object, bubble, check_outros, children, claim_comment, claim_component, claim_element, claim_html_tag, claim_space, claim_svg_element, claim_text, clear_loops, comment, component_subscribe, compute_rest_props, compute_slots, construct_svelte_component, construct_svelte_component_dev, contenteditable_truthy_values, createEventDispatcher, create_animation, create_bidirectional_transition, create_component, create_in_transition, create_out_transition, create_slot, create_ssr_component, current_component, custom_event, dataset_dev, debug, destroy_block, destroy_component, destroy_each, detach, detach_after_dev, detach_before_dev, detach_between_dev, detach_dev, dirty_components, dispatch_dev, each, element, element_is, empty, end_hydrating, escape, escape_attribute_value, escape_object, exclude_internal_props, fix_and_destroy_block, fix_and_outro_and_destroy_block, fix_position, flush, flush_render_callbacks, getAllContexts, getContext, get_all_dirty_from_scope, get_binding_group_value, get_current_component, get_custom_elements_slots, get_root_for_style, get_slot_changes, get_spread_object, get_spread_update, get_store_value, globals, group_outros, handle_promise, hasContext, has_prop, head_selector, identity, init, init_binding_group, init_binding_group_dynamic, insert, insert_dev, insert_hydration, insert_hydration_dev, intros, invalid_attribute_name_character, is_client, is_crossorigin, is_empty, is_function, is_promise, is_void, listen, listen_dev, loop, loop_guard, merge_ssr_styles, missing_component, mount_component, noop, not_equal, now, null_to_empty, object_without_properties, onDestroy, onMount, once, outro_and_destroy_block, prevent_default, prop_dev, query_selector_all, raf, resize_observer_border_box, resize_observer_content_box, resize_observer_device_pixel_content_box, run, run_all, safe_not_equal, schedule_update, select_multiple_value, select_option, select_options, select_value, self, setContext, set_attributes, set_current_component, set_custom_element_data, set_custom_element_data_map, set_data, set_data_contenteditable, set_data_contenteditable_dev, set_data_dev, set_data_maybe_contenteditable, set_data_maybe_contenteditable_dev, set_dynamic_element_data, set_input_type, set_input_value, set_now, set_raf, set_store_value, set_style, set_svg_attributes, space, split_css_unit, spread, src_url_equal, start_hydrating, stop_immediate_propagation, stop_propagation, subscribe, svg_element, text, tick, time_ranges_to_array, to_number, toggle_class, transition_in, transition_out, trusted, update_await_block_branch, update_keyed_each, update_slot, update_slot_base, validate_component, validate_dynamic_element, validate_each_argument, validate_each_keys, validate_slots, validate_store, validate_void_dynamic_element, xlink_attr };\n","// FORGE_DATA is a global variable that should have our settings loaded.\nconst settings = FORGE_DATA.bundle_product_settings\nconst DEFAULT_BUNDLE_COUNT = 3\n/*\n* This is the storefront api access token for the app.\n* Ensure that the environment variable is available in the .env file.\n* https://v2.vitejs.dev/guide/env-and-mode.html#env-files\n*/\nconst getAccessToken = () => {\n  const token = import.meta.env.VITE_PRODUCT_BUNDLE_APP_API_TOKEN\n  if (!token) throw('VITE_PRODUCT_BUNDLE_APP_API_TOKEN must be in your .env file')\n\n  return token\n}\n\nconst accessToken = getAccessToken()\n\nconst storeUrl = Shopify.shop\nconst bundleCount = settings.product_bundle_count || DEFAULT_BUNDLE_COUNT\nconst bundleCollectionHandle = settings.bundle_collection\nif(!bundleCollectionHandle) throw('No collection was chosen to bundle from.')\n\nconst showTotal = settings.show_total\n\nconst maxImageWidth = 300\nconst productsPerPage = settings.products_per_page || 10\n\nexport default {\naccessToken,\nstoreUrl,\nbundleCount,\nmaxImageWidth,\nproductsPerPage,\nbundleCollectionHandle,\nshowTotal\n}\n","import { noop, safe_not_equal, subscribe, run_all, is_function } from '../internal/index.mjs';\nexport { get_store_value as get } from '../internal/index.mjs';\n\nconst subscriber_queue = [];\n/**\n * Creates a `Readable` store that allows reading by subscription.\n * @param value initial value\n * @param {StartStopNotifier} [start]\n */\nfunction readable(value, start) {\n    return {\n        subscribe: writable(value, start).subscribe\n    };\n}\n/**\n * Create a `Writable` store that allows both updating and reading by subscription.\n * @param {*=}value initial value\n * @param {StartStopNotifier=} start\n */\nfunction writable(value, start = noop) {\n    let stop;\n    const subscribers = new Set();\n    function set(new_value) {\n        if (safe_not_equal(value, new_value)) {\n            value = new_value;\n            if (stop) { // store is ready\n                const run_queue = !subscriber_queue.length;\n                for (const subscriber of subscribers) {\n                    subscriber[1]();\n                    subscriber_queue.push(subscriber, value);\n                }\n                if (run_queue) {\n                    for (let i = 0; i < subscriber_queue.length; i += 2) {\n                        subscriber_queue[i][0](subscriber_queue[i + 1]);\n                    }\n                    subscriber_queue.length = 0;\n                }\n            }\n        }\n    }\n    function update(fn) {\n        set(fn(value));\n    }\n    function subscribe(run, invalidate = noop) {\n        const subscriber = [run, invalidate];\n        subscribers.add(subscriber);\n        if (subscribers.size === 1) {\n            stop = start(set) || noop;\n        }\n        run(value);\n        return () => {\n            subscribers.delete(subscriber);\n            if (subscribers.size === 0 && stop) {\n                stop();\n                stop = null;\n            }\n        };\n    }\n    return { set, update, subscribe };\n}\nfunction derived(stores, fn, initial_value) {\n    const single = !Array.isArray(stores);\n    const stores_array = single\n        ? [stores]\n        : stores;\n    const auto = fn.length < 2;\n    return readable(initial_value, (set) => {\n        let started = false;\n        const values = [];\n        let pending = 0;\n        let cleanup = noop;\n        const sync = () => {\n            if (pending) {\n                return;\n            }\n            cleanup();\n            const result = fn(single ? values[0] : values, set);\n            if (auto) {\n                set(result);\n            }\n            else {\n                cleanup = is_function(result) ? result : noop;\n            }\n        };\n        const unsubscribers = stores_array.map((store, i) => subscribe(store, (value) => {\n            values[i] = value;\n            pending &= ~(1 << i);\n            if (started) {\n                sync();\n            }\n        }, () => {\n            pending |= (1 << i);\n        }));\n        started = true;\n        sync();\n        return function stop() {\n            run_all(unsubscribers);\n            cleanup();\n            // We need to set this to false because callbacks can still happen despite having unsubscribed:\n            // Callbacks might already be placed in the queue which doesn't know it should no longer\n            // invoke this derived store.\n            started = false;\n        };\n    });\n}\n/**\n * Takes a store and returns a new one derived from the old one that is readable.\n *\n * @param store - store to make readonly\n */\nfunction readonly(store) {\n    return {\n        subscribe: store.subscribe.bind(store)\n    };\n}\n\nexport { derived, readable, readonly, writable };\n","\n/*\n* Parse the integer id from a shopify GID for an item.\n*/\nconst parseId = (gid) => {\n  if (!gid) return\n\n  const strId = gid.match(/(\\d+)$/)?.[0]\n  if(!strId) return\n\n  return parseInt(strId)\n}\n\nexport {parseId}\n","import {parseId} from \"@/productBundles/utils.js\";\nimport settings from \"@/productBundles/settings.js\";\n\n\nconst SHOPIFY_DEFAULT_TITLE_MATCHER = /^default\\s+title$/i\n\nclass ProductVariant {\n  constructor(attribs={}) {\n    this.attribs = attribs\n  }\n\n  get id() {\n    return this.attribs.id\n  }\n\n  // Find the integer ID only of the product.\n  get shortId() {\n    return parseId(this.id)\n  }\n\n  get availableForSale() {\n    return this.attribs.availableForSale\n  }\n\n  /*\n  * We must accommodate for Shopify's \"Default Title\". If the variant has this\n  * as a title, then we must use the main product title instead. This attribute\n  * must be passed in with the attributes, outside of the standard API.\n  * https://community.shopify.com/c/shopify-apis-and-sdks/simple-products-get-variants-with-name-quot-default-title-quot/td-p/371189\n  */\n  get title() {\n    const mainTitle = this.attribs.main_product_title\n    if(SHOPIFY_DEFAULT_TITLE_MATCHER.test(this.attribs.title)) {\n      return mainTitle\n    }\n\n    return `${mainTitle}: ${this.attribs.title}`\n  }\n\n  get image() {\n    const url = new URL(this.attribs.image.url)\n    url.searchParams.append('width', settings.maxImageWidth)\n    return url.toString()\n  }\n\n  /*\n  * Return a floating point for the string given\n  */\n  get price() {\n    return parseFloat(this.attribs.price.amount)\n  }\n}\n\n\nexport default ProductVariant\n","import ProductVariant from \"@/productBundles/ProductVariant.js\";\nconst STORAGE_KEY = 'FOUNDRY_BUNDLED_PRODUCTS'\n\n\nconst attribsForProducts = (products=[]) => {\n  return products.map((prod) => prod.attribs)\n}\n\nclass StorageManager {\n  save(products= []) {\n    const data = attribsForProducts(products)\n    const strData = JSON.stringify(data)\n    window.sessionStorage.setItem(STORAGE_KEY, strData)\n  }\n\n  read() {\n    const strData = window.sessionStorage.getItem(STORAGE_KEY) || '[]'\n    return JSON.parse(strData)\n  }\n\n  /*\n  * @return [Array<Product>]\n  */\n  load() {\n    const data = this.read()\n    return data.map((attribs) => new ProductVariant(attribs))\n  }\n}\n\nexport const storageManager = new StorageManager()\n","import { writable } from 'svelte/store';\nimport {storageManager} from \"@/productBundles/StorageManager.js\";\n\nfunction createBundleStore() {\n  const { subscribe, set } = writable([]);\n\n  return {\n    subscribe,\n    set,\n    save: (products=[]) => {\n      set(products)\n      storageManager.save(products)\n      return products\n    },\n    load: () => {\n      const products = storageManager.load()\n      set(products)\n    }\n  }\n}\n\n\nexport const bundle = createBundleStore()\n","export const defaultJsonSerializer = JSON;\n//# sourceMappingURL=defaultJsonSerializer.js.map","export const uppercase = (str) => str.toUpperCase();\n/**\n * Convert Headers instance into regular object\n */\nexport const HeadersInstanceToPlainObject = (headers) => {\n    const o = {};\n    headers.forEach((v, k) => {\n        o[k] = v;\n    });\n    return o;\n};\n//# sourceMappingURL=helpers.js.map","export const parseRequestArgs = (documentOrOptions, variables, requestHeaders) => {\n    return documentOrOptions.document\n        ? documentOrOptions\n        : {\n            document: documentOrOptions,\n            variables: variables,\n            requestHeaders: requestHeaders,\n            signal: undefined,\n        };\n};\nexport const parseRawRequestArgs = (queryOrOptions, variables, requestHeaders) => {\n    return queryOrOptions.query\n        ? queryOrOptions\n        : {\n            query: queryOrOptions,\n            variables: variables,\n            requestHeaders: requestHeaders,\n            signal: undefined,\n        };\n};\nexport const parseBatchRequestArgs = (documentsOrOptions, requestHeaders) => {\n    return documentsOrOptions.documents\n        ? documentsOrOptions\n        : {\n            documents: documentsOrOptions,\n            requestHeaders: requestHeaders,\n            signal: undefined,\n        };\n};\nexport const parseRequestExtendedArgs = (urlOrOptions, document, ...variablesAndRequestHeaders) => {\n    const [variables, requestHeaders] = variablesAndRequestHeaders;\n    return urlOrOptions.document\n        ? urlOrOptions\n        : {\n            url: urlOrOptions,\n            document: document,\n            variables,\n            requestHeaders,\n            signal: undefined,\n        };\n};\nexport const parseRawRequestExtendedArgs = (urlOrOptions, query, ...variablesAndRequestHeaders) => {\n    const [variables, requestHeaders] = variablesAndRequestHeaders;\n    return urlOrOptions.query\n        ? urlOrOptions\n        : {\n            url: urlOrOptions,\n            query: query,\n            variables,\n            requestHeaders,\n            signal: undefined,\n        };\n};\n//# sourceMappingURL=parseArgs.js.map","export function devAssert(condition, message) {\n  const booleanCondition = Boolean(condition);\n\n  if (!booleanCondition) {\n    throw new Error(message);\n  }\n}\n","/**\n * Return true if `value` is object-like. A value is object-like if it's not\n * `null` and has a `typeof` result of \"object\".\n */\nexport function isObjectLike(value) {\n  return typeof value == 'object' && value !== null;\n}\n","export function invariant(condition, message) {\n  const booleanCondition = Boolean(condition);\n\n  if (!booleanCondition) {\n    throw new Error(\n      message != null ? message : 'Unexpected invariant triggered.',\n    );\n  }\n}\n","import { invariant } from '../jsutils/invariant.mjs';\nconst LineRegExp = /\\r\\n|[\\n\\r]/g;\n/**\n * Represents a location in a Source.\n */\n\n/**\n * Takes a Source and a UTF-8 character offset, and returns the corresponding\n * line and column as a SourceLocation.\n */\nexport function getLocation(source, position) {\n  let lastLineStart = 0;\n  let line = 1;\n\n  for (const match of source.body.matchAll(LineRegExp)) {\n    typeof match.index === 'number' || invariant(false);\n\n    if (match.index >= position) {\n      break;\n    }\n\n    lastLineStart = match.index + match[0].length;\n    line += 1;\n  }\n\n  return {\n    line,\n    column: position + 1 - lastLineStart,\n  };\n}\n","import { getLocation } from './location.mjs';\n\n/**\n * Render a helpful description of the location in the GraphQL Source document.\n */\nexport function printLocation(location) {\n  return printSourceLocation(\n    location.source,\n    getLocation(location.source, location.start),\n  );\n}\n/**\n * Render a helpful description of the location in the GraphQL Source document.\n */\n\nexport function printSourceLocation(source, sourceLocation) {\n  const firstLineColumnOffset = source.locationOffset.column - 1;\n  const body = ''.padStart(firstLineColumnOffset) + source.body;\n  const lineIndex = sourceLocation.line - 1;\n  const lineOffset = source.locationOffset.line - 1;\n  const lineNum = sourceLocation.line + lineOffset;\n  const columnOffset = sourceLocation.line === 1 ? firstLineColumnOffset : 0;\n  const columnNum = sourceLocation.column + columnOffset;\n  const locationStr = `${source.name}:${lineNum}:${columnNum}\\n`;\n  const lines = body.split(/\\r\\n|[\\n\\r]/g);\n  const locationLine = lines[lineIndex]; // Special case for minified documents\n\n  if (locationLine.length > 120) {\n    const subLineIndex = Math.floor(columnNum / 80);\n    const subLineColumnNum = columnNum % 80;\n    const subLines = [];\n\n    for (let i = 0; i < locationLine.length; i += 80) {\n      subLines.push(locationLine.slice(i, i + 80));\n    }\n\n    return (\n      locationStr +\n      printPrefixedLines([\n        [`${lineNum} |`, subLines[0]],\n        ...subLines.slice(1, subLineIndex + 1).map((subLine) => ['|', subLine]),\n        ['|', '^'.padStart(subLineColumnNum)],\n        ['|', subLines[subLineIndex + 1]],\n      ])\n    );\n  }\n\n  return (\n    locationStr +\n    printPrefixedLines([\n      // Lines specified like this: [\"prefix\", \"string\"],\n      [`${lineNum - 1} |`, lines[lineIndex - 1]],\n      [`${lineNum} |`, locationLine],\n      ['|', '^'.padStart(columnNum)],\n      [`${lineNum + 1} |`, lines[lineIndex + 1]],\n    ])\n  );\n}\n\nfunction printPrefixedLines(lines) {\n  const existingLines = lines.filter(([_, line]) => line !== undefined);\n  const padLen = Math.max(...existingLines.map(([prefix]) => prefix.length));\n  return existingLines\n    .map(([prefix, line]) => prefix.padStart(padLen) + (line ? ' ' + line : ''))\n    .join('\\n');\n}\n","import { isObjectLike } from '../jsutils/isObjectLike.mjs';\nimport { getLocation } from '../language/location.mjs';\nimport {\n  printLocation,\n  printSourceLocation,\n} from '../language/printLocation.mjs';\n\nfunction toNormalizedOptions(args) {\n  const firstArg = args[0];\n\n  if (firstArg == null || 'kind' in firstArg || 'length' in firstArg) {\n    return {\n      nodes: firstArg,\n      source: args[1],\n      positions: args[2],\n      path: args[3],\n      originalError: args[4],\n      extensions: args[5],\n    };\n  }\n\n  return firstArg;\n}\n/**\n * A GraphQLError describes an Error found during the parse, validate, or\n * execute phases of performing a GraphQL operation. In addition to a message\n * and stack trace, it also includes information about the locations in a\n * GraphQL document and/or execution result that correspond to the Error.\n */\n\nexport class GraphQLError extends Error {\n  /**\n   * An array of `{ line, column }` locations within the source GraphQL document\n   * which correspond to this error.\n   *\n   * Errors during validation often contain multiple locations, for example to\n   * point out two things with the same name. Errors during execution include a\n   * single location, the field which produced the error.\n   *\n   * Enumerable, and appears in the result of JSON.stringify().\n   */\n\n  /**\n   * An array describing the JSON-path into the execution response which\n   * corresponds to this error. Only included for errors during execution.\n   *\n   * Enumerable, and appears in the result of JSON.stringify().\n   */\n\n  /**\n   * An array of GraphQL AST Nodes corresponding to this error.\n   */\n\n  /**\n   * The source GraphQL document for the first location of this error.\n   *\n   * Note that if this Error represents more than one node, the source may not\n   * represent nodes after the first node.\n   */\n\n  /**\n   * An array of character offsets within the source GraphQL document\n   * which correspond to this error.\n   */\n\n  /**\n   * The original error thrown from a field resolver during execution.\n   */\n\n  /**\n   * Extension fields to add to the formatted error.\n   */\n\n  /**\n   * @deprecated Please use the `GraphQLErrorOptions` constructor overload instead.\n   */\n  constructor(message, ...rawArgs) {\n    var _this$nodes, _nodeLocations$, _ref;\n\n    const { nodes, source, positions, path, originalError, extensions } =\n      toNormalizedOptions(rawArgs);\n    super(message);\n    this.name = 'GraphQLError';\n    this.path = path !== null && path !== void 0 ? path : undefined;\n    this.originalError =\n      originalError !== null && originalError !== void 0\n        ? originalError\n        : undefined; // Compute list of blame nodes.\n\n    this.nodes = undefinedIfEmpty(\n      Array.isArray(nodes) ? nodes : nodes ? [nodes] : undefined,\n    );\n    const nodeLocations = undefinedIfEmpty(\n      (_this$nodes = this.nodes) === null || _this$nodes === void 0\n        ? void 0\n        : _this$nodes.map((node) => node.loc).filter((loc) => loc != null),\n    ); // Compute locations in the source for the given nodes/positions.\n\n    this.source =\n      source !== null && source !== void 0\n        ? source\n        : nodeLocations === null || nodeLocations === void 0\n        ? void 0\n        : (_nodeLocations$ = nodeLocations[0]) === null ||\n          _nodeLocations$ === void 0\n        ? void 0\n        : _nodeLocations$.source;\n    this.positions =\n      positions !== null && positions !== void 0\n        ? positions\n        : nodeLocations === null || nodeLocations === void 0\n        ? void 0\n        : nodeLocations.map((loc) => loc.start);\n    this.locations =\n      positions && source\n        ? positions.map((pos) => getLocation(source, pos))\n        : nodeLocations === null || nodeLocations === void 0\n        ? void 0\n        : nodeLocations.map((loc) => getLocation(loc.source, loc.start));\n    const originalExtensions = isObjectLike(\n      originalError === null || originalError === void 0\n        ? void 0\n        : originalError.extensions,\n    )\n      ? originalError === null || originalError === void 0\n        ? void 0\n        : originalError.extensions\n      : undefined;\n    this.extensions =\n      (_ref =\n        extensions !== null && extensions !== void 0\n          ? extensions\n          : originalExtensions) !== null && _ref !== void 0\n        ? _ref\n        : Object.create(null); // Only properties prescribed by the spec should be enumerable.\n    // Keep the rest as non-enumerable.\n\n    Object.defineProperties(this, {\n      message: {\n        writable: true,\n        enumerable: true,\n      },\n      name: {\n        enumerable: false,\n      },\n      nodes: {\n        enumerable: false,\n      },\n      source: {\n        enumerable: false,\n      },\n      positions: {\n        enumerable: false,\n      },\n      originalError: {\n        enumerable: false,\n      },\n    }); // Include (non-enumerable) stack trace.\n\n    /* c8 ignore start */\n    // FIXME: https://github.com/graphql/graphql-js/issues/2317\n\n    if (\n      originalError !== null &&\n      originalError !== void 0 &&\n      originalError.stack\n    ) {\n      Object.defineProperty(this, 'stack', {\n        value: originalError.stack,\n        writable: true,\n        configurable: true,\n      });\n    } else if (Error.captureStackTrace) {\n      Error.captureStackTrace(this, GraphQLError);\n    } else {\n      Object.defineProperty(this, 'stack', {\n        value: Error().stack,\n        writable: true,\n        configurable: true,\n      });\n    }\n    /* c8 ignore stop */\n  }\n\n  get [Symbol.toStringTag]() {\n    return 'GraphQLError';\n  }\n\n  toString() {\n    let output = this.message;\n\n    if (this.nodes) {\n      for (const node of this.nodes) {\n        if (node.loc) {\n          output += '\\n\\n' + printLocation(node.loc);\n        }\n      }\n    } else if (this.source && this.locations) {\n      for (const location of this.locations) {\n        output += '\\n\\n' + printSourceLocation(this.source, location);\n      }\n    }\n\n    return output;\n  }\n\n  toJSON() {\n    const formattedError = {\n      message: this.message,\n    };\n\n    if (this.locations != null) {\n      formattedError.locations = this.locations;\n    }\n\n    if (this.path != null) {\n      formattedError.path = this.path;\n    }\n\n    if (this.extensions != null && Object.keys(this.extensions).length > 0) {\n      formattedError.extensions = this.extensions;\n    }\n\n    return formattedError;\n  }\n}\n\nfunction undefinedIfEmpty(array) {\n  return array === undefined || array.length === 0 ? undefined : array;\n}\n/**\n * See: https://spec.graphql.org/draft/#sec-Errors\n */\n\n/**\n * Prints a GraphQLError to a string, representing useful location information\n * about the error's position in the source.\n *\n * @deprecated Please use `error.toString` instead. Will be removed in v17\n */\nexport function printError(error) {\n  return error.toString();\n}\n/**\n * Given a GraphQLError, format it according to the rules described by the\n * Response Format, Errors section of the GraphQL Specification.\n *\n * @deprecated Please use `error.toJSON` instead. Will be removed in v17\n */\n\nexport function formatError(error) {\n  return error.toJSON();\n}\n","import { GraphQLError } from './GraphQLError.mjs';\n/**\n * Produces a GraphQLError representing a syntax error, containing useful\n * descriptive information about the syntax error's position in the source.\n */\n\nexport function syntaxError(source, position, description) {\n  return new GraphQLError(`Syntax Error: ${description}`, {\n    source,\n    positions: [position],\n  });\n}\n","/**\n * Contains a range of UTF-8 character offsets and token references that\n * identify the region of the source from which the AST derived.\n */\nexport class Location {\n  /**\n   * The character offset at which this Node begins.\n   */\n\n  /**\n   * The character offset at which this Node ends.\n   */\n\n  /**\n   * The Token at which this Node begins.\n   */\n\n  /**\n   * The Token at which this Node ends.\n   */\n\n  /**\n   * The Source document the AST represents.\n   */\n  constructor(startToken, endToken, source) {\n    this.start = startToken.start;\n    this.end = endToken.end;\n    this.startToken = startToken;\n    this.endToken = endToken;\n    this.source = source;\n  }\n\n  get [Symbol.toStringTag]() {\n    return 'Location';\n  }\n\n  toJSON() {\n    return {\n      start: this.start,\n      end: this.end,\n    };\n  }\n}\n/**\n * Represents a range of characters represented by a lexical token\n * within a Source.\n */\n\nexport class Token {\n  /**\n   * The kind of Token.\n   */\n\n  /**\n   * The character offset at which this Node begins.\n   */\n\n  /**\n   * The character offset at which this Node ends.\n   */\n\n  /**\n   * The 1-indexed line number on which this Token appears.\n   */\n\n  /**\n   * The 1-indexed column number at which this Token begins.\n   */\n\n  /**\n   * For non-punctuation tokens, represents the interpreted value of the token.\n   *\n   * Note: is undefined for punctuation tokens, but typed as string for\n   * convenience in the parser.\n   */\n\n  /**\n   * Tokens exist as nodes in a double-linked-list amongst all tokens\n   * including ignored tokens. <SOF> is always the first node and <EOF>\n   * the last.\n   */\n  constructor(kind, start, end, line, column, value) {\n    this.kind = kind;\n    this.start = start;\n    this.end = end;\n    this.line = line;\n    this.column = column; // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n\n    this.value = value;\n    this.prev = null;\n    this.next = null;\n  }\n\n  get [Symbol.toStringTag]() {\n    return 'Token';\n  }\n\n  toJSON() {\n    return {\n      kind: this.kind,\n      value: this.value,\n      line: this.line,\n      column: this.column,\n    };\n  }\n}\n/**\n * The list of all possible AST node types.\n */\n\n/**\n * @internal\n */\nexport const QueryDocumentKeys = {\n  Name: [],\n  Document: ['definitions'],\n  OperationDefinition: [\n    'name',\n    'variableDefinitions',\n    'directives',\n    'selectionSet',\n  ],\n  VariableDefinition: ['variable', 'type', 'defaultValue', 'directives'],\n  Variable: ['name'],\n  SelectionSet: ['selections'],\n  Field: ['alias', 'name', 'arguments', 'directives', 'selectionSet'],\n  Argument: ['name', 'value'],\n  FragmentSpread: ['name', 'directives'],\n  InlineFragment: ['typeCondition', 'directives', 'selectionSet'],\n  FragmentDefinition: [\n    'name', // Note: fragment variable definitions are deprecated and will removed in v17.0.0\n    'variableDefinitions',\n    'typeCondition',\n    'directives',\n    'selectionSet',\n  ],\n  IntValue: [],\n  FloatValue: [],\n  StringValue: [],\n  BooleanValue: [],\n  NullValue: [],\n  EnumValue: [],\n  ListValue: ['values'],\n  ObjectValue: ['fields'],\n  ObjectField: ['name', 'value'],\n  Directive: ['name', 'arguments'],\n  NamedType: ['name'],\n  ListType: ['type'],\n  NonNullType: ['type'],\n  SchemaDefinition: ['description', 'directives', 'operationTypes'],\n  OperationTypeDefinition: ['type'],\n  ScalarTypeDefinition: ['description', 'name', 'directives'],\n  ObjectTypeDefinition: [\n    'description',\n    'name',\n    'interfaces',\n    'directives',\n    'fields',\n  ],\n  FieldDefinition: ['description', 'name', 'arguments', 'type', 'directives'],\n  InputValueDefinition: [\n    'description',\n    'name',\n    'type',\n    'defaultValue',\n    'directives',\n  ],\n  InterfaceTypeDefinition: [\n    'description',\n    'name',\n    'interfaces',\n    'directives',\n    'fields',\n  ],\n  UnionTypeDefinition: ['description', 'name', 'directives', 'types'],\n  EnumTypeDefinition: ['description', 'name', 'directives', 'values'],\n  EnumValueDefinition: ['description', 'name', 'directives'],\n  InputObjectTypeDefinition: ['description', 'name', 'directives', 'fields'],\n  DirectiveDefinition: ['description', 'name', 'arguments', 'locations'],\n  SchemaExtension: ['directives', 'operationTypes'],\n  ScalarTypeExtension: ['name', 'directives'],\n  ObjectTypeExtension: ['name', 'interfaces', 'directives', 'fields'],\n  InterfaceTypeExtension: ['name', 'interfaces', 'directives', 'fields'],\n  UnionTypeExtension: ['name', 'directives', 'types'],\n  EnumTypeExtension: ['name', 'directives', 'values'],\n  InputObjectTypeExtension: ['name', 'directives', 'fields'],\n};\nconst kindValues = new Set(Object.keys(QueryDocumentKeys));\n/**\n * @internal\n */\n\nexport function isNode(maybeNode) {\n  const maybeKind =\n    maybeNode === null || maybeNode === void 0 ? void 0 : maybeNode.kind;\n  return typeof maybeKind === 'string' && kindValues.has(maybeKind);\n}\n/** Name */\n\nvar OperationTypeNode;\n\n(function (OperationTypeNode) {\n  OperationTypeNode['QUERY'] = 'query';\n  OperationTypeNode['MUTATION'] = 'mutation';\n  OperationTypeNode['SUBSCRIPTION'] = 'subscription';\n})(OperationTypeNode || (OperationTypeNode = {}));\n\nexport { OperationTypeNode };\n","/**\n * The set of allowed directive location values.\n */\nvar DirectiveLocation;\n\n(function (DirectiveLocation) {\n  DirectiveLocation['QUERY'] = 'QUERY';\n  DirectiveLocation['MUTATION'] = 'MUTATION';\n  DirectiveLocation['SUBSCRIPTION'] = 'SUBSCRIPTION';\n  DirectiveLocation['FIELD'] = 'FIELD';\n  DirectiveLocation['FRAGMENT_DEFINITION'] = 'FRAGMENT_DEFINITION';\n  DirectiveLocation['FRAGMENT_SPREAD'] = 'FRAGMENT_SPREAD';\n  DirectiveLocation['INLINE_FRAGMENT'] = 'INLINE_FRAGMENT';\n  DirectiveLocation['VARIABLE_DEFINITION'] = 'VARIABLE_DEFINITION';\n  DirectiveLocation['SCHEMA'] = 'SCHEMA';\n  DirectiveLocation['SCALAR'] = 'SCALAR';\n  DirectiveLocation['OBJECT'] = 'OBJECT';\n  DirectiveLocation['FIELD_DEFINITION'] = 'FIELD_DEFINITION';\n  DirectiveLocation['ARGUMENT_DEFINITION'] = 'ARGUMENT_DEFINITION';\n  DirectiveLocation['INTERFACE'] = 'INTERFACE';\n  DirectiveLocation['UNION'] = 'UNION';\n  DirectiveLocation['ENUM'] = 'ENUM';\n  DirectiveLocation['ENUM_VALUE'] = 'ENUM_VALUE';\n  DirectiveLocation['INPUT_OBJECT'] = 'INPUT_OBJECT';\n  DirectiveLocation['INPUT_FIELD_DEFINITION'] = 'INPUT_FIELD_DEFINITION';\n})(DirectiveLocation || (DirectiveLocation = {}));\n\nexport { DirectiveLocation };\n/**\n * The enum type representing the directive location values.\n *\n * @deprecated Please use `DirectiveLocation`. Will be remove in v17.\n */\n","/**\n * The set of allowed kind values for AST nodes.\n */\nvar Kind;\n\n(function (Kind) {\n  Kind['NAME'] = 'Name';\n  Kind['DOCUMENT'] = 'Document';\n  Kind['OPERATION_DEFINITION'] = 'OperationDefinition';\n  Kind['VARIABLE_DEFINITION'] = 'VariableDefinition';\n  Kind['SELECTION_SET'] = 'SelectionSet';\n  Kind['FIELD'] = 'Field';\n  Kind['ARGUMENT'] = 'Argument';\n  Kind['FRAGMENT_SPREAD'] = 'FragmentSpread';\n  Kind['INLINE_FRAGMENT'] = 'InlineFragment';\n  Kind['FRAGMENT_DEFINITION'] = 'FragmentDefinition';\n  Kind['VARIABLE'] = 'Variable';\n  Kind['INT'] = 'IntValue';\n  Kind['FLOAT'] = 'FloatValue';\n  Kind['STRING'] = 'StringValue';\n  Kind['BOOLEAN'] = 'BooleanValue';\n  Kind['NULL'] = 'NullValue';\n  Kind['ENUM'] = 'EnumValue';\n  Kind['LIST'] = 'ListValue';\n  Kind['OBJECT'] = 'ObjectValue';\n  Kind['OBJECT_FIELD'] = 'ObjectField';\n  Kind['DIRECTIVE'] = 'Directive';\n  Kind['NAMED_TYPE'] = 'NamedType';\n  Kind['LIST_TYPE'] = 'ListType';\n  Kind['NON_NULL_TYPE'] = 'NonNullType';\n  Kind['SCHEMA_DEFINITION'] = 'SchemaDefinition';\n  Kind['OPERATION_TYPE_DEFINITION'] = 'OperationTypeDefinition';\n  Kind['SCALAR_TYPE_DEFINITION'] = 'ScalarTypeDefinition';\n  Kind['OBJECT_TYPE_DEFINITION'] = 'ObjectTypeDefinition';\n  Kind['FIELD_DEFINITION'] = 'FieldDefinition';\n  Kind['INPUT_VALUE_DEFINITION'] = 'InputValueDefinition';\n  Kind['INTERFACE_TYPE_DEFINITION'] = 'InterfaceTypeDefinition';\n  Kind['UNION_TYPE_DEFINITION'] = 'UnionTypeDefinition';\n  Kind['ENUM_TYPE_DEFINITION'] = 'EnumTypeDefinition';\n  Kind['ENUM_VALUE_DEFINITION'] = 'EnumValueDefinition';\n  Kind['INPUT_OBJECT_TYPE_DEFINITION'] = 'InputObjectTypeDefinition';\n  Kind['DIRECTIVE_DEFINITION'] = 'DirectiveDefinition';\n  Kind['SCHEMA_EXTENSION'] = 'SchemaExtension';\n  Kind['SCALAR_TYPE_EXTENSION'] = 'ScalarTypeExtension';\n  Kind['OBJECT_TYPE_EXTENSION'] = 'ObjectTypeExtension';\n  Kind['INTERFACE_TYPE_EXTENSION'] = 'InterfaceTypeExtension';\n  Kind['UNION_TYPE_EXTENSION'] = 'UnionTypeExtension';\n  Kind['ENUM_TYPE_EXTENSION'] = 'EnumTypeExtension';\n  Kind['INPUT_OBJECT_TYPE_EXTENSION'] = 'InputObjectTypeExtension';\n})(Kind || (Kind = {}));\n\nexport { Kind };\n/**\n * The enum type representing the possible kind values of AST nodes.\n *\n * @deprecated Please use `Kind`. Will be remove in v17.\n */\n","/**\n * ```\n * WhiteSpace ::\n *   - \"Horizontal Tab (U+0009)\"\n *   - \"Space (U+0020)\"\n * ```\n * @internal\n */\nexport function isWhiteSpace(code) {\n  return code === 0x0009 || code === 0x0020;\n}\n/**\n * ```\n * Digit :: one of\n *   - `0` `1` `2` `3` `4` `5` `6` `7` `8` `9`\n * ```\n * @internal\n */\n\nexport function isDigit(code) {\n  return code >= 0x0030 && code <= 0x0039;\n}\n/**\n * ```\n * Letter :: one of\n *   - `A` `B` `C` `D` `E` `F` `G` `H` `I` `J` `K` `L` `M`\n *   - `N` `O` `P` `Q` `R` `S` `T` `U` `V` `W` `X` `Y` `Z`\n *   - `a` `b` `c` `d` `e` `f` `g` `h` `i` `j` `k` `l` `m`\n *   - `n` `o` `p` `q` `r` `s` `t` `u` `v` `w` `x` `y` `z`\n * ```\n * @internal\n */\n\nexport function isLetter(code) {\n  return (\n    (code >= 0x0061 && code <= 0x007a) || // A-Z\n    (code >= 0x0041 && code <= 0x005a) // a-z\n  );\n}\n/**\n * ```\n * NameStart ::\n *   - Letter\n *   - `_`\n * ```\n * @internal\n */\n\nexport function isNameStart(code) {\n  return isLetter(code) || code === 0x005f;\n}\n/**\n * ```\n * NameContinue ::\n *   - Letter\n *   - Digit\n *   - `_`\n * ```\n * @internal\n */\n\nexport function isNameContinue(code) {\n  return isLetter(code) || isDigit(code) || code === 0x005f;\n}\n","import { isWhiteSpace } from './characterClasses.mjs';\n/**\n * Produces the value of a block string from its parsed raw value, similar to\n * CoffeeScript's block string, Python's docstring trim or Ruby's strip_heredoc.\n *\n * This implements the GraphQL spec's BlockStringValue() static algorithm.\n *\n * @internal\n */\n\nexport function dedentBlockStringLines(lines) {\n  var _firstNonEmptyLine2;\n\n  let commonIndent = Number.MAX_SAFE_INTEGER;\n  let firstNonEmptyLine = null;\n  let lastNonEmptyLine = -1;\n\n  for (let i = 0; i < lines.length; ++i) {\n    var _firstNonEmptyLine;\n\n    const line = lines[i];\n    const indent = leadingWhitespace(line);\n\n    if (indent === line.length) {\n      continue; // skip empty lines\n    }\n\n    firstNonEmptyLine =\n      (_firstNonEmptyLine = firstNonEmptyLine) !== null &&\n      _firstNonEmptyLine !== void 0\n        ? _firstNonEmptyLine\n        : i;\n    lastNonEmptyLine = i;\n\n    if (i !== 0 && indent < commonIndent) {\n      commonIndent = indent;\n    }\n  }\n\n  return lines // Remove common indentation from all lines but first.\n    .map((line, i) => (i === 0 ? line : line.slice(commonIndent))) // Remove leading and trailing blank lines.\n    .slice(\n      (_firstNonEmptyLine2 = firstNonEmptyLine) !== null &&\n        _firstNonEmptyLine2 !== void 0\n        ? _firstNonEmptyLine2\n        : 0,\n      lastNonEmptyLine + 1,\n    );\n}\n\nfunction leadingWhitespace(str) {\n  let i = 0;\n\n  while (i < str.length && isWhiteSpace(str.charCodeAt(i))) {\n    ++i;\n  }\n\n  return i;\n}\n/**\n * @internal\n */\n\nexport function isPrintableAsBlockString(value) {\n  if (value === '') {\n    return true; // empty string is printable\n  }\n\n  let isEmptyLine = true;\n  let hasIndent = false;\n  let hasCommonIndent = true;\n  let seenNonEmptyLine = false;\n\n  for (let i = 0; i < value.length; ++i) {\n    switch (value.codePointAt(i)) {\n      case 0x0000:\n      case 0x0001:\n      case 0x0002:\n      case 0x0003:\n      case 0x0004:\n      case 0x0005:\n      case 0x0006:\n      case 0x0007:\n      case 0x0008:\n      case 0x000b:\n      case 0x000c:\n      case 0x000e:\n      case 0x000f:\n        return false;\n      // Has non-printable characters\n\n      case 0x000d:\n        //  \\r\n        return false;\n      // Has \\r or \\r\\n which will be replaced as \\n\n\n      case 10:\n        //  \\n\n        if (isEmptyLine && !seenNonEmptyLine) {\n          return false; // Has leading new line\n        }\n\n        seenNonEmptyLine = true;\n        isEmptyLine = true;\n        hasIndent = false;\n        break;\n\n      case 9: //   \\t\n\n      case 32:\n        //  <space>\n        hasIndent || (hasIndent = isEmptyLine);\n        break;\n\n      default:\n        hasCommonIndent && (hasCommonIndent = hasIndent);\n        isEmptyLine = false;\n    }\n  }\n\n  if (isEmptyLine) {\n    return false; // Has trailing empty lines\n  }\n\n  if (hasCommonIndent && seenNonEmptyLine) {\n    return false; // Has internal indent\n  }\n\n  return true;\n}\n/**\n * Print a block string in the indented block form by adding a leading and\n * trailing blank line. However, if a block string starts with whitespace and is\n * a single-line, adding a leading blank line would strip that whitespace.\n *\n * @internal\n */\n\nexport function printBlockString(value, options) {\n  const escapedValue = value.replace(/\"\"\"/g, '\\\\\"\"\"'); // Expand a block string's raw value into independent lines.\n\n  const lines = escapedValue.split(/\\r\\n|[\\n\\r]/g);\n  const isSingleLine = lines.length === 1; // If common indentation is found we can fix some of those cases by adding leading new line\n\n  const forceLeadingNewLine =\n    lines.length > 1 &&\n    lines\n      .slice(1)\n      .every((line) => line.length === 0 || isWhiteSpace(line.charCodeAt(0))); // Trailing triple quotes just looks confusing but doesn't force trailing new line\n\n  const hasTrailingTripleQuotes = escapedValue.endsWith('\\\\\"\"\"'); // Trailing quote (single or double) or slash forces trailing new line\n\n  const hasTrailingQuote = value.endsWith('\"') && !hasTrailingTripleQuotes;\n  const hasTrailingSlash = value.endsWith('\\\\');\n  const forceTrailingNewline = hasTrailingQuote || hasTrailingSlash;\n  const printAsMultipleLines =\n    !(options !== null && options !== void 0 && options.minimize) && // add leading and trailing new lines only if it improves readability\n    (!isSingleLine ||\n      value.length > 70 ||\n      forceTrailingNewline ||\n      forceLeadingNewLine ||\n      hasTrailingTripleQuotes);\n  let result = ''; // Format a multi-line block quote to account for leading space.\n\n  const skipLeadingNewLine = isSingleLine && isWhiteSpace(value.charCodeAt(0));\n\n  if ((printAsMultipleLines && !skipLeadingNewLine) || forceLeadingNewLine) {\n    result += '\\n';\n  }\n\n  result += escapedValue;\n\n  if (printAsMultipleLines || forceTrailingNewline) {\n    result += '\\n';\n  }\n\n  return '\"\"\"' + result + '\"\"\"';\n}\n","/**\n * An exported enum describing the different kinds of tokens that the\n * lexer emits.\n */\nvar TokenKind;\n\n(function (TokenKind) {\n  TokenKind['SOF'] = '<SOF>';\n  TokenKind['EOF'] = '<EOF>';\n  TokenKind['BANG'] = '!';\n  TokenKind['DOLLAR'] = '$';\n  TokenKind['AMP'] = '&';\n  TokenKind['PAREN_L'] = '(';\n  TokenKind['PAREN_R'] = ')';\n  TokenKind['SPREAD'] = '...';\n  TokenKind['COLON'] = ':';\n  TokenKind['EQUALS'] = '=';\n  TokenKind['AT'] = '@';\n  TokenKind['BRACKET_L'] = '[';\n  TokenKind['BRACKET_R'] = ']';\n  TokenKind['BRACE_L'] = '{';\n  TokenKind['PIPE'] = '|';\n  TokenKind['BRACE_R'] = '}';\n  TokenKind['NAME'] = 'Name';\n  TokenKind['INT'] = 'Int';\n  TokenKind['FLOAT'] = 'Float';\n  TokenKind['STRING'] = 'String';\n  TokenKind['BLOCK_STRING'] = 'BlockString';\n  TokenKind['COMMENT'] = 'Comment';\n})(TokenKind || (TokenKind = {}));\n\nexport { TokenKind };\n/**\n * The enum type representing the token kinds values.\n *\n * @deprecated Please use `TokenKind`. Will be remove in v17.\n */\n","import { syntaxError } from '../error/syntaxError.mjs';\nimport { Token } from './ast.mjs';\nimport { dedentBlockStringLines } from './blockString.mjs';\nimport { isDigit, isNameContinue, isNameStart } from './characterClasses.mjs';\nimport { TokenKind } from './tokenKind.mjs';\n/**\n * Given a Source object, creates a Lexer for that source.\n * A Lexer is a stateful stream generator in that every time\n * it is advanced, it returns the next token in the Source. Assuming the\n * source lexes, the final Token emitted by the lexer will be of kind\n * EOF, after which the lexer will repeatedly return the same EOF token\n * whenever called.\n */\n\nexport class Lexer {\n  /**\n   * The previously focused non-ignored token.\n   */\n\n  /**\n   * The currently focused non-ignored token.\n   */\n\n  /**\n   * The (1-indexed) line containing the current token.\n   */\n\n  /**\n   * The character offset at which the current line begins.\n   */\n  constructor(source) {\n    const startOfFileToken = new Token(TokenKind.SOF, 0, 0, 0, 0);\n    this.source = source;\n    this.lastToken = startOfFileToken;\n    this.token = startOfFileToken;\n    this.line = 1;\n    this.lineStart = 0;\n  }\n\n  get [Symbol.toStringTag]() {\n    return 'Lexer';\n  }\n  /**\n   * Advances the token stream to the next non-ignored token.\n   */\n\n  advance() {\n    this.lastToken = this.token;\n    const token = (this.token = this.lookahead());\n    return token;\n  }\n  /**\n   * Looks ahead and returns the next non-ignored token, but does not change\n   * the state of Lexer.\n   */\n\n  lookahead() {\n    let token = this.token;\n\n    if (token.kind !== TokenKind.EOF) {\n      do {\n        if (token.next) {\n          token = token.next;\n        } else {\n          // Read the next token and form a link in the token linked-list.\n          const nextToken = readNextToken(this, token.end); // @ts-expect-error next is only mutable during parsing.\n\n          token.next = nextToken; // @ts-expect-error prev is only mutable during parsing.\n\n          nextToken.prev = token;\n          token = nextToken;\n        }\n      } while (token.kind === TokenKind.COMMENT);\n    }\n\n    return token;\n  }\n}\n/**\n * @internal\n */\n\nexport function isPunctuatorTokenKind(kind) {\n  return (\n    kind === TokenKind.BANG ||\n    kind === TokenKind.DOLLAR ||\n    kind === TokenKind.AMP ||\n    kind === TokenKind.PAREN_L ||\n    kind === TokenKind.PAREN_R ||\n    kind === TokenKind.SPREAD ||\n    kind === TokenKind.COLON ||\n    kind === TokenKind.EQUALS ||\n    kind === TokenKind.AT ||\n    kind === TokenKind.BRACKET_L ||\n    kind === TokenKind.BRACKET_R ||\n    kind === TokenKind.BRACE_L ||\n    kind === TokenKind.PIPE ||\n    kind === TokenKind.BRACE_R\n  );\n}\n/**\n * A Unicode scalar value is any Unicode code point except surrogate code\n * points. In other words, the inclusive ranges of values 0x0000 to 0xD7FF and\n * 0xE000 to 0x10FFFF.\n *\n * SourceCharacter ::\n *   - \"Any Unicode scalar value\"\n */\n\nfunction isUnicodeScalarValue(code) {\n  return (\n    (code >= 0x0000 && code <= 0xd7ff) || (code >= 0xe000 && code <= 0x10ffff)\n  );\n}\n/**\n * The GraphQL specification defines source text as a sequence of unicode scalar\n * values (which Unicode defines to exclude surrogate code points). However\n * JavaScript defines strings as a sequence of UTF-16 code units which may\n * include surrogates. A surrogate pair is a valid source character as it\n * encodes a supplementary code point (above U+FFFF), but unpaired surrogate\n * code points are not valid source characters.\n */\n\nfunction isSupplementaryCodePoint(body, location) {\n  return (\n    isLeadingSurrogate(body.charCodeAt(location)) &&\n    isTrailingSurrogate(body.charCodeAt(location + 1))\n  );\n}\n\nfunction isLeadingSurrogate(code) {\n  return code >= 0xd800 && code <= 0xdbff;\n}\n\nfunction isTrailingSurrogate(code) {\n  return code >= 0xdc00 && code <= 0xdfff;\n}\n/**\n * Prints the code point (or end of file reference) at a given location in a\n * source for use in error messages.\n *\n * Printable ASCII is printed quoted, while other points are printed in Unicode\n * code point form (ie. U+1234).\n */\n\nfunction printCodePointAt(lexer, location) {\n  const code = lexer.source.body.codePointAt(location);\n\n  if (code === undefined) {\n    return TokenKind.EOF;\n  } else if (code >= 0x0020 && code <= 0x007e) {\n    // Printable ASCII\n    const char = String.fromCodePoint(code);\n    return char === '\"' ? \"'\\\"'\" : `\"${char}\"`;\n  } // Unicode code point\n\n  return 'U+' + code.toString(16).toUpperCase().padStart(4, '0');\n}\n/**\n * Create a token with line and column location information.\n */\n\nfunction createToken(lexer, kind, start, end, value) {\n  const line = lexer.line;\n  const col = 1 + start - lexer.lineStart;\n  return new Token(kind, start, end, line, col, value);\n}\n/**\n * Gets the next token from the source starting at the given position.\n *\n * This skips over whitespace until it finds the next lexable token, then lexes\n * punctuators immediately or calls the appropriate helper function for more\n * complicated tokens.\n */\n\nfunction readNextToken(lexer, start) {\n  const body = lexer.source.body;\n  const bodyLength = body.length;\n  let position = start;\n\n  while (position < bodyLength) {\n    const code = body.charCodeAt(position); // SourceCharacter\n\n    switch (code) {\n      // Ignored ::\n      //   - UnicodeBOM\n      //   - WhiteSpace\n      //   - LineTerminator\n      //   - Comment\n      //   - Comma\n      //\n      // UnicodeBOM :: \"Byte Order Mark (U+FEFF)\"\n      //\n      // WhiteSpace ::\n      //   - \"Horizontal Tab (U+0009)\"\n      //   - \"Space (U+0020)\"\n      //\n      // Comma :: ,\n      case 0xfeff: // <BOM>\n\n      case 0x0009: // \\t\n\n      case 0x0020: // <space>\n\n      case 0x002c:\n        // ,\n        ++position;\n        continue;\n      // LineTerminator ::\n      //   - \"New Line (U+000A)\"\n      //   - \"Carriage Return (U+000D)\" [lookahead != \"New Line (U+000A)\"]\n      //   - \"Carriage Return (U+000D)\" \"New Line (U+000A)\"\n\n      case 0x000a:\n        // \\n\n        ++position;\n        ++lexer.line;\n        lexer.lineStart = position;\n        continue;\n\n      case 0x000d:\n        // \\r\n        if (body.charCodeAt(position + 1) === 0x000a) {\n          position += 2;\n        } else {\n          ++position;\n        }\n\n        ++lexer.line;\n        lexer.lineStart = position;\n        continue;\n      // Comment\n\n      case 0x0023:\n        // #\n        return readComment(lexer, position);\n      // Token ::\n      //   - Punctuator\n      //   - Name\n      //   - IntValue\n      //   - FloatValue\n      //   - StringValue\n      //\n      // Punctuator :: one of ! $ & ( ) ... : = @ [ ] { | }\n\n      case 0x0021:\n        // !\n        return createToken(lexer, TokenKind.BANG, position, position + 1);\n\n      case 0x0024:\n        // $\n        return createToken(lexer, TokenKind.DOLLAR, position, position + 1);\n\n      case 0x0026:\n        // &\n        return createToken(lexer, TokenKind.AMP, position, position + 1);\n\n      case 0x0028:\n        // (\n        return createToken(lexer, TokenKind.PAREN_L, position, position + 1);\n\n      case 0x0029:\n        // )\n        return createToken(lexer, TokenKind.PAREN_R, position, position + 1);\n\n      case 0x002e:\n        // .\n        if (\n          body.charCodeAt(position + 1) === 0x002e &&\n          body.charCodeAt(position + 2) === 0x002e\n        ) {\n          return createToken(lexer, TokenKind.SPREAD, position, position + 3);\n        }\n\n        break;\n\n      case 0x003a:\n        // :\n        return createToken(lexer, TokenKind.COLON, position, position + 1);\n\n      case 0x003d:\n        // =\n        return createToken(lexer, TokenKind.EQUALS, position, position + 1);\n\n      case 0x0040:\n        // @\n        return createToken(lexer, TokenKind.AT, position, position + 1);\n\n      case 0x005b:\n        // [\n        return createToken(lexer, TokenKind.BRACKET_L, position, position + 1);\n\n      case 0x005d:\n        // ]\n        return createToken(lexer, TokenKind.BRACKET_R, position, position + 1);\n\n      case 0x007b:\n        // {\n        return createToken(lexer, TokenKind.BRACE_L, position, position + 1);\n\n      case 0x007c:\n        // |\n        return createToken(lexer, TokenKind.PIPE, position, position + 1);\n\n      case 0x007d:\n        // }\n        return createToken(lexer, TokenKind.BRACE_R, position, position + 1);\n      // StringValue\n\n      case 0x0022:\n        // \"\n        if (\n          body.charCodeAt(position + 1) === 0x0022 &&\n          body.charCodeAt(position + 2) === 0x0022\n        ) {\n          return readBlockString(lexer, position);\n        }\n\n        return readString(lexer, position);\n    } // IntValue | FloatValue (Digit | -)\n\n    if (isDigit(code) || code === 0x002d) {\n      return readNumber(lexer, position, code);\n    } // Name\n\n    if (isNameStart(code)) {\n      return readName(lexer, position);\n    }\n\n    throw syntaxError(\n      lexer.source,\n      position,\n      code === 0x0027\n        ? 'Unexpected single quote character (\\'), did you mean to use a double quote (\")?'\n        : isUnicodeScalarValue(code) || isSupplementaryCodePoint(body, position)\n        ? `Unexpected character: ${printCodePointAt(lexer, position)}.`\n        : `Invalid character: ${printCodePointAt(lexer, position)}.`,\n    );\n  }\n\n  return createToken(lexer, TokenKind.EOF, bodyLength, bodyLength);\n}\n/**\n * Reads a comment token from the source file.\n *\n * ```\n * Comment :: # CommentChar* [lookahead != CommentChar]\n *\n * CommentChar :: SourceCharacter but not LineTerminator\n * ```\n */\n\nfunction readComment(lexer, start) {\n  const body = lexer.source.body;\n  const bodyLength = body.length;\n  let position = start + 1;\n\n  while (position < bodyLength) {\n    const code = body.charCodeAt(position); // LineTerminator (\\n | \\r)\n\n    if (code === 0x000a || code === 0x000d) {\n      break;\n    } // SourceCharacter\n\n    if (isUnicodeScalarValue(code)) {\n      ++position;\n    } else if (isSupplementaryCodePoint(body, position)) {\n      position += 2;\n    } else {\n      break;\n    }\n  }\n\n  return createToken(\n    lexer,\n    TokenKind.COMMENT,\n    start,\n    position,\n    body.slice(start + 1, position),\n  );\n}\n/**\n * Reads a number token from the source file, either a FloatValue or an IntValue\n * depending on whether a FractionalPart or ExponentPart is encountered.\n *\n * ```\n * IntValue :: IntegerPart [lookahead != {Digit, `.`, NameStart}]\n *\n * IntegerPart ::\n *   - NegativeSign? 0\n *   - NegativeSign? NonZeroDigit Digit*\n *\n * NegativeSign :: -\n *\n * NonZeroDigit :: Digit but not `0`\n *\n * FloatValue ::\n *   - IntegerPart FractionalPart ExponentPart [lookahead != {Digit, `.`, NameStart}]\n *   - IntegerPart FractionalPart [lookahead != {Digit, `.`, NameStart}]\n *   - IntegerPart ExponentPart [lookahead != {Digit, `.`, NameStart}]\n *\n * FractionalPart :: . Digit+\n *\n * ExponentPart :: ExponentIndicator Sign? Digit+\n *\n * ExponentIndicator :: one of `e` `E`\n *\n * Sign :: one of + -\n * ```\n */\n\nfunction readNumber(lexer, start, firstCode) {\n  const body = lexer.source.body;\n  let position = start;\n  let code = firstCode;\n  let isFloat = false; // NegativeSign (-)\n\n  if (code === 0x002d) {\n    code = body.charCodeAt(++position);\n  } // Zero (0)\n\n  if (code === 0x0030) {\n    code = body.charCodeAt(++position);\n\n    if (isDigit(code)) {\n      throw syntaxError(\n        lexer.source,\n        position,\n        `Invalid number, unexpected digit after 0: ${printCodePointAt(\n          lexer,\n          position,\n        )}.`,\n      );\n    }\n  } else {\n    position = readDigits(lexer, position, code);\n    code = body.charCodeAt(position);\n  } // Full stop (.)\n\n  if (code === 0x002e) {\n    isFloat = true;\n    code = body.charCodeAt(++position);\n    position = readDigits(lexer, position, code);\n    code = body.charCodeAt(position);\n  } // E e\n\n  if (code === 0x0045 || code === 0x0065) {\n    isFloat = true;\n    code = body.charCodeAt(++position); // + -\n\n    if (code === 0x002b || code === 0x002d) {\n      code = body.charCodeAt(++position);\n    }\n\n    position = readDigits(lexer, position, code);\n    code = body.charCodeAt(position);\n  } // Numbers cannot be followed by . or NameStart\n\n  if (code === 0x002e || isNameStart(code)) {\n    throw syntaxError(\n      lexer.source,\n      position,\n      `Invalid number, expected digit but got: ${printCodePointAt(\n        lexer,\n        position,\n      )}.`,\n    );\n  }\n\n  return createToken(\n    lexer,\n    isFloat ? TokenKind.FLOAT : TokenKind.INT,\n    start,\n    position,\n    body.slice(start, position),\n  );\n}\n/**\n * Returns the new position in the source after reading one or more digits.\n */\n\nfunction readDigits(lexer, start, firstCode) {\n  if (!isDigit(firstCode)) {\n    throw syntaxError(\n      lexer.source,\n      start,\n      `Invalid number, expected digit but got: ${printCodePointAt(\n        lexer,\n        start,\n      )}.`,\n    );\n  }\n\n  const body = lexer.source.body;\n  let position = start + 1; // +1 to skip first firstCode\n\n  while (isDigit(body.charCodeAt(position))) {\n    ++position;\n  }\n\n  return position;\n}\n/**\n * Reads a single-quote string token from the source file.\n *\n * ```\n * StringValue ::\n *   - `\"\"` [lookahead != `\"`]\n *   - `\"` StringCharacter+ `\"`\n *\n * StringCharacter ::\n *   - SourceCharacter but not `\"` or `\\` or LineTerminator\n *   - `\\u` EscapedUnicode\n *   - `\\` EscapedCharacter\n *\n * EscapedUnicode ::\n *   - `{` HexDigit+ `}`\n *   - HexDigit HexDigit HexDigit HexDigit\n *\n * EscapedCharacter :: one of `\"` `\\` `/` `b` `f` `n` `r` `t`\n * ```\n */\n\nfunction readString(lexer, start) {\n  const body = lexer.source.body;\n  const bodyLength = body.length;\n  let position = start + 1;\n  let chunkStart = position;\n  let value = '';\n\n  while (position < bodyLength) {\n    const code = body.charCodeAt(position); // Closing Quote (\")\n\n    if (code === 0x0022) {\n      value += body.slice(chunkStart, position);\n      return createToken(lexer, TokenKind.STRING, start, position + 1, value);\n    } // Escape Sequence (\\)\n\n    if (code === 0x005c) {\n      value += body.slice(chunkStart, position);\n      const escape =\n        body.charCodeAt(position + 1) === 0x0075 // u\n          ? body.charCodeAt(position + 2) === 0x007b // {\n            ? readEscapedUnicodeVariableWidth(lexer, position)\n            : readEscapedUnicodeFixedWidth(lexer, position)\n          : readEscapedCharacter(lexer, position);\n      value += escape.value;\n      position += escape.size;\n      chunkStart = position;\n      continue;\n    } // LineTerminator (\\n | \\r)\n\n    if (code === 0x000a || code === 0x000d) {\n      break;\n    } // SourceCharacter\n\n    if (isUnicodeScalarValue(code)) {\n      ++position;\n    } else if (isSupplementaryCodePoint(body, position)) {\n      position += 2;\n    } else {\n      throw syntaxError(\n        lexer.source,\n        position,\n        `Invalid character within String: ${printCodePointAt(\n          lexer,\n          position,\n        )}.`,\n      );\n    }\n  }\n\n  throw syntaxError(lexer.source, position, 'Unterminated string.');\n} // The string value and lexed size of an escape sequence.\n\nfunction readEscapedUnicodeVariableWidth(lexer, position) {\n  const body = lexer.source.body;\n  let point = 0;\n  let size = 3; // Cannot be larger than 12 chars (\\u{00000000}).\n\n  while (size < 12) {\n    const code = body.charCodeAt(position + size++); // Closing Brace (})\n\n    if (code === 0x007d) {\n      // Must be at least 5 chars (\\u{0}) and encode a Unicode scalar value.\n      if (size < 5 || !isUnicodeScalarValue(point)) {\n        break;\n      }\n\n      return {\n        value: String.fromCodePoint(point),\n        size,\n      };\n    } // Append this hex digit to the code point.\n\n    point = (point << 4) | readHexDigit(code);\n\n    if (point < 0) {\n      break;\n    }\n  }\n\n  throw syntaxError(\n    lexer.source,\n    position,\n    `Invalid Unicode escape sequence: \"${body.slice(\n      position,\n      position + size,\n    )}\".`,\n  );\n}\n\nfunction readEscapedUnicodeFixedWidth(lexer, position) {\n  const body = lexer.source.body;\n  const code = read16BitHexCode(body, position + 2);\n\n  if (isUnicodeScalarValue(code)) {\n    return {\n      value: String.fromCodePoint(code),\n      size: 6,\n    };\n  } // GraphQL allows JSON-style surrogate pair escape sequences, but only when\n  // a valid pair is formed.\n\n  if (isLeadingSurrogate(code)) {\n    // \\u\n    if (\n      body.charCodeAt(position + 6) === 0x005c &&\n      body.charCodeAt(position + 7) === 0x0075\n    ) {\n      const trailingCode = read16BitHexCode(body, position + 8);\n\n      if (isTrailingSurrogate(trailingCode)) {\n        // JavaScript defines strings as a sequence of UTF-16 code units and\n        // encodes Unicode code points above U+FFFF using a surrogate pair of\n        // code units. Since this is a surrogate pair escape sequence, just\n        // include both codes into the JavaScript string value. Had JavaScript\n        // not been internally based on UTF-16, then this surrogate pair would\n        // be decoded to retrieve the supplementary code point.\n        return {\n          value: String.fromCodePoint(code, trailingCode),\n          size: 12,\n        };\n      }\n    }\n  }\n\n  throw syntaxError(\n    lexer.source,\n    position,\n    `Invalid Unicode escape sequence: \"${body.slice(position, position + 6)}\".`,\n  );\n}\n/**\n * Reads four hexadecimal characters and returns the positive integer that 16bit\n * hexadecimal string represents. For example, \"000f\" will return 15, and \"dead\"\n * will return 57005.\n *\n * Returns a negative number if any char was not a valid hexadecimal digit.\n */\n\nfunction read16BitHexCode(body, position) {\n  // readHexDigit() returns -1 on error. ORing a negative value with any other\n  // value always produces a negative value.\n  return (\n    (readHexDigit(body.charCodeAt(position)) << 12) |\n    (readHexDigit(body.charCodeAt(position + 1)) << 8) |\n    (readHexDigit(body.charCodeAt(position + 2)) << 4) |\n    readHexDigit(body.charCodeAt(position + 3))\n  );\n}\n/**\n * Reads a hexadecimal character and returns its positive integer value (0-15).\n *\n * '0' becomes 0, '9' becomes 9\n * 'A' becomes 10, 'F' becomes 15\n * 'a' becomes 10, 'f' becomes 15\n *\n * Returns -1 if the provided character code was not a valid hexadecimal digit.\n *\n * HexDigit :: one of\n *   - `0` `1` `2` `3` `4` `5` `6` `7` `8` `9`\n *   - `A` `B` `C` `D` `E` `F`\n *   - `a` `b` `c` `d` `e` `f`\n */\n\nfunction readHexDigit(code) {\n  return code >= 0x0030 && code <= 0x0039 // 0-9\n    ? code - 0x0030\n    : code >= 0x0041 && code <= 0x0046 // A-F\n    ? code - 0x0037\n    : code >= 0x0061 && code <= 0x0066 // a-f\n    ? code - 0x0057\n    : -1;\n}\n/**\n * | Escaped Character | Code Point | Character Name               |\n * | ----------------- | ---------- | ---------------------------- |\n * | `\"`               | U+0022     | double quote                 |\n * | `\\`               | U+005C     | reverse solidus (back slash) |\n * | `/`               | U+002F     | solidus (forward slash)      |\n * | `b`               | U+0008     | backspace                    |\n * | `f`               | U+000C     | form feed                    |\n * | `n`               | U+000A     | line feed (new line)         |\n * | `r`               | U+000D     | carriage return              |\n * | `t`               | U+0009     | horizontal tab               |\n */\n\nfunction readEscapedCharacter(lexer, position) {\n  const body = lexer.source.body;\n  const code = body.charCodeAt(position + 1);\n\n  switch (code) {\n    case 0x0022:\n      // \"\n      return {\n        value: '\\u0022',\n        size: 2,\n      };\n\n    case 0x005c:\n      // \\\n      return {\n        value: '\\u005c',\n        size: 2,\n      };\n\n    case 0x002f:\n      // /\n      return {\n        value: '\\u002f',\n        size: 2,\n      };\n\n    case 0x0062:\n      // b\n      return {\n        value: '\\u0008',\n        size: 2,\n      };\n\n    case 0x0066:\n      // f\n      return {\n        value: '\\u000c',\n        size: 2,\n      };\n\n    case 0x006e:\n      // n\n      return {\n        value: '\\u000a',\n        size: 2,\n      };\n\n    case 0x0072:\n      // r\n      return {\n        value: '\\u000d',\n        size: 2,\n      };\n\n    case 0x0074:\n      // t\n      return {\n        value: '\\u0009',\n        size: 2,\n      };\n  }\n\n  throw syntaxError(\n    lexer.source,\n    position,\n    `Invalid character escape sequence: \"${body.slice(\n      position,\n      position + 2,\n    )}\".`,\n  );\n}\n/**\n * Reads a block string token from the source file.\n *\n * ```\n * StringValue ::\n *   - `\"\"\"` BlockStringCharacter* `\"\"\"`\n *\n * BlockStringCharacter ::\n *   - SourceCharacter but not `\"\"\"` or `\\\"\"\"`\n *   - `\\\"\"\"`\n * ```\n */\n\nfunction readBlockString(lexer, start) {\n  const body = lexer.source.body;\n  const bodyLength = body.length;\n  let lineStart = lexer.lineStart;\n  let position = start + 3;\n  let chunkStart = position;\n  let currentLine = '';\n  const blockLines = [];\n\n  while (position < bodyLength) {\n    const code = body.charCodeAt(position); // Closing Triple-Quote (\"\"\")\n\n    if (\n      code === 0x0022 &&\n      body.charCodeAt(position + 1) === 0x0022 &&\n      body.charCodeAt(position + 2) === 0x0022\n    ) {\n      currentLine += body.slice(chunkStart, position);\n      blockLines.push(currentLine);\n      const token = createToken(\n        lexer,\n        TokenKind.BLOCK_STRING,\n        start,\n        position + 3, // Return a string of the lines joined with U+000A.\n        dedentBlockStringLines(blockLines).join('\\n'),\n      );\n      lexer.line += blockLines.length - 1;\n      lexer.lineStart = lineStart;\n      return token;\n    } // Escaped Triple-Quote (\\\"\"\")\n\n    if (\n      code === 0x005c &&\n      body.charCodeAt(position + 1) === 0x0022 &&\n      body.charCodeAt(position + 2) === 0x0022 &&\n      body.charCodeAt(position + 3) === 0x0022\n    ) {\n      currentLine += body.slice(chunkStart, position);\n      chunkStart = position + 1; // skip only slash\n\n      position += 4;\n      continue;\n    } // LineTerminator\n\n    if (code === 0x000a || code === 0x000d) {\n      currentLine += body.slice(chunkStart, position);\n      blockLines.push(currentLine);\n\n      if (code === 0x000d && body.charCodeAt(position + 1) === 0x000a) {\n        position += 2;\n      } else {\n        ++position;\n      }\n\n      currentLine = '';\n      chunkStart = position;\n      lineStart = position;\n      continue;\n    } // SourceCharacter\n\n    if (isUnicodeScalarValue(code)) {\n      ++position;\n    } else if (isSupplementaryCodePoint(body, position)) {\n      position += 2;\n    } else {\n      throw syntaxError(\n        lexer.source,\n        position,\n        `Invalid character within String: ${printCodePointAt(\n          lexer,\n          position,\n        )}.`,\n      );\n    }\n  }\n\n  throw syntaxError(lexer.source, position, 'Unterminated string.');\n}\n/**\n * Reads an alphanumeric + underscore name from the source.\n *\n * ```\n * Name ::\n *   - NameStart NameContinue* [lookahead != NameContinue]\n * ```\n */\n\nfunction readName(lexer, start) {\n  const body = lexer.source.body;\n  const bodyLength = body.length;\n  let position = start + 1;\n\n  while (position < bodyLength) {\n    const code = body.charCodeAt(position);\n\n    if (isNameContinue(code)) {\n      ++position;\n    } else {\n      break;\n    }\n  }\n\n  return createToken(\n    lexer,\n    TokenKind.NAME,\n    start,\n    position,\n    body.slice(start, position),\n  );\n}\n","const MAX_ARRAY_LENGTH = 10;\nconst MAX_RECURSIVE_DEPTH = 2;\n/**\n * Used to print values in error messages.\n */\n\nexport function inspect(value) {\n  return formatValue(value, []);\n}\n\nfunction formatValue(value, seenValues) {\n  switch (typeof value) {\n    case 'string':\n      return JSON.stringify(value);\n\n    case 'function':\n      return value.name ? `[function ${value.name}]` : '[function]';\n\n    case 'object':\n      return formatObjectValue(value, seenValues);\n\n    default:\n      return String(value);\n  }\n}\n\nfunction formatObjectValue(value, previouslySeenValues) {\n  if (value === null) {\n    return 'null';\n  }\n\n  if (previouslySeenValues.includes(value)) {\n    return '[Circular]';\n  }\n\n  const seenValues = [...previouslySeenValues, value];\n\n  if (isJSONable(value)) {\n    const jsonValue = value.toJSON(); // check for infinite recursion\n\n    if (jsonValue !== value) {\n      return typeof jsonValue === 'string'\n        ? jsonValue\n        : formatValue(jsonValue, seenValues);\n    }\n  } else if (Array.isArray(value)) {\n    return formatArray(value, seenValues);\n  }\n\n  return formatObject(value, seenValues);\n}\n\nfunction isJSONable(value) {\n  return typeof value.toJSON === 'function';\n}\n\nfunction formatObject(object, seenValues) {\n  const entries = Object.entries(object);\n\n  if (entries.length === 0) {\n    return '{}';\n  }\n\n  if (seenValues.length > MAX_RECURSIVE_DEPTH) {\n    return '[' + getObjectTag(object) + ']';\n  }\n\n  const properties = entries.map(\n    ([key, value]) => key + ': ' + formatValue(value, seenValues),\n  );\n  return '{ ' + properties.join(', ') + ' }';\n}\n\nfunction formatArray(array, seenValues) {\n  if (array.length === 0) {\n    return '[]';\n  }\n\n  if (seenValues.length > MAX_RECURSIVE_DEPTH) {\n    return '[Array]';\n  }\n\n  const len = Math.min(MAX_ARRAY_LENGTH, array.length);\n  const remaining = array.length - len;\n  const items = [];\n\n  for (let i = 0; i < len; ++i) {\n    items.push(formatValue(array[i], seenValues));\n  }\n\n  if (remaining === 1) {\n    items.push('... 1 more item');\n  } else if (remaining > 1) {\n    items.push(`... ${remaining} more items`);\n  }\n\n  return '[' + items.join(', ') + ']';\n}\n\nfunction getObjectTag(object) {\n  const tag = Object.prototype.toString\n    .call(object)\n    .replace(/^\\[object /, '')\n    .replace(/]$/, '');\n\n  if (tag === 'Object' && typeof object.constructor === 'function') {\n    const name = object.constructor.name;\n\n    if (typeof name === 'string' && name !== '') {\n      return name;\n    }\n  }\n\n  return tag;\n}\n","import { inspect } from './inspect.mjs';\n/**\n * A replacement for instanceof which includes an error warning when multi-realm\n * constructors are detected.\n * See: https://expressjs.com/en/advanced/best-practice-performance.html#set-node_env-to-production\n * See: https://webpack.js.org/guides/production/\n */\n\nexport const instanceOf =\n  /* c8 ignore next 6 */\n  // FIXME: https://github.com/graphql/graphql-js/issues/2317\n  // eslint-disable-next-line no-undef\n  process.env.NODE_ENV === 'production'\n    ? function instanceOf(value, constructor) {\n        return value instanceof constructor;\n      }\n    : function instanceOf(value, constructor) {\n        if (value instanceof constructor) {\n          return true;\n        }\n\n        if (typeof value === 'object' && value !== null) {\n          var _value$constructor;\n\n          // Prefer Symbol.toStringTag since it is immune to minification.\n          const className = constructor.prototype[Symbol.toStringTag];\n          const valueClassName = // We still need to support constructor's name to detect conflicts with older versions of this library.\n            Symbol.toStringTag in value // @ts-expect-error TS bug see, https://github.com/microsoft/TypeScript/issues/38009\n              ? value[Symbol.toStringTag]\n              : (_value$constructor = value.constructor) === null ||\n                _value$constructor === void 0\n              ? void 0\n              : _value$constructor.name;\n\n          if (className === valueClassName) {\n            const stringifiedValue = inspect(value);\n            throw new Error(`Cannot use ${className} \"${stringifiedValue}\" from another module or realm.\n\nEnsure that there is only one instance of \"graphql\" in the node_modules\ndirectory. If different versions of \"graphql\" are the dependencies of other\nrelied on modules, use \"resolutions\" to ensure only one version is installed.\n\nhttps://yarnpkg.com/en/docs/selective-version-resolutions\n\nDuplicate \"graphql\" modules cannot be used at the same time since different\nversions may have different capabilities and behavior. The data from one\nversion used in the function from another could produce confusing and\nspurious results.`);\n          }\n        }\n\n        return false;\n      };\n","import { devAssert } from '../jsutils/devAssert.mjs';\nimport { inspect } from '../jsutils/inspect.mjs';\nimport { instanceOf } from '../jsutils/instanceOf.mjs';\n\n/**\n * A representation of source input to GraphQL. The `name` and `locationOffset` parameters are\n * optional, but they are useful for clients who store GraphQL documents in source files.\n * For example, if the GraphQL input starts at line 40 in a file named `Foo.graphql`, it might\n * be useful for `name` to be `\"Foo.graphql\"` and location to be `{ line: 40, column: 1 }`.\n * The `line` and `column` properties in `locationOffset` are 1-indexed.\n */\nexport class Source {\n  constructor(\n    body,\n    name = 'GraphQL request',\n    locationOffset = {\n      line: 1,\n      column: 1,\n    },\n  ) {\n    typeof body === 'string' ||\n      devAssert(false, `Body must be a string. Received: ${inspect(body)}.`);\n    this.body = body;\n    this.name = name;\n    this.locationOffset = locationOffset;\n    this.locationOffset.line > 0 ||\n      devAssert(\n        false,\n        'line in locationOffset is 1-indexed and must be positive.',\n      );\n    this.locationOffset.column > 0 ||\n      devAssert(\n        false,\n        'column in locationOffset is 1-indexed and must be positive.',\n      );\n  }\n\n  get [Symbol.toStringTag]() {\n    return 'Source';\n  }\n}\n/**\n * Test if the given value is a Source object.\n *\n * @internal\n */\n\nexport function isSource(source) {\n  return instanceOf(source, Source);\n}\n","import { syntaxError } from '../error/syntaxError.mjs';\nimport { Location, OperationTypeNode } from './ast.mjs';\nimport { DirectiveLocation } from './directiveLocation.mjs';\nimport { Kind } from './kinds.mjs';\nimport { isPunctuatorTokenKind, Lexer } from './lexer.mjs';\nimport { isSource, Source } from './source.mjs';\nimport { TokenKind } from './tokenKind.mjs';\n/**\n * Configuration options to control parser behavior\n */\n\n/**\n * Given a GraphQL source, parses it into a Document.\n * Throws GraphQLError if a syntax error is encountered.\n */\nexport function parse(source, options) {\n  const parser = new Parser(source, options);\n  return parser.parseDocument();\n}\n/**\n * Given a string containing a GraphQL value (ex. `[42]`), parse the AST for\n * that value.\n * Throws GraphQLError if a syntax error is encountered.\n *\n * This is useful within tools that operate upon GraphQL Values directly and\n * in isolation of complete GraphQL documents.\n *\n * Consider providing the results to the utility function: valueFromAST().\n */\n\nexport function parseValue(source, options) {\n  const parser = new Parser(source, options);\n  parser.expectToken(TokenKind.SOF);\n  const value = parser.parseValueLiteral(false);\n  parser.expectToken(TokenKind.EOF);\n  return value;\n}\n/**\n * Similar to parseValue(), but raises a parse error if it encounters a\n * variable. The return type will be a constant value.\n */\n\nexport function parseConstValue(source, options) {\n  const parser = new Parser(source, options);\n  parser.expectToken(TokenKind.SOF);\n  const value = parser.parseConstValueLiteral();\n  parser.expectToken(TokenKind.EOF);\n  return value;\n}\n/**\n * Given a string containing a GraphQL Type (ex. `[Int!]`), parse the AST for\n * that type.\n * Throws GraphQLError if a syntax error is encountered.\n *\n * This is useful within tools that operate upon GraphQL Types directly and\n * in isolation of complete GraphQL documents.\n *\n * Consider providing the results to the utility function: typeFromAST().\n */\n\nexport function parseType(source, options) {\n  const parser = new Parser(source, options);\n  parser.expectToken(TokenKind.SOF);\n  const type = parser.parseTypeReference();\n  parser.expectToken(TokenKind.EOF);\n  return type;\n}\n/**\n * This class is exported only to assist people in implementing their own parsers\n * without duplicating too much code and should be used only as last resort for cases\n * such as experimental syntax or if certain features could not be contributed upstream.\n *\n * It is still part of the internal API and is versioned, so any changes to it are never\n * considered breaking changes. If you still need to support multiple versions of the\n * library, please use the `versionInfo` variable for version detection.\n *\n * @internal\n */\n\nexport class Parser {\n  constructor(source, options = {}) {\n    const sourceObj = isSource(source) ? source : new Source(source);\n    this._lexer = new Lexer(sourceObj);\n    this._options = options;\n    this._tokenCounter = 0;\n  }\n  /**\n   * Converts a name lex token into a name parse node.\n   */\n\n  parseName() {\n    const token = this.expectToken(TokenKind.NAME);\n    return this.node(token, {\n      kind: Kind.NAME,\n      value: token.value,\n    });\n  } // Implements the parsing rules in the Document section.\n\n  /**\n   * Document : Definition+\n   */\n\n  parseDocument() {\n    return this.node(this._lexer.token, {\n      kind: Kind.DOCUMENT,\n      definitions: this.many(\n        TokenKind.SOF,\n        this.parseDefinition,\n        TokenKind.EOF,\n      ),\n    });\n  }\n  /**\n   * Definition :\n   *   - ExecutableDefinition\n   *   - TypeSystemDefinition\n   *   - TypeSystemExtension\n   *\n   * ExecutableDefinition :\n   *   - OperationDefinition\n   *   - FragmentDefinition\n   *\n   * TypeSystemDefinition :\n   *   - SchemaDefinition\n   *   - TypeDefinition\n   *   - DirectiveDefinition\n   *\n   * TypeDefinition :\n   *   - ScalarTypeDefinition\n   *   - ObjectTypeDefinition\n   *   - InterfaceTypeDefinition\n   *   - UnionTypeDefinition\n   *   - EnumTypeDefinition\n   *   - InputObjectTypeDefinition\n   */\n\n  parseDefinition() {\n    if (this.peek(TokenKind.BRACE_L)) {\n      return this.parseOperationDefinition();\n    } // Many definitions begin with a description and require a lookahead.\n\n    const hasDescription = this.peekDescription();\n    const keywordToken = hasDescription\n      ? this._lexer.lookahead()\n      : this._lexer.token;\n\n    if (keywordToken.kind === TokenKind.NAME) {\n      switch (keywordToken.value) {\n        case 'schema':\n          return this.parseSchemaDefinition();\n\n        case 'scalar':\n          return this.parseScalarTypeDefinition();\n\n        case 'type':\n          return this.parseObjectTypeDefinition();\n\n        case 'interface':\n          return this.parseInterfaceTypeDefinition();\n\n        case 'union':\n          return this.parseUnionTypeDefinition();\n\n        case 'enum':\n          return this.parseEnumTypeDefinition();\n\n        case 'input':\n          return this.parseInputObjectTypeDefinition();\n\n        case 'directive':\n          return this.parseDirectiveDefinition();\n      }\n\n      if (hasDescription) {\n        throw syntaxError(\n          this._lexer.source,\n          this._lexer.token.start,\n          'Unexpected description, descriptions are supported only on type definitions.',\n        );\n      }\n\n      switch (keywordToken.value) {\n        case 'query':\n        case 'mutation':\n        case 'subscription':\n          return this.parseOperationDefinition();\n\n        case 'fragment':\n          return this.parseFragmentDefinition();\n\n        case 'extend':\n          return this.parseTypeSystemExtension();\n      }\n    }\n\n    throw this.unexpected(keywordToken);\n  } // Implements the parsing rules in the Operations section.\n\n  /**\n   * OperationDefinition :\n   *  - SelectionSet\n   *  - OperationType Name? VariableDefinitions? Directives? SelectionSet\n   */\n\n  parseOperationDefinition() {\n    const start = this._lexer.token;\n\n    if (this.peek(TokenKind.BRACE_L)) {\n      return this.node(start, {\n        kind: Kind.OPERATION_DEFINITION,\n        operation: OperationTypeNode.QUERY,\n        name: undefined,\n        variableDefinitions: [],\n        directives: [],\n        selectionSet: this.parseSelectionSet(),\n      });\n    }\n\n    const operation = this.parseOperationType();\n    let name;\n\n    if (this.peek(TokenKind.NAME)) {\n      name = this.parseName();\n    }\n\n    return this.node(start, {\n      kind: Kind.OPERATION_DEFINITION,\n      operation,\n      name,\n      variableDefinitions: this.parseVariableDefinitions(),\n      directives: this.parseDirectives(false),\n      selectionSet: this.parseSelectionSet(),\n    });\n  }\n  /**\n   * OperationType : one of query mutation subscription\n   */\n\n  parseOperationType() {\n    const operationToken = this.expectToken(TokenKind.NAME);\n\n    switch (operationToken.value) {\n      case 'query':\n        return OperationTypeNode.QUERY;\n\n      case 'mutation':\n        return OperationTypeNode.MUTATION;\n\n      case 'subscription':\n        return OperationTypeNode.SUBSCRIPTION;\n    }\n\n    throw this.unexpected(operationToken);\n  }\n  /**\n   * VariableDefinitions : ( VariableDefinition+ )\n   */\n\n  parseVariableDefinitions() {\n    return this.optionalMany(\n      TokenKind.PAREN_L,\n      this.parseVariableDefinition,\n      TokenKind.PAREN_R,\n    );\n  }\n  /**\n   * VariableDefinition : Variable : Type DefaultValue? Directives[Const]?\n   */\n\n  parseVariableDefinition() {\n    return this.node(this._lexer.token, {\n      kind: Kind.VARIABLE_DEFINITION,\n      variable: this.parseVariable(),\n      type: (this.expectToken(TokenKind.COLON), this.parseTypeReference()),\n      defaultValue: this.expectOptionalToken(TokenKind.EQUALS)\n        ? this.parseConstValueLiteral()\n        : undefined,\n      directives: this.parseConstDirectives(),\n    });\n  }\n  /**\n   * Variable : $ Name\n   */\n\n  parseVariable() {\n    const start = this._lexer.token;\n    this.expectToken(TokenKind.DOLLAR);\n    return this.node(start, {\n      kind: Kind.VARIABLE,\n      name: this.parseName(),\n    });\n  }\n  /**\n   * ```\n   * SelectionSet : { Selection+ }\n   * ```\n   */\n\n  parseSelectionSet() {\n    return this.node(this._lexer.token, {\n      kind: Kind.SELECTION_SET,\n      selections: this.many(\n        TokenKind.BRACE_L,\n        this.parseSelection,\n        TokenKind.BRACE_R,\n      ),\n    });\n  }\n  /**\n   * Selection :\n   *   - Field\n   *   - FragmentSpread\n   *   - InlineFragment\n   */\n\n  parseSelection() {\n    return this.peek(TokenKind.SPREAD)\n      ? this.parseFragment()\n      : this.parseField();\n  }\n  /**\n   * Field : Alias? Name Arguments? Directives? SelectionSet?\n   *\n   * Alias : Name :\n   */\n\n  parseField() {\n    const start = this._lexer.token;\n    const nameOrAlias = this.parseName();\n    let alias;\n    let name;\n\n    if (this.expectOptionalToken(TokenKind.COLON)) {\n      alias = nameOrAlias;\n      name = this.parseName();\n    } else {\n      name = nameOrAlias;\n    }\n\n    return this.node(start, {\n      kind: Kind.FIELD,\n      alias,\n      name,\n      arguments: this.parseArguments(false),\n      directives: this.parseDirectives(false),\n      selectionSet: this.peek(TokenKind.BRACE_L)\n        ? this.parseSelectionSet()\n        : undefined,\n    });\n  }\n  /**\n   * Arguments[Const] : ( Argument[?Const]+ )\n   */\n\n  parseArguments(isConst) {\n    const item = isConst ? this.parseConstArgument : this.parseArgument;\n    return this.optionalMany(TokenKind.PAREN_L, item, TokenKind.PAREN_R);\n  }\n  /**\n   * Argument[Const] : Name : Value[?Const]\n   */\n\n  parseArgument(isConst = false) {\n    const start = this._lexer.token;\n    const name = this.parseName();\n    this.expectToken(TokenKind.COLON);\n    return this.node(start, {\n      kind: Kind.ARGUMENT,\n      name,\n      value: this.parseValueLiteral(isConst),\n    });\n  }\n\n  parseConstArgument() {\n    return this.parseArgument(true);\n  } // Implements the parsing rules in the Fragments section.\n\n  /**\n   * Corresponds to both FragmentSpread and InlineFragment in the spec.\n   *\n   * FragmentSpread : ... FragmentName Directives?\n   *\n   * InlineFragment : ... TypeCondition? Directives? SelectionSet\n   */\n\n  parseFragment() {\n    const start = this._lexer.token;\n    this.expectToken(TokenKind.SPREAD);\n    const hasTypeCondition = this.expectOptionalKeyword('on');\n\n    if (!hasTypeCondition && this.peek(TokenKind.NAME)) {\n      return this.node(start, {\n        kind: Kind.FRAGMENT_SPREAD,\n        name: this.parseFragmentName(),\n        directives: this.parseDirectives(false),\n      });\n    }\n\n    return this.node(start, {\n      kind: Kind.INLINE_FRAGMENT,\n      typeCondition: hasTypeCondition ? this.parseNamedType() : undefined,\n      directives: this.parseDirectives(false),\n      selectionSet: this.parseSelectionSet(),\n    });\n  }\n  /**\n   * FragmentDefinition :\n   *   - fragment FragmentName on TypeCondition Directives? SelectionSet\n   *\n   * TypeCondition : NamedType\n   */\n\n  parseFragmentDefinition() {\n    const start = this._lexer.token;\n    this.expectKeyword('fragment'); // Legacy support for defining variables within fragments changes\n    // the grammar of FragmentDefinition:\n    //   - fragment FragmentName VariableDefinitions? on TypeCondition Directives? SelectionSet\n\n    if (this._options.allowLegacyFragmentVariables === true) {\n      return this.node(start, {\n        kind: Kind.FRAGMENT_DEFINITION,\n        name: this.parseFragmentName(),\n        variableDefinitions: this.parseVariableDefinitions(),\n        typeCondition: (this.expectKeyword('on'), this.parseNamedType()),\n        directives: this.parseDirectives(false),\n        selectionSet: this.parseSelectionSet(),\n      });\n    }\n\n    return this.node(start, {\n      kind: Kind.FRAGMENT_DEFINITION,\n      name: this.parseFragmentName(),\n      typeCondition: (this.expectKeyword('on'), this.parseNamedType()),\n      directives: this.parseDirectives(false),\n      selectionSet: this.parseSelectionSet(),\n    });\n  }\n  /**\n   * FragmentName : Name but not `on`\n   */\n\n  parseFragmentName() {\n    if (this._lexer.token.value === 'on') {\n      throw this.unexpected();\n    }\n\n    return this.parseName();\n  } // Implements the parsing rules in the Values section.\n\n  /**\n   * Value[Const] :\n   *   - [~Const] Variable\n   *   - IntValue\n   *   - FloatValue\n   *   - StringValue\n   *   - BooleanValue\n   *   - NullValue\n   *   - EnumValue\n   *   - ListValue[?Const]\n   *   - ObjectValue[?Const]\n   *\n   * BooleanValue : one of `true` `false`\n   *\n   * NullValue : `null`\n   *\n   * EnumValue : Name but not `true`, `false` or `null`\n   */\n\n  parseValueLiteral(isConst) {\n    const token = this._lexer.token;\n\n    switch (token.kind) {\n      case TokenKind.BRACKET_L:\n        return this.parseList(isConst);\n\n      case TokenKind.BRACE_L:\n        return this.parseObject(isConst);\n\n      case TokenKind.INT:\n        this.advanceLexer();\n        return this.node(token, {\n          kind: Kind.INT,\n          value: token.value,\n        });\n\n      case TokenKind.FLOAT:\n        this.advanceLexer();\n        return this.node(token, {\n          kind: Kind.FLOAT,\n          value: token.value,\n        });\n\n      case TokenKind.STRING:\n      case TokenKind.BLOCK_STRING:\n        return this.parseStringLiteral();\n\n      case TokenKind.NAME:\n        this.advanceLexer();\n\n        switch (token.value) {\n          case 'true':\n            return this.node(token, {\n              kind: Kind.BOOLEAN,\n              value: true,\n            });\n\n          case 'false':\n            return this.node(token, {\n              kind: Kind.BOOLEAN,\n              value: false,\n            });\n\n          case 'null':\n            return this.node(token, {\n              kind: Kind.NULL,\n            });\n\n          default:\n            return this.node(token, {\n              kind: Kind.ENUM,\n              value: token.value,\n            });\n        }\n\n      case TokenKind.DOLLAR:\n        if (isConst) {\n          this.expectToken(TokenKind.DOLLAR);\n\n          if (this._lexer.token.kind === TokenKind.NAME) {\n            const varName = this._lexer.token.value;\n            throw syntaxError(\n              this._lexer.source,\n              token.start,\n              `Unexpected variable \"$${varName}\" in constant value.`,\n            );\n          } else {\n            throw this.unexpected(token);\n          }\n        }\n\n        return this.parseVariable();\n\n      default:\n        throw this.unexpected();\n    }\n  }\n\n  parseConstValueLiteral() {\n    return this.parseValueLiteral(true);\n  }\n\n  parseStringLiteral() {\n    const token = this._lexer.token;\n    this.advanceLexer();\n    return this.node(token, {\n      kind: Kind.STRING,\n      value: token.value,\n      block: token.kind === TokenKind.BLOCK_STRING,\n    });\n  }\n  /**\n   * ListValue[Const] :\n   *   - [ ]\n   *   - [ Value[?Const]+ ]\n   */\n\n  parseList(isConst) {\n    const item = () => this.parseValueLiteral(isConst);\n\n    return this.node(this._lexer.token, {\n      kind: Kind.LIST,\n      values: this.any(TokenKind.BRACKET_L, item, TokenKind.BRACKET_R),\n    });\n  }\n  /**\n   * ```\n   * ObjectValue[Const] :\n   *   - { }\n   *   - { ObjectField[?Const]+ }\n   * ```\n   */\n\n  parseObject(isConst) {\n    const item = () => this.parseObjectField(isConst);\n\n    return this.node(this._lexer.token, {\n      kind: Kind.OBJECT,\n      fields: this.any(TokenKind.BRACE_L, item, TokenKind.BRACE_R),\n    });\n  }\n  /**\n   * ObjectField[Const] : Name : Value[?Const]\n   */\n\n  parseObjectField(isConst) {\n    const start = this._lexer.token;\n    const name = this.parseName();\n    this.expectToken(TokenKind.COLON);\n    return this.node(start, {\n      kind: Kind.OBJECT_FIELD,\n      name,\n      value: this.parseValueLiteral(isConst),\n    });\n  } // Implements the parsing rules in the Directives section.\n\n  /**\n   * Directives[Const] : Directive[?Const]+\n   */\n\n  parseDirectives(isConst) {\n    const directives = [];\n\n    while (this.peek(TokenKind.AT)) {\n      directives.push(this.parseDirective(isConst));\n    }\n\n    return directives;\n  }\n\n  parseConstDirectives() {\n    return this.parseDirectives(true);\n  }\n  /**\n   * ```\n   * Directive[Const] : @ Name Arguments[?Const]?\n   * ```\n   */\n\n  parseDirective(isConst) {\n    const start = this._lexer.token;\n    this.expectToken(TokenKind.AT);\n    return this.node(start, {\n      kind: Kind.DIRECTIVE,\n      name: this.parseName(),\n      arguments: this.parseArguments(isConst),\n    });\n  } // Implements the parsing rules in the Types section.\n\n  /**\n   * Type :\n   *   - NamedType\n   *   - ListType\n   *   - NonNullType\n   */\n\n  parseTypeReference() {\n    const start = this._lexer.token;\n    let type;\n\n    if (this.expectOptionalToken(TokenKind.BRACKET_L)) {\n      const innerType = this.parseTypeReference();\n      this.expectToken(TokenKind.BRACKET_R);\n      type = this.node(start, {\n        kind: Kind.LIST_TYPE,\n        type: innerType,\n      });\n    } else {\n      type = this.parseNamedType();\n    }\n\n    if (this.expectOptionalToken(TokenKind.BANG)) {\n      return this.node(start, {\n        kind: Kind.NON_NULL_TYPE,\n        type,\n      });\n    }\n\n    return type;\n  }\n  /**\n   * NamedType : Name\n   */\n\n  parseNamedType() {\n    return this.node(this._lexer.token, {\n      kind: Kind.NAMED_TYPE,\n      name: this.parseName(),\n    });\n  } // Implements the parsing rules in the Type Definition section.\n\n  peekDescription() {\n    return this.peek(TokenKind.STRING) || this.peek(TokenKind.BLOCK_STRING);\n  }\n  /**\n   * Description : StringValue\n   */\n\n  parseDescription() {\n    if (this.peekDescription()) {\n      return this.parseStringLiteral();\n    }\n  }\n  /**\n   * ```\n   * SchemaDefinition : Description? schema Directives[Const]? { OperationTypeDefinition+ }\n   * ```\n   */\n\n  parseSchemaDefinition() {\n    const start = this._lexer.token;\n    const description = this.parseDescription();\n    this.expectKeyword('schema');\n    const directives = this.parseConstDirectives();\n    const operationTypes = this.many(\n      TokenKind.BRACE_L,\n      this.parseOperationTypeDefinition,\n      TokenKind.BRACE_R,\n    );\n    return this.node(start, {\n      kind: Kind.SCHEMA_DEFINITION,\n      description,\n      directives,\n      operationTypes,\n    });\n  }\n  /**\n   * OperationTypeDefinition : OperationType : NamedType\n   */\n\n  parseOperationTypeDefinition() {\n    const start = this._lexer.token;\n    const operation = this.parseOperationType();\n    this.expectToken(TokenKind.COLON);\n    const type = this.parseNamedType();\n    return this.node(start, {\n      kind: Kind.OPERATION_TYPE_DEFINITION,\n      operation,\n      type,\n    });\n  }\n  /**\n   * ScalarTypeDefinition : Description? scalar Name Directives[Const]?\n   */\n\n  parseScalarTypeDefinition() {\n    const start = this._lexer.token;\n    const description = this.parseDescription();\n    this.expectKeyword('scalar');\n    const name = this.parseName();\n    const directives = this.parseConstDirectives();\n    return this.node(start, {\n      kind: Kind.SCALAR_TYPE_DEFINITION,\n      description,\n      name,\n      directives,\n    });\n  }\n  /**\n   * ObjectTypeDefinition :\n   *   Description?\n   *   type Name ImplementsInterfaces? Directives[Const]? FieldsDefinition?\n   */\n\n  parseObjectTypeDefinition() {\n    const start = this._lexer.token;\n    const description = this.parseDescription();\n    this.expectKeyword('type');\n    const name = this.parseName();\n    const interfaces = this.parseImplementsInterfaces();\n    const directives = this.parseConstDirectives();\n    const fields = this.parseFieldsDefinition();\n    return this.node(start, {\n      kind: Kind.OBJECT_TYPE_DEFINITION,\n      description,\n      name,\n      interfaces,\n      directives,\n      fields,\n    });\n  }\n  /**\n   * ImplementsInterfaces :\n   *   - implements `&`? NamedType\n   *   - ImplementsInterfaces & NamedType\n   */\n\n  parseImplementsInterfaces() {\n    return this.expectOptionalKeyword('implements')\n      ? this.delimitedMany(TokenKind.AMP, this.parseNamedType)\n      : [];\n  }\n  /**\n   * ```\n   * FieldsDefinition : { FieldDefinition+ }\n   * ```\n   */\n\n  parseFieldsDefinition() {\n    return this.optionalMany(\n      TokenKind.BRACE_L,\n      this.parseFieldDefinition,\n      TokenKind.BRACE_R,\n    );\n  }\n  /**\n   * FieldDefinition :\n   *   - Description? Name ArgumentsDefinition? : Type Directives[Const]?\n   */\n\n  parseFieldDefinition() {\n    const start = this._lexer.token;\n    const description = this.parseDescription();\n    const name = this.parseName();\n    const args = this.parseArgumentDefs();\n    this.expectToken(TokenKind.COLON);\n    const type = this.parseTypeReference();\n    const directives = this.parseConstDirectives();\n    return this.node(start, {\n      kind: Kind.FIELD_DEFINITION,\n      description,\n      name,\n      arguments: args,\n      type,\n      directives,\n    });\n  }\n  /**\n   * ArgumentsDefinition : ( InputValueDefinition+ )\n   */\n\n  parseArgumentDefs() {\n    return this.optionalMany(\n      TokenKind.PAREN_L,\n      this.parseInputValueDef,\n      TokenKind.PAREN_R,\n    );\n  }\n  /**\n   * InputValueDefinition :\n   *   - Description? Name : Type DefaultValue? Directives[Const]?\n   */\n\n  parseInputValueDef() {\n    const start = this._lexer.token;\n    const description = this.parseDescription();\n    const name = this.parseName();\n    this.expectToken(TokenKind.COLON);\n    const type = this.parseTypeReference();\n    let defaultValue;\n\n    if (this.expectOptionalToken(TokenKind.EQUALS)) {\n      defaultValue = this.parseConstValueLiteral();\n    }\n\n    const directives = this.parseConstDirectives();\n    return this.node(start, {\n      kind: Kind.INPUT_VALUE_DEFINITION,\n      description,\n      name,\n      type,\n      defaultValue,\n      directives,\n    });\n  }\n  /**\n   * InterfaceTypeDefinition :\n   *   - Description? interface Name Directives[Const]? FieldsDefinition?\n   */\n\n  parseInterfaceTypeDefinition() {\n    const start = this._lexer.token;\n    const description = this.parseDescription();\n    this.expectKeyword('interface');\n    const name = this.parseName();\n    const interfaces = this.parseImplementsInterfaces();\n    const directives = this.parseConstDirectives();\n    const fields = this.parseFieldsDefinition();\n    return this.node(start, {\n      kind: Kind.INTERFACE_TYPE_DEFINITION,\n      description,\n      name,\n      interfaces,\n      directives,\n      fields,\n    });\n  }\n  /**\n   * UnionTypeDefinition :\n   *   - Description? union Name Directives[Const]? UnionMemberTypes?\n   */\n\n  parseUnionTypeDefinition() {\n    const start = this._lexer.token;\n    const description = this.parseDescription();\n    this.expectKeyword('union');\n    const name = this.parseName();\n    const directives = this.parseConstDirectives();\n    const types = this.parseUnionMemberTypes();\n    return this.node(start, {\n      kind: Kind.UNION_TYPE_DEFINITION,\n      description,\n      name,\n      directives,\n      types,\n    });\n  }\n  /**\n   * UnionMemberTypes :\n   *   - = `|`? NamedType\n   *   - UnionMemberTypes | NamedType\n   */\n\n  parseUnionMemberTypes() {\n    return this.expectOptionalToken(TokenKind.EQUALS)\n      ? this.delimitedMany(TokenKind.PIPE, this.parseNamedType)\n      : [];\n  }\n  /**\n   * EnumTypeDefinition :\n   *   - Description? enum Name Directives[Const]? EnumValuesDefinition?\n   */\n\n  parseEnumTypeDefinition() {\n    const start = this._lexer.token;\n    const description = this.parseDescription();\n    this.expectKeyword('enum');\n    const name = this.parseName();\n    const directives = this.parseConstDirectives();\n    const values = this.parseEnumValuesDefinition();\n    return this.node(start, {\n      kind: Kind.ENUM_TYPE_DEFINITION,\n      description,\n      name,\n      directives,\n      values,\n    });\n  }\n  /**\n   * ```\n   * EnumValuesDefinition : { EnumValueDefinition+ }\n   * ```\n   */\n\n  parseEnumValuesDefinition() {\n    return this.optionalMany(\n      TokenKind.BRACE_L,\n      this.parseEnumValueDefinition,\n      TokenKind.BRACE_R,\n    );\n  }\n  /**\n   * EnumValueDefinition : Description? EnumValue Directives[Const]?\n   */\n\n  parseEnumValueDefinition() {\n    const start = this._lexer.token;\n    const description = this.parseDescription();\n    const name = this.parseEnumValueName();\n    const directives = this.parseConstDirectives();\n    return this.node(start, {\n      kind: Kind.ENUM_VALUE_DEFINITION,\n      description,\n      name,\n      directives,\n    });\n  }\n  /**\n   * EnumValue : Name but not `true`, `false` or `null`\n   */\n\n  parseEnumValueName() {\n    if (\n      this._lexer.token.value === 'true' ||\n      this._lexer.token.value === 'false' ||\n      this._lexer.token.value === 'null'\n    ) {\n      throw syntaxError(\n        this._lexer.source,\n        this._lexer.token.start,\n        `${getTokenDesc(\n          this._lexer.token,\n        )} is reserved and cannot be used for an enum value.`,\n      );\n    }\n\n    return this.parseName();\n  }\n  /**\n   * InputObjectTypeDefinition :\n   *   - Description? input Name Directives[Const]? InputFieldsDefinition?\n   */\n\n  parseInputObjectTypeDefinition() {\n    const start = this._lexer.token;\n    const description = this.parseDescription();\n    this.expectKeyword('input');\n    const name = this.parseName();\n    const directives = this.parseConstDirectives();\n    const fields = this.parseInputFieldsDefinition();\n    return this.node(start, {\n      kind: Kind.INPUT_OBJECT_TYPE_DEFINITION,\n      description,\n      name,\n      directives,\n      fields,\n    });\n  }\n  /**\n   * ```\n   * InputFieldsDefinition : { InputValueDefinition+ }\n   * ```\n   */\n\n  parseInputFieldsDefinition() {\n    return this.optionalMany(\n      TokenKind.BRACE_L,\n      this.parseInputValueDef,\n      TokenKind.BRACE_R,\n    );\n  }\n  /**\n   * TypeSystemExtension :\n   *   - SchemaExtension\n   *   - TypeExtension\n   *\n   * TypeExtension :\n   *   - ScalarTypeExtension\n   *   - ObjectTypeExtension\n   *   - InterfaceTypeExtension\n   *   - UnionTypeExtension\n   *   - EnumTypeExtension\n   *   - InputObjectTypeDefinition\n   */\n\n  parseTypeSystemExtension() {\n    const keywordToken = this._lexer.lookahead();\n\n    if (keywordToken.kind === TokenKind.NAME) {\n      switch (keywordToken.value) {\n        case 'schema':\n          return this.parseSchemaExtension();\n\n        case 'scalar':\n          return this.parseScalarTypeExtension();\n\n        case 'type':\n          return this.parseObjectTypeExtension();\n\n        case 'interface':\n          return this.parseInterfaceTypeExtension();\n\n        case 'union':\n          return this.parseUnionTypeExtension();\n\n        case 'enum':\n          return this.parseEnumTypeExtension();\n\n        case 'input':\n          return this.parseInputObjectTypeExtension();\n      }\n    }\n\n    throw this.unexpected(keywordToken);\n  }\n  /**\n   * ```\n   * SchemaExtension :\n   *  - extend schema Directives[Const]? { OperationTypeDefinition+ }\n   *  - extend schema Directives[Const]\n   * ```\n   */\n\n  parseSchemaExtension() {\n    const start = this._lexer.token;\n    this.expectKeyword('extend');\n    this.expectKeyword('schema');\n    const directives = this.parseConstDirectives();\n    const operationTypes = this.optionalMany(\n      TokenKind.BRACE_L,\n      this.parseOperationTypeDefinition,\n      TokenKind.BRACE_R,\n    );\n\n    if (directives.length === 0 && operationTypes.length === 0) {\n      throw this.unexpected();\n    }\n\n    return this.node(start, {\n      kind: Kind.SCHEMA_EXTENSION,\n      directives,\n      operationTypes,\n    });\n  }\n  /**\n   * ScalarTypeExtension :\n   *   - extend scalar Name Directives[Const]\n   */\n\n  parseScalarTypeExtension() {\n    const start = this._lexer.token;\n    this.expectKeyword('extend');\n    this.expectKeyword('scalar');\n    const name = this.parseName();\n    const directives = this.parseConstDirectives();\n\n    if (directives.length === 0) {\n      throw this.unexpected();\n    }\n\n    return this.node(start, {\n      kind: Kind.SCALAR_TYPE_EXTENSION,\n      name,\n      directives,\n    });\n  }\n  /**\n   * ObjectTypeExtension :\n   *  - extend type Name ImplementsInterfaces? Directives[Const]? FieldsDefinition\n   *  - extend type Name ImplementsInterfaces? Directives[Const]\n   *  - extend type Name ImplementsInterfaces\n   */\n\n  parseObjectTypeExtension() {\n    const start = this._lexer.token;\n    this.expectKeyword('extend');\n    this.expectKeyword('type');\n    const name = this.parseName();\n    const interfaces = this.parseImplementsInterfaces();\n    const directives = this.parseConstDirectives();\n    const fields = this.parseFieldsDefinition();\n\n    if (\n      interfaces.length === 0 &&\n      directives.length === 0 &&\n      fields.length === 0\n    ) {\n      throw this.unexpected();\n    }\n\n    return this.node(start, {\n      kind: Kind.OBJECT_TYPE_EXTENSION,\n      name,\n      interfaces,\n      directives,\n      fields,\n    });\n  }\n  /**\n   * InterfaceTypeExtension :\n   *  - extend interface Name ImplementsInterfaces? Directives[Const]? FieldsDefinition\n   *  - extend interface Name ImplementsInterfaces? Directives[Const]\n   *  - extend interface Name ImplementsInterfaces\n   */\n\n  parseInterfaceTypeExtension() {\n    const start = this._lexer.token;\n    this.expectKeyword('extend');\n    this.expectKeyword('interface');\n    const name = this.parseName();\n    const interfaces = this.parseImplementsInterfaces();\n    const directives = this.parseConstDirectives();\n    const fields = this.parseFieldsDefinition();\n\n    if (\n      interfaces.length === 0 &&\n      directives.length === 0 &&\n      fields.length === 0\n    ) {\n      throw this.unexpected();\n    }\n\n    return this.node(start, {\n      kind: Kind.INTERFACE_TYPE_EXTENSION,\n      name,\n      interfaces,\n      directives,\n      fields,\n    });\n  }\n  /**\n   * UnionTypeExtension :\n   *   - extend union Name Directives[Const]? UnionMemberTypes\n   *   - extend union Name Directives[Const]\n   */\n\n  parseUnionTypeExtension() {\n    const start = this._lexer.token;\n    this.expectKeyword('extend');\n    this.expectKeyword('union');\n    const name = this.parseName();\n    const directives = this.parseConstDirectives();\n    const types = this.parseUnionMemberTypes();\n\n    if (directives.length === 0 && types.length === 0) {\n      throw this.unexpected();\n    }\n\n    return this.node(start, {\n      kind: Kind.UNION_TYPE_EXTENSION,\n      name,\n      directives,\n      types,\n    });\n  }\n  /**\n   * EnumTypeExtension :\n   *   - extend enum Name Directives[Const]? EnumValuesDefinition\n   *   - extend enum Name Directives[Const]\n   */\n\n  parseEnumTypeExtension() {\n    const start = this._lexer.token;\n    this.expectKeyword('extend');\n    this.expectKeyword('enum');\n    const name = this.parseName();\n    const directives = this.parseConstDirectives();\n    const values = this.parseEnumValuesDefinition();\n\n    if (directives.length === 0 && values.length === 0) {\n      throw this.unexpected();\n    }\n\n    return this.node(start, {\n      kind: Kind.ENUM_TYPE_EXTENSION,\n      name,\n      directives,\n      values,\n    });\n  }\n  /**\n   * InputObjectTypeExtension :\n   *   - extend input Name Directives[Const]? InputFieldsDefinition\n   *   - extend input Name Directives[Const]\n   */\n\n  parseInputObjectTypeExtension() {\n    const start = this._lexer.token;\n    this.expectKeyword('extend');\n    this.expectKeyword('input');\n    const name = this.parseName();\n    const directives = this.parseConstDirectives();\n    const fields = this.parseInputFieldsDefinition();\n\n    if (directives.length === 0 && fields.length === 0) {\n      throw this.unexpected();\n    }\n\n    return this.node(start, {\n      kind: Kind.INPUT_OBJECT_TYPE_EXTENSION,\n      name,\n      directives,\n      fields,\n    });\n  }\n  /**\n   * ```\n   * DirectiveDefinition :\n   *   - Description? directive @ Name ArgumentsDefinition? `repeatable`? on DirectiveLocations\n   * ```\n   */\n\n  parseDirectiveDefinition() {\n    const start = this._lexer.token;\n    const description = this.parseDescription();\n    this.expectKeyword('directive');\n    this.expectToken(TokenKind.AT);\n    const name = this.parseName();\n    const args = this.parseArgumentDefs();\n    const repeatable = this.expectOptionalKeyword('repeatable');\n    this.expectKeyword('on');\n    const locations = this.parseDirectiveLocations();\n    return this.node(start, {\n      kind: Kind.DIRECTIVE_DEFINITION,\n      description,\n      name,\n      arguments: args,\n      repeatable,\n      locations,\n    });\n  }\n  /**\n   * DirectiveLocations :\n   *   - `|`? DirectiveLocation\n   *   - DirectiveLocations | DirectiveLocation\n   */\n\n  parseDirectiveLocations() {\n    return this.delimitedMany(TokenKind.PIPE, this.parseDirectiveLocation);\n  }\n  /*\n   * DirectiveLocation :\n   *   - ExecutableDirectiveLocation\n   *   - TypeSystemDirectiveLocation\n   *\n   * ExecutableDirectiveLocation : one of\n   *   `QUERY`\n   *   `MUTATION`\n   *   `SUBSCRIPTION`\n   *   `FIELD`\n   *   `FRAGMENT_DEFINITION`\n   *   `FRAGMENT_SPREAD`\n   *   `INLINE_FRAGMENT`\n   *\n   * TypeSystemDirectiveLocation : one of\n   *   `SCHEMA`\n   *   `SCALAR`\n   *   `OBJECT`\n   *   `FIELD_DEFINITION`\n   *   `ARGUMENT_DEFINITION`\n   *   `INTERFACE`\n   *   `UNION`\n   *   `ENUM`\n   *   `ENUM_VALUE`\n   *   `INPUT_OBJECT`\n   *   `INPUT_FIELD_DEFINITION`\n   */\n\n  parseDirectiveLocation() {\n    const start = this._lexer.token;\n    const name = this.parseName();\n\n    if (Object.prototype.hasOwnProperty.call(DirectiveLocation, name.value)) {\n      return name;\n    }\n\n    throw this.unexpected(start);\n  } // Core parsing utility functions\n\n  /**\n   * Returns a node that, if configured to do so, sets a \"loc\" field as a\n   * location object, used to identify the place in the source that created a\n   * given parsed object.\n   */\n\n  node(startToken, node) {\n    if (this._options.noLocation !== true) {\n      node.loc = new Location(\n        startToken,\n        this._lexer.lastToken,\n        this._lexer.source,\n      );\n    }\n\n    return node;\n  }\n  /**\n   * Determines if the next token is of a given kind\n   */\n\n  peek(kind) {\n    return this._lexer.token.kind === kind;\n  }\n  /**\n   * If the next token is of the given kind, return that token after advancing the lexer.\n   * Otherwise, do not change the parser state and throw an error.\n   */\n\n  expectToken(kind) {\n    const token = this._lexer.token;\n\n    if (token.kind === kind) {\n      this.advanceLexer();\n      return token;\n    }\n\n    throw syntaxError(\n      this._lexer.source,\n      token.start,\n      `Expected ${getTokenKindDesc(kind)}, found ${getTokenDesc(token)}.`,\n    );\n  }\n  /**\n   * If the next token is of the given kind, return \"true\" after advancing the lexer.\n   * Otherwise, do not change the parser state and return \"false\".\n   */\n\n  expectOptionalToken(kind) {\n    const token = this._lexer.token;\n\n    if (token.kind === kind) {\n      this.advanceLexer();\n      return true;\n    }\n\n    return false;\n  }\n  /**\n   * If the next token is a given keyword, advance the lexer.\n   * Otherwise, do not change the parser state and throw an error.\n   */\n\n  expectKeyword(value) {\n    const token = this._lexer.token;\n\n    if (token.kind === TokenKind.NAME && token.value === value) {\n      this.advanceLexer();\n    } else {\n      throw syntaxError(\n        this._lexer.source,\n        token.start,\n        `Expected \"${value}\", found ${getTokenDesc(token)}.`,\n      );\n    }\n  }\n  /**\n   * If the next token is a given keyword, return \"true\" after advancing the lexer.\n   * Otherwise, do not change the parser state and return \"false\".\n   */\n\n  expectOptionalKeyword(value) {\n    const token = this._lexer.token;\n\n    if (token.kind === TokenKind.NAME && token.value === value) {\n      this.advanceLexer();\n      return true;\n    }\n\n    return false;\n  }\n  /**\n   * Helper function for creating an error when an unexpected lexed token is encountered.\n   */\n\n  unexpected(atToken) {\n    const token =\n      atToken !== null && atToken !== void 0 ? atToken : this._lexer.token;\n    return syntaxError(\n      this._lexer.source,\n      token.start,\n      `Unexpected ${getTokenDesc(token)}.`,\n    );\n  }\n  /**\n   * Returns a possibly empty list of parse nodes, determined by the parseFn.\n   * This list begins with a lex token of openKind and ends with a lex token of closeKind.\n   * Advances the parser to the next lex token after the closing token.\n   */\n\n  any(openKind, parseFn, closeKind) {\n    this.expectToken(openKind);\n    const nodes = [];\n\n    while (!this.expectOptionalToken(closeKind)) {\n      nodes.push(parseFn.call(this));\n    }\n\n    return nodes;\n  }\n  /**\n   * Returns a list of parse nodes, determined by the parseFn.\n   * It can be empty only if open token is missing otherwise it will always return non-empty list\n   * that begins with a lex token of openKind and ends with a lex token of closeKind.\n   * Advances the parser to the next lex token after the closing token.\n   */\n\n  optionalMany(openKind, parseFn, closeKind) {\n    if (this.expectOptionalToken(openKind)) {\n      const nodes = [];\n\n      do {\n        nodes.push(parseFn.call(this));\n      } while (!this.expectOptionalToken(closeKind));\n\n      return nodes;\n    }\n\n    return [];\n  }\n  /**\n   * Returns a non-empty list of parse nodes, determined by the parseFn.\n   * This list begins with a lex token of openKind and ends with a lex token of closeKind.\n   * Advances the parser to the next lex token after the closing token.\n   */\n\n  many(openKind, parseFn, closeKind) {\n    this.expectToken(openKind);\n    const nodes = [];\n\n    do {\n      nodes.push(parseFn.call(this));\n    } while (!this.expectOptionalToken(closeKind));\n\n    return nodes;\n  }\n  /**\n   * Returns a non-empty list of parse nodes, determined by the parseFn.\n   * This list may begin with a lex token of delimiterKind followed by items separated by lex tokens of tokenKind.\n   * Advances the parser to the next lex token after last item in the list.\n   */\n\n  delimitedMany(delimiterKind, parseFn) {\n    this.expectOptionalToken(delimiterKind);\n    const nodes = [];\n\n    do {\n      nodes.push(parseFn.call(this));\n    } while (this.expectOptionalToken(delimiterKind));\n\n    return nodes;\n  }\n\n  advanceLexer() {\n    const { maxTokens } = this._options;\n\n    const token = this._lexer.advance();\n\n    if (maxTokens !== undefined && token.kind !== TokenKind.EOF) {\n      ++this._tokenCounter;\n\n      if (this._tokenCounter > maxTokens) {\n        throw syntaxError(\n          this._lexer.source,\n          token.start,\n          `Document contains more that ${maxTokens} tokens. Parsing aborted.`,\n        );\n      }\n    }\n  }\n}\n/**\n * A helper function to describe a token as a string for debugging.\n */\n\nfunction getTokenDesc(token) {\n  const value = token.value;\n  return getTokenKindDesc(token.kind) + (value != null ? ` \"${value}\"` : '');\n}\n/**\n * A helper function to describe a token kind as a string for debugging.\n */\n\nfunction getTokenKindDesc(kind) {\n  return isPunctuatorTokenKind(kind) ? `\"${kind}\"` : kind;\n}\n","/**\n * Prints a string as a GraphQL StringValue literal. Replaces control characters\n * and excluded characters (\" U+0022 and \\\\ U+005C) with escape sequences.\n */\nexport function printString(str) {\n  return `\"${str.replace(escapedRegExp, escapedReplacer)}\"`;\n} // eslint-disable-next-line no-control-regex\n\nconst escapedRegExp = /[\\x00-\\x1f\\x22\\x5c\\x7f-\\x9f]/g;\n\nfunction escapedReplacer(str) {\n  return escapeSequences[str.charCodeAt(0)];\n} // prettier-ignore\n\nconst escapeSequences = [\n  '\\\\u0000',\n  '\\\\u0001',\n  '\\\\u0002',\n  '\\\\u0003',\n  '\\\\u0004',\n  '\\\\u0005',\n  '\\\\u0006',\n  '\\\\u0007',\n  '\\\\b',\n  '\\\\t',\n  '\\\\n',\n  '\\\\u000B',\n  '\\\\f',\n  '\\\\r',\n  '\\\\u000E',\n  '\\\\u000F',\n  '\\\\u0010',\n  '\\\\u0011',\n  '\\\\u0012',\n  '\\\\u0013',\n  '\\\\u0014',\n  '\\\\u0015',\n  '\\\\u0016',\n  '\\\\u0017',\n  '\\\\u0018',\n  '\\\\u0019',\n  '\\\\u001A',\n  '\\\\u001B',\n  '\\\\u001C',\n  '\\\\u001D',\n  '\\\\u001E',\n  '\\\\u001F',\n  '',\n  '',\n  '\\\\\"',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '', // 2F\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '', // 3F\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '', // 4F\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '\\\\\\\\',\n  '',\n  '',\n  '', // 5F\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '', // 6F\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '\\\\u007F',\n  '\\\\u0080',\n  '\\\\u0081',\n  '\\\\u0082',\n  '\\\\u0083',\n  '\\\\u0084',\n  '\\\\u0085',\n  '\\\\u0086',\n  '\\\\u0087',\n  '\\\\u0088',\n  '\\\\u0089',\n  '\\\\u008A',\n  '\\\\u008B',\n  '\\\\u008C',\n  '\\\\u008D',\n  '\\\\u008E',\n  '\\\\u008F',\n  '\\\\u0090',\n  '\\\\u0091',\n  '\\\\u0092',\n  '\\\\u0093',\n  '\\\\u0094',\n  '\\\\u0095',\n  '\\\\u0096',\n  '\\\\u0097',\n  '\\\\u0098',\n  '\\\\u0099',\n  '\\\\u009A',\n  '\\\\u009B',\n  '\\\\u009C',\n  '\\\\u009D',\n  '\\\\u009E',\n  '\\\\u009F',\n];\n","import { devAssert } from '../jsutils/devAssert.mjs';\nimport { inspect } from '../jsutils/inspect.mjs';\nimport { isNode, QueryDocumentKeys } from './ast.mjs';\nimport { Kind } from './kinds.mjs';\n/**\n * A visitor is provided to visit, it contains the collection of\n * relevant functions to be called during the visitor's traversal.\n */\n\nexport const BREAK = Object.freeze({});\n/**\n * visit() will walk through an AST using a depth-first traversal, calling\n * the visitor's enter function at each node in the traversal, and calling the\n * leave function after visiting that node and all of its child nodes.\n *\n * By returning different values from the enter and leave functions, the\n * behavior of the visitor can be altered, including skipping over a sub-tree of\n * the AST (by returning false), editing the AST by returning a value or null\n * to remove the value, or to stop the whole traversal by returning BREAK.\n *\n * When using visit() to edit an AST, the original AST will not be modified, and\n * a new version of the AST with the changes applied will be returned from the\n * visit function.\n *\n * ```ts\n * const editedAST = visit(ast, {\n *   enter(node, key, parent, path, ancestors) {\n *     // @return\n *     //   undefined: no action\n *     //   false: skip visiting this node\n *     //   visitor.BREAK: stop visiting altogether\n *     //   null: delete this node\n *     //   any value: replace this node with the returned value\n *   },\n *   leave(node, key, parent, path, ancestors) {\n *     // @return\n *     //   undefined: no action\n *     //   false: no action\n *     //   visitor.BREAK: stop visiting altogether\n *     //   null: delete this node\n *     //   any value: replace this node with the returned value\n *   }\n * });\n * ```\n *\n * Alternatively to providing enter() and leave() functions, a visitor can\n * instead provide functions named the same as the kinds of AST nodes, or\n * enter/leave visitors at a named key, leading to three permutations of the\n * visitor API:\n *\n * 1) Named visitors triggered when entering a node of a specific kind.\n *\n * ```ts\n * visit(ast, {\n *   Kind(node) {\n *     // enter the \"Kind\" node\n *   }\n * })\n * ```\n *\n * 2) Named visitors that trigger upon entering and leaving a node of a specific kind.\n *\n * ```ts\n * visit(ast, {\n *   Kind: {\n *     enter(node) {\n *       // enter the \"Kind\" node\n *     }\n *     leave(node) {\n *       // leave the \"Kind\" node\n *     }\n *   }\n * })\n * ```\n *\n * 3) Generic visitors that trigger upon entering and leaving any node.\n *\n * ```ts\n * visit(ast, {\n *   enter(node) {\n *     // enter any node\n *   },\n *   leave(node) {\n *     // leave any node\n *   }\n * })\n * ```\n */\n\nexport function visit(root, visitor, visitorKeys = QueryDocumentKeys) {\n  const enterLeaveMap = new Map();\n\n  for (const kind of Object.values(Kind)) {\n    enterLeaveMap.set(kind, getEnterLeaveForKind(visitor, kind));\n  }\n  /* eslint-disable no-undef-init */\n\n  let stack = undefined;\n  let inArray = Array.isArray(root);\n  let keys = [root];\n  let index = -1;\n  let edits = [];\n  let node = root;\n  let key = undefined;\n  let parent = undefined;\n  const path = [];\n  const ancestors = [];\n  /* eslint-enable no-undef-init */\n\n  do {\n    index++;\n    const isLeaving = index === keys.length;\n    const isEdited = isLeaving && edits.length !== 0;\n\n    if (isLeaving) {\n      key = ancestors.length === 0 ? undefined : path[path.length - 1];\n      node = parent;\n      parent = ancestors.pop();\n\n      if (isEdited) {\n        if (inArray) {\n          node = node.slice();\n          let editOffset = 0;\n\n          for (const [editKey, editValue] of edits) {\n            const arrayKey = editKey - editOffset;\n\n            if (editValue === null) {\n              node.splice(arrayKey, 1);\n              editOffset++;\n            } else {\n              node[arrayKey] = editValue;\n            }\n          }\n        } else {\n          node = Object.defineProperties(\n            {},\n            Object.getOwnPropertyDescriptors(node),\n          );\n\n          for (const [editKey, editValue] of edits) {\n            node[editKey] = editValue;\n          }\n        }\n      }\n\n      index = stack.index;\n      keys = stack.keys;\n      edits = stack.edits;\n      inArray = stack.inArray;\n      stack = stack.prev;\n    } else if (parent) {\n      key = inArray ? index : keys[index];\n      node = parent[key];\n\n      if (node === null || node === undefined) {\n        continue;\n      }\n\n      path.push(key);\n    }\n\n    let result;\n\n    if (!Array.isArray(node)) {\n      var _enterLeaveMap$get, _enterLeaveMap$get2;\n\n      isNode(node) || devAssert(false, `Invalid AST Node: ${inspect(node)}.`);\n      const visitFn = isLeaving\n        ? (_enterLeaveMap$get = enterLeaveMap.get(node.kind)) === null ||\n          _enterLeaveMap$get === void 0\n          ? void 0\n          : _enterLeaveMap$get.leave\n        : (_enterLeaveMap$get2 = enterLeaveMap.get(node.kind)) === null ||\n          _enterLeaveMap$get2 === void 0\n        ? void 0\n        : _enterLeaveMap$get2.enter;\n      result =\n        visitFn === null || visitFn === void 0\n          ? void 0\n          : visitFn.call(visitor, node, key, parent, path, ancestors);\n\n      if (result === BREAK) {\n        break;\n      }\n\n      if (result === false) {\n        if (!isLeaving) {\n          path.pop();\n          continue;\n        }\n      } else if (result !== undefined) {\n        edits.push([key, result]);\n\n        if (!isLeaving) {\n          if (isNode(result)) {\n            node = result;\n          } else {\n            path.pop();\n            continue;\n          }\n        }\n      }\n    }\n\n    if (result === undefined && isEdited) {\n      edits.push([key, node]);\n    }\n\n    if (isLeaving) {\n      path.pop();\n    } else {\n      var _node$kind;\n\n      stack = {\n        inArray,\n        index,\n        keys,\n        edits,\n        prev: stack,\n      };\n      inArray = Array.isArray(node);\n      keys = inArray\n        ? node\n        : (_node$kind = visitorKeys[node.kind]) !== null &&\n          _node$kind !== void 0\n        ? _node$kind\n        : [];\n      index = -1;\n      edits = [];\n\n      if (parent) {\n        ancestors.push(parent);\n      }\n\n      parent = node;\n    }\n  } while (stack !== undefined);\n\n  if (edits.length !== 0) {\n    // New root\n    return edits[edits.length - 1][1];\n  }\n\n  return root;\n}\n/**\n * Creates a new visitor instance which delegates to many visitors to run in\n * parallel. Each visitor will be visited for each node before moving on.\n *\n * If a prior visitor edits a node, no following visitors will see that node.\n */\n\nexport function visitInParallel(visitors) {\n  const skipping = new Array(visitors.length).fill(null);\n  const mergedVisitor = Object.create(null);\n\n  for (const kind of Object.values(Kind)) {\n    let hasVisitor = false;\n    const enterList = new Array(visitors.length).fill(undefined);\n    const leaveList = new Array(visitors.length).fill(undefined);\n\n    for (let i = 0; i < visitors.length; ++i) {\n      const { enter, leave } = getEnterLeaveForKind(visitors[i], kind);\n      hasVisitor || (hasVisitor = enter != null || leave != null);\n      enterList[i] = enter;\n      leaveList[i] = leave;\n    }\n\n    if (!hasVisitor) {\n      continue;\n    }\n\n    const mergedEnterLeave = {\n      enter(...args) {\n        const node = args[0];\n\n        for (let i = 0; i < visitors.length; i++) {\n          if (skipping[i] === null) {\n            var _enterList$i;\n\n            const result =\n              (_enterList$i = enterList[i]) === null || _enterList$i === void 0\n                ? void 0\n                : _enterList$i.apply(visitors[i], args);\n\n            if (result === false) {\n              skipping[i] = node;\n            } else if (result === BREAK) {\n              skipping[i] = BREAK;\n            } else if (result !== undefined) {\n              return result;\n            }\n          }\n        }\n      },\n\n      leave(...args) {\n        const node = args[0];\n\n        for (let i = 0; i < visitors.length; i++) {\n          if (skipping[i] === null) {\n            var _leaveList$i;\n\n            const result =\n              (_leaveList$i = leaveList[i]) === null || _leaveList$i === void 0\n                ? void 0\n                : _leaveList$i.apply(visitors[i], args);\n\n            if (result === BREAK) {\n              skipping[i] = BREAK;\n            } else if (result !== undefined && result !== false) {\n              return result;\n            }\n          } else if (skipping[i] === node) {\n            skipping[i] = null;\n          }\n        }\n      },\n    };\n    mergedVisitor[kind] = mergedEnterLeave;\n  }\n\n  return mergedVisitor;\n}\n/**\n * Given a visitor instance and a node kind, return EnterLeaveVisitor for that kind.\n */\n\nexport function getEnterLeaveForKind(visitor, kind) {\n  const kindVisitor = visitor[kind];\n\n  if (typeof kindVisitor === 'object') {\n    // { Kind: { enter() {}, leave() {} } }\n    return kindVisitor;\n  } else if (typeof kindVisitor === 'function') {\n    // { Kind() {} }\n    return {\n      enter: kindVisitor,\n      leave: undefined,\n    };\n  } // { enter() {}, leave() {} }\n\n  return {\n    enter: visitor.enter,\n    leave: visitor.leave,\n  };\n}\n/**\n * Given a visitor instance, if it is leaving or not, and a node kind, return\n * the function the visitor runtime should call.\n *\n * @deprecated Please use `getEnterLeaveForKind` instead. Will be removed in v17\n */\n\n/* c8 ignore next 8 */\n\nexport function getVisitFn(visitor, kind, isLeaving) {\n  const { enter, leave } = getEnterLeaveForKind(visitor, kind);\n  return isLeaving ? leave : enter;\n}\n","import { printBlockString } from './blockString.mjs';\nimport { printString } from './printString.mjs';\nimport { visit } from './visitor.mjs';\n/**\n * Converts an AST into a string, using one set of reasonable\n * formatting rules.\n */\n\nexport function print(ast) {\n  return visit(ast, printDocASTReducer);\n}\nconst MAX_LINE_LENGTH = 80;\nconst printDocASTReducer = {\n  Name: {\n    leave: (node) => node.value,\n  },\n  Variable: {\n    leave: (node) => '$' + node.name,\n  },\n  // Document\n  Document: {\n    leave: (node) => join(node.definitions, '\\n\\n'),\n  },\n  OperationDefinition: {\n    leave(node) {\n      const varDefs = wrap('(', join(node.variableDefinitions, ', '), ')');\n      const prefix = join(\n        [\n          node.operation,\n          join([node.name, varDefs]),\n          join(node.directives, ' '),\n        ],\n        ' ',\n      ); // Anonymous queries with no directives or variable definitions can use\n      // the query short form.\n\n      return (prefix === 'query' ? '' : prefix + ' ') + node.selectionSet;\n    },\n  },\n  VariableDefinition: {\n    leave: ({ variable, type, defaultValue, directives }) =>\n      variable +\n      ': ' +\n      type +\n      wrap(' = ', defaultValue) +\n      wrap(' ', join(directives, ' ')),\n  },\n  SelectionSet: {\n    leave: ({ selections }) => block(selections),\n  },\n  Field: {\n    leave({ alias, name, arguments: args, directives, selectionSet }) {\n      const prefix = wrap('', alias, ': ') + name;\n      let argsLine = prefix + wrap('(', join(args, ', '), ')');\n\n      if (argsLine.length > MAX_LINE_LENGTH) {\n        argsLine = prefix + wrap('(\\n', indent(join(args, '\\n')), '\\n)');\n      }\n\n      return join([argsLine, join(directives, ' '), selectionSet], ' ');\n    },\n  },\n  Argument: {\n    leave: ({ name, value }) => name + ': ' + value,\n  },\n  // Fragments\n  FragmentSpread: {\n    leave: ({ name, directives }) =>\n      '...' + name + wrap(' ', join(directives, ' ')),\n  },\n  InlineFragment: {\n    leave: ({ typeCondition, directives, selectionSet }) =>\n      join(\n        [\n          '...',\n          wrap('on ', typeCondition),\n          join(directives, ' '),\n          selectionSet,\n        ],\n        ' ',\n      ),\n  },\n  FragmentDefinition: {\n    leave: (\n      { name, typeCondition, variableDefinitions, directives, selectionSet }, // Note: fragment variable definitions are experimental and may be changed\n    ) =>\n      // or removed in the future.\n      `fragment ${name}${wrap('(', join(variableDefinitions, ', '), ')')} ` +\n      `on ${typeCondition} ${wrap('', join(directives, ' '), ' ')}` +\n      selectionSet,\n  },\n  // Value\n  IntValue: {\n    leave: ({ value }) => value,\n  },\n  FloatValue: {\n    leave: ({ value }) => value,\n  },\n  StringValue: {\n    leave: ({ value, block: isBlockString }) =>\n      isBlockString ? printBlockString(value) : printString(value),\n  },\n  BooleanValue: {\n    leave: ({ value }) => (value ? 'true' : 'false'),\n  },\n  NullValue: {\n    leave: () => 'null',\n  },\n  EnumValue: {\n    leave: ({ value }) => value,\n  },\n  ListValue: {\n    leave: ({ values }) => '[' + join(values, ', ') + ']',\n  },\n  ObjectValue: {\n    leave: ({ fields }) => '{' + join(fields, ', ') + '}',\n  },\n  ObjectField: {\n    leave: ({ name, value }) => name + ': ' + value,\n  },\n  // Directive\n  Directive: {\n    leave: ({ name, arguments: args }) =>\n      '@' + name + wrap('(', join(args, ', '), ')'),\n  },\n  // Type\n  NamedType: {\n    leave: ({ name }) => name,\n  },\n  ListType: {\n    leave: ({ type }) => '[' + type + ']',\n  },\n  NonNullType: {\n    leave: ({ type }) => type + '!',\n  },\n  // Type System Definitions\n  SchemaDefinition: {\n    leave: ({ description, directives, operationTypes }) =>\n      wrap('', description, '\\n') +\n      join(['schema', join(directives, ' '), block(operationTypes)], ' '),\n  },\n  OperationTypeDefinition: {\n    leave: ({ operation, type }) => operation + ': ' + type,\n  },\n  ScalarTypeDefinition: {\n    leave: ({ description, name, directives }) =>\n      wrap('', description, '\\n') +\n      join(['scalar', name, join(directives, ' ')], ' '),\n  },\n  ObjectTypeDefinition: {\n    leave: ({ description, name, interfaces, directives, fields }) =>\n      wrap('', description, '\\n') +\n      join(\n        [\n          'type',\n          name,\n          wrap('implements ', join(interfaces, ' & ')),\n          join(directives, ' '),\n          block(fields),\n        ],\n        ' ',\n      ),\n  },\n  FieldDefinition: {\n    leave: ({ description, name, arguments: args, type, directives }) =>\n      wrap('', description, '\\n') +\n      name +\n      (hasMultilineItems(args)\n        ? wrap('(\\n', indent(join(args, '\\n')), '\\n)')\n        : wrap('(', join(args, ', '), ')')) +\n      ': ' +\n      type +\n      wrap(' ', join(directives, ' ')),\n  },\n  InputValueDefinition: {\n    leave: ({ description, name, type, defaultValue, directives }) =>\n      wrap('', description, '\\n') +\n      join(\n        [name + ': ' + type, wrap('= ', defaultValue), join(directives, ' ')],\n        ' ',\n      ),\n  },\n  InterfaceTypeDefinition: {\n    leave: ({ description, name, interfaces, directives, fields }) =>\n      wrap('', description, '\\n') +\n      join(\n        [\n          'interface',\n          name,\n          wrap('implements ', join(interfaces, ' & ')),\n          join(directives, ' '),\n          block(fields),\n        ],\n        ' ',\n      ),\n  },\n  UnionTypeDefinition: {\n    leave: ({ description, name, directives, types }) =>\n      wrap('', description, '\\n') +\n      join(\n        ['union', name, join(directives, ' '), wrap('= ', join(types, ' | '))],\n        ' ',\n      ),\n  },\n  EnumTypeDefinition: {\n    leave: ({ description, name, directives, values }) =>\n      wrap('', description, '\\n') +\n      join(['enum', name, join(directives, ' '), block(values)], ' '),\n  },\n  EnumValueDefinition: {\n    leave: ({ description, name, directives }) =>\n      wrap('', description, '\\n') + join([name, join(directives, ' ')], ' '),\n  },\n  InputObjectTypeDefinition: {\n    leave: ({ description, name, directives, fields }) =>\n      wrap('', description, '\\n') +\n      join(['input', name, join(directives, ' '), block(fields)], ' '),\n  },\n  DirectiveDefinition: {\n    leave: ({ description, name, arguments: args, repeatable, locations }) =>\n      wrap('', description, '\\n') +\n      'directive @' +\n      name +\n      (hasMultilineItems(args)\n        ? wrap('(\\n', indent(join(args, '\\n')), '\\n)')\n        : wrap('(', join(args, ', '), ')')) +\n      (repeatable ? ' repeatable' : '') +\n      ' on ' +\n      join(locations, ' | '),\n  },\n  SchemaExtension: {\n    leave: ({ directives, operationTypes }) =>\n      join(\n        ['extend schema', join(directives, ' '), block(operationTypes)],\n        ' ',\n      ),\n  },\n  ScalarTypeExtension: {\n    leave: ({ name, directives }) =>\n      join(['extend scalar', name, join(directives, ' ')], ' '),\n  },\n  ObjectTypeExtension: {\n    leave: ({ name, interfaces, directives, fields }) =>\n      join(\n        [\n          'extend type',\n          name,\n          wrap('implements ', join(interfaces, ' & ')),\n          join(directives, ' '),\n          block(fields),\n        ],\n        ' ',\n      ),\n  },\n  InterfaceTypeExtension: {\n    leave: ({ name, interfaces, directives, fields }) =>\n      join(\n        [\n          'extend interface',\n          name,\n          wrap('implements ', join(interfaces, ' & ')),\n          join(directives, ' '),\n          block(fields),\n        ],\n        ' ',\n      ),\n  },\n  UnionTypeExtension: {\n    leave: ({ name, directives, types }) =>\n      join(\n        [\n          'extend union',\n          name,\n          join(directives, ' '),\n          wrap('= ', join(types, ' | ')),\n        ],\n        ' ',\n      ),\n  },\n  EnumTypeExtension: {\n    leave: ({ name, directives, values }) =>\n      join(['extend enum', name, join(directives, ' '), block(values)], ' '),\n  },\n  InputObjectTypeExtension: {\n    leave: ({ name, directives, fields }) =>\n      join(['extend input', name, join(directives, ' '), block(fields)], ' '),\n  },\n};\n/**\n * Given maybeArray, print an empty string if it is null or empty, otherwise\n * print all items together separated by separator if provided\n */\n\nfunction join(maybeArray, separator = '') {\n  var _maybeArray$filter$jo;\n\n  return (_maybeArray$filter$jo =\n    maybeArray === null || maybeArray === void 0\n      ? void 0\n      : maybeArray.filter((x) => x).join(separator)) !== null &&\n    _maybeArray$filter$jo !== void 0\n    ? _maybeArray$filter$jo\n    : '';\n}\n/**\n * Given array, print each item on its own line, wrapped in an indented `{ }` block.\n */\n\nfunction block(array) {\n  return wrap('{\\n', indent(join(array, '\\n')), '\\n}');\n}\n/**\n * If maybeString is not null or empty, then wrap with start and end, otherwise print an empty string.\n */\n\nfunction wrap(start, maybeString, end = '') {\n  return maybeString != null && maybeString !== ''\n    ? start + maybeString + end\n    : '';\n}\n\nfunction indent(str) {\n  return wrap('  ', str.replace(/\\n/g, '\\n  '));\n}\n\nfunction hasMultilineItems(maybeArray) {\n  var _maybeArray$some;\n\n  // FIXME: https://github.com/graphql/graphql-js/issues/2203\n\n  /* c8 ignore next */\n  return (_maybeArray$some =\n    maybeArray === null || maybeArray === void 0\n      ? void 0\n      : maybeArray.some((str) => str.includes('\\n'))) !== null &&\n    _maybeArray$some !== void 0\n    ? _maybeArray$some\n    : false;\n}\n","import { parse, print } from 'graphql';\n/**\n * helpers\n */\nconst extractOperationName = (document) => {\n    let operationName = undefined;\n    const operationDefinitions = document.definitions.filter((definition) => definition.kind === `OperationDefinition`);\n    if (operationDefinitions.length === 1) {\n        operationName = operationDefinitions[0]?.name?.value;\n    }\n    return operationName;\n};\nexport const resolveRequestDocument = (document) => {\n    if (typeof document === `string`) {\n        let operationName = undefined;\n        try {\n            const parsedDocument = parse(document);\n            operationName = extractOperationName(parsedDocument);\n        }\n        catch (err) {\n            // Failed parsing the document, the operationName will be undefined\n        }\n        return { query: document, operationName };\n    }\n    const operationName = extractOperationName(document);\n    return { query: print(document), operationName };\n};\n//# sourceMappingURL=resolveRequestDocument.js.map","export class ClientError extends Error {\n    constructor(response, request) {\n        const message = `${ClientError.extractMessage(response)}: ${JSON.stringify({\n            response,\n            request,\n        })}`;\n        super(message);\n        Object.setPrototypeOf(this, ClientError.prototype);\n        this.response = response;\n        this.request = request;\n        // this is needed as Safari doesn't support .captureStackTrace\n        if (typeof Error.captureStackTrace === `function`) {\n            Error.captureStackTrace(this, ClientError);\n        }\n    }\n    static extractMessage(response) {\n        return response.errors?.[0]?.message ?? `GraphQL Error (Code: ${response.status})`;\n    }\n}\n//# sourceMappingURL=types.js.map","var global = typeof self !== 'undefined' ? self : this;\nvar __self__ = (function () {\nfunction F() {\nthis.fetch = false;\nthis.DOMException = global.DOMException\n}\nF.prototype = global;\nreturn new F();\n})();\n(function(self) {\n\nvar irrelevant = (function (exports) {\n\n  var support = {\n    searchParams: 'URLSearchParams' in self,\n    iterable: 'Symbol' in self && 'iterator' in Symbol,\n    blob:\n      'FileReader' in self &&\n      'Blob' in self &&\n      (function() {\n        try {\n          new Blob();\n          return true\n        } catch (e) {\n          return false\n        }\n      })(),\n    formData: 'FormData' in self,\n    arrayBuffer: 'ArrayBuffer' in self\n  };\n\n  function isDataView(obj) {\n    return obj && DataView.prototype.isPrototypeOf(obj)\n  }\n\n  if (support.arrayBuffer) {\n    var viewClasses = [\n      '[object Int8Array]',\n      '[object Uint8Array]',\n      '[object Uint8ClampedArray]',\n      '[object Int16Array]',\n      '[object Uint16Array]',\n      '[object Int32Array]',\n      '[object Uint32Array]',\n      '[object Float32Array]',\n      '[object Float64Array]'\n    ];\n\n    var isArrayBufferView =\n      ArrayBuffer.isView ||\n      function(obj) {\n        return obj && viewClasses.indexOf(Object.prototype.toString.call(obj)) > -1\n      };\n  }\n\n  function normalizeName(name) {\n    if (typeof name !== 'string') {\n      name = String(name);\n    }\n    if (/[^a-z0-9\\-#$%&'*+.^_`|~]/i.test(name)) {\n      throw new TypeError('Invalid character in header field name')\n    }\n    return name.toLowerCase()\n  }\n\n  function normalizeValue(value) {\n    if (typeof value !== 'string') {\n      value = String(value);\n    }\n    return value\n  }\n\n  // Build a destructive iterator for the value list\n  function iteratorFor(items) {\n    var iterator = {\n      next: function() {\n        var value = items.shift();\n        return {done: value === undefined, value: value}\n      }\n    };\n\n    if (support.iterable) {\n      iterator[Symbol.iterator] = function() {\n        return iterator\n      };\n    }\n\n    return iterator\n  }\n\n  function Headers(headers) {\n    this.map = {};\n\n    if (headers instanceof Headers) {\n      headers.forEach(function(value, name) {\n        this.append(name, value);\n      }, this);\n    } else if (Array.isArray(headers)) {\n      headers.forEach(function(header) {\n        this.append(header[0], header[1]);\n      }, this);\n    } else if (headers) {\n      Object.getOwnPropertyNames(headers).forEach(function(name) {\n        this.append(name, headers[name]);\n      }, this);\n    }\n  }\n\n  Headers.prototype.append = function(name, value) {\n    name = normalizeName(name);\n    value = normalizeValue(value);\n    var oldValue = this.map[name];\n    this.map[name] = oldValue ? oldValue + ', ' + value : value;\n  };\n\n  Headers.prototype['delete'] = function(name) {\n    delete this.map[normalizeName(name)];\n  };\n\n  Headers.prototype.get = function(name) {\n    name = normalizeName(name);\n    return this.has(name) ? this.map[name] : null\n  };\n\n  Headers.prototype.has = function(name) {\n    return this.map.hasOwnProperty(normalizeName(name))\n  };\n\n  Headers.prototype.set = function(name, value) {\n    this.map[normalizeName(name)] = normalizeValue(value);\n  };\n\n  Headers.prototype.forEach = function(callback, thisArg) {\n    for (var name in this.map) {\n      if (this.map.hasOwnProperty(name)) {\n        callback.call(thisArg, this.map[name], name, this);\n      }\n    }\n  };\n\n  Headers.prototype.keys = function() {\n    var items = [];\n    this.forEach(function(value, name) {\n      items.push(name);\n    });\n    return iteratorFor(items)\n  };\n\n  Headers.prototype.values = function() {\n    var items = [];\n    this.forEach(function(value) {\n      items.push(value);\n    });\n    return iteratorFor(items)\n  };\n\n  Headers.prototype.entries = function() {\n    var items = [];\n    this.forEach(function(value, name) {\n      items.push([name, value]);\n    });\n    return iteratorFor(items)\n  };\n\n  if (support.iterable) {\n    Headers.prototype[Symbol.iterator] = Headers.prototype.entries;\n  }\n\n  function consumed(body) {\n    if (body.bodyUsed) {\n      return Promise.reject(new TypeError('Already read'))\n    }\n    body.bodyUsed = true;\n  }\n\n  function fileReaderReady(reader) {\n    return new Promise(function(resolve, reject) {\n      reader.onload = function() {\n        resolve(reader.result);\n      };\n      reader.onerror = function() {\n        reject(reader.error);\n      };\n    })\n  }\n\n  function readBlobAsArrayBuffer(blob) {\n    var reader = new FileReader();\n    var promise = fileReaderReady(reader);\n    reader.readAsArrayBuffer(blob);\n    return promise\n  }\n\n  function readBlobAsText(blob) {\n    var reader = new FileReader();\n    var promise = fileReaderReady(reader);\n    reader.readAsText(blob);\n    return promise\n  }\n\n  function readArrayBufferAsText(buf) {\n    var view = new Uint8Array(buf);\n    var chars = new Array(view.length);\n\n    for (var i = 0; i < view.length; i++) {\n      chars[i] = String.fromCharCode(view[i]);\n    }\n    return chars.join('')\n  }\n\n  function bufferClone(buf) {\n    if (buf.slice) {\n      return buf.slice(0)\n    } else {\n      var view = new Uint8Array(buf.byteLength);\n      view.set(new Uint8Array(buf));\n      return view.buffer\n    }\n  }\n\n  function Body() {\n    this.bodyUsed = false;\n\n    this._initBody = function(body) {\n      this._bodyInit = body;\n      if (!body) {\n        this._bodyText = '';\n      } else if (typeof body === 'string') {\n        this._bodyText = body;\n      } else if (support.blob && Blob.prototype.isPrototypeOf(body)) {\n        this._bodyBlob = body;\n      } else if (support.formData && FormData.prototype.isPrototypeOf(body)) {\n        this._bodyFormData = body;\n      } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n        this._bodyText = body.toString();\n      } else if (support.arrayBuffer && support.blob && isDataView(body)) {\n        this._bodyArrayBuffer = bufferClone(body.buffer);\n        // IE 10-11 can't handle a DataView body.\n        this._bodyInit = new Blob([this._bodyArrayBuffer]);\n      } else if (support.arrayBuffer && (ArrayBuffer.prototype.isPrototypeOf(body) || isArrayBufferView(body))) {\n        this._bodyArrayBuffer = bufferClone(body);\n      } else {\n        this._bodyText = body = Object.prototype.toString.call(body);\n      }\n\n      if (!this.headers.get('content-type')) {\n        if (typeof body === 'string') {\n          this.headers.set('content-type', 'text/plain;charset=UTF-8');\n        } else if (this._bodyBlob && this._bodyBlob.type) {\n          this.headers.set('content-type', this._bodyBlob.type);\n        } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n          this.headers.set('content-type', 'application/x-www-form-urlencoded;charset=UTF-8');\n        }\n      }\n    };\n\n    if (support.blob) {\n      this.blob = function() {\n        var rejected = consumed(this);\n        if (rejected) {\n          return rejected\n        }\n\n        if (this._bodyBlob) {\n          return Promise.resolve(this._bodyBlob)\n        } else if (this._bodyArrayBuffer) {\n          return Promise.resolve(new Blob([this._bodyArrayBuffer]))\n        } else if (this._bodyFormData) {\n          throw new Error('could not read FormData body as blob')\n        } else {\n          return Promise.resolve(new Blob([this._bodyText]))\n        }\n      };\n\n      this.arrayBuffer = function() {\n        if (this._bodyArrayBuffer) {\n          return consumed(this) || Promise.resolve(this._bodyArrayBuffer)\n        } else {\n          return this.blob().then(readBlobAsArrayBuffer)\n        }\n      };\n    }\n\n    this.text = function() {\n      var rejected = consumed(this);\n      if (rejected) {\n        return rejected\n      }\n\n      if (this._bodyBlob) {\n        return readBlobAsText(this._bodyBlob)\n      } else if (this._bodyArrayBuffer) {\n        return Promise.resolve(readArrayBufferAsText(this._bodyArrayBuffer))\n      } else if (this._bodyFormData) {\n        throw new Error('could not read FormData body as text')\n      } else {\n        return Promise.resolve(this._bodyText)\n      }\n    };\n\n    if (support.formData) {\n      this.formData = function() {\n        return this.text().then(decode)\n      };\n    }\n\n    this.json = function() {\n      return this.text().then(JSON.parse)\n    };\n\n    return this\n  }\n\n  // HTTP methods whose capitalization should be normalized\n  var methods = ['DELETE', 'GET', 'HEAD', 'OPTIONS', 'POST', 'PUT'];\n\n  function normalizeMethod(method) {\n    var upcased = method.toUpperCase();\n    return methods.indexOf(upcased) > -1 ? upcased : method\n  }\n\n  function Request(input, options) {\n    options = options || {};\n    var body = options.body;\n\n    if (input instanceof Request) {\n      if (input.bodyUsed) {\n        throw new TypeError('Already read')\n      }\n      this.url = input.url;\n      this.credentials = input.credentials;\n      if (!options.headers) {\n        this.headers = new Headers(input.headers);\n      }\n      this.method = input.method;\n      this.mode = input.mode;\n      this.signal = input.signal;\n      if (!body && input._bodyInit != null) {\n        body = input._bodyInit;\n        input.bodyUsed = true;\n      }\n    } else {\n      this.url = String(input);\n    }\n\n    this.credentials = options.credentials || this.credentials || 'same-origin';\n    if (options.headers || !this.headers) {\n      this.headers = new Headers(options.headers);\n    }\n    this.method = normalizeMethod(options.method || this.method || 'GET');\n    this.mode = options.mode || this.mode || null;\n    this.signal = options.signal || this.signal;\n    this.referrer = null;\n\n    if ((this.method === 'GET' || this.method === 'HEAD') && body) {\n      throw new TypeError('Body not allowed for GET or HEAD requests')\n    }\n    this._initBody(body);\n  }\n\n  Request.prototype.clone = function() {\n    return new Request(this, {body: this._bodyInit})\n  };\n\n  function decode(body) {\n    var form = new FormData();\n    body\n      .trim()\n      .split('&')\n      .forEach(function(bytes) {\n        if (bytes) {\n          var split = bytes.split('=');\n          var name = split.shift().replace(/\\+/g, ' ');\n          var value = split.join('=').replace(/\\+/g, ' ');\n          form.append(decodeURIComponent(name), decodeURIComponent(value));\n        }\n      });\n    return form\n  }\n\n  function parseHeaders(rawHeaders) {\n    var headers = new Headers();\n    // Replace instances of \\r\\n and \\n followed by at least one space or horizontal tab with a space\n    // https://tools.ietf.org/html/rfc7230#section-3.2\n    var preProcessedHeaders = rawHeaders.replace(/\\r?\\n[\\t ]+/g, ' ');\n    preProcessedHeaders.split(/\\r?\\n/).forEach(function(line) {\n      var parts = line.split(':');\n      var key = parts.shift().trim();\n      if (key) {\n        var value = parts.join(':').trim();\n        headers.append(key, value);\n      }\n    });\n    return headers\n  }\n\n  Body.call(Request.prototype);\n\n  function Response(bodyInit, options) {\n    if (!options) {\n      options = {};\n    }\n\n    this.type = 'default';\n    this.status = options.status === undefined ? 200 : options.status;\n    this.ok = this.status >= 200 && this.status < 300;\n    this.statusText = 'statusText' in options ? options.statusText : 'OK';\n    this.headers = new Headers(options.headers);\n    this.url = options.url || '';\n    this._initBody(bodyInit);\n  }\n\n  Body.call(Response.prototype);\n\n  Response.prototype.clone = function() {\n    return new Response(this._bodyInit, {\n      status: this.status,\n      statusText: this.statusText,\n      headers: new Headers(this.headers),\n      url: this.url\n    })\n  };\n\n  Response.error = function() {\n    var response = new Response(null, {status: 0, statusText: ''});\n    response.type = 'error';\n    return response\n  };\n\n  var redirectStatuses = [301, 302, 303, 307, 308];\n\n  Response.redirect = function(url, status) {\n    if (redirectStatuses.indexOf(status) === -1) {\n      throw new RangeError('Invalid status code')\n    }\n\n    return new Response(null, {status: status, headers: {location: url}})\n  };\n\n  exports.DOMException = self.DOMException;\n  try {\n    new exports.DOMException();\n  } catch (err) {\n    exports.DOMException = function(message, name) {\n      this.message = message;\n      this.name = name;\n      var error = Error(message);\n      this.stack = error.stack;\n    };\n    exports.DOMException.prototype = Object.create(Error.prototype);\n    exports.DOMException.prototype.constructor = exports.DOMException;\n  }\n\n  function fetch(input, init) {\n    return new Promise(function(resolve, reject) {\n      var request = new Request(input, init);\n\n      if (request.signal && request.signal.aborted) {\n        return reject(new exports.DOMException('Aborted', 'AbortError'))\n      }\n\n      var xhr = new XMLHttpRequest();\n\n      function abortXhr() {\n        xhr.abort();\n      }\n\n      xhr.onload = function() {\n        var options = {\n          status: xhr.status,\n          statusText: xhr.statusText,\n          headers: parseHeaders(xhr.getAllResponseHeaders() || '')\n        };\n        options.url = 'responseURL' in xhr ? xhr.responseURL : options.headers.get('X-Request-URL');\n        var body = 'response' in xhr ? xhr.response : xhr.responseText;\n        resolve(new Response(body, options));\n      };\n\n      xhr.onerror = function() {\n        reject(new TypeError('Network request failed'));\n      };\n\n      xhr.ontimeout = function() {\n        reject(new TypeError('Network request failed'));\n      };\n\n      xhr.onabort = function() {\n        reject(new exports.DOMException('Aborted', 'AbortError'));\n      };\n\n      xhr.open(request.method, request.url, true);\n\n      if (request.credentials === 'include') {\n        xhr.withCredentials = true;\n      } else if (request.credentials === 'omit') {\n        xhr.withCredentials = false;\n      }\n\n      if ('responseType' in xhr && support.blob) {\n        xhr.responseType = 'blob';\n      }\n\n      request.headers.forEach(function(value, name) {\n        xhr.setRequestHeader(name, value);\n      });\n\n      if (request.signal) {\n        request.signal.addEventListener('abort', abortXhr);\n\n        xhr.onreadystatechange = function() {\n          // DONE (success or failure)\n          if (xhr.readyState === 4) {\n            request.signal.removeEventListener('abort', abortXhr);\n          }\n        };\n      }\n\n      xhr.send(typeof request._bodyInit === 'undefined' ? null : request._bodyInit);\n    })\n  }\n\n  fetch.polyfill = true;\n\n  if (!self.fetch) {\n    self.fetch = fetch;\n    self.Headers = Headers;\n    self.Request = Request;\n    self.Response = Response;\n  }\n\n  exports.Headers = Headers;\n  exports.Request = Request;\n  exports.Response = Response;\n  exports.fetch = fetch;\n\n  Object.defineProperty(exports, '__esModule', { value: true });\n\n  return exports;\n\n})({});\n})(__self__);\n__self__.fetch.ponyfill = true;\n// Remove \"polyfill\" property added by whatwg-fetch\ndelete __self__.fetch.polyfill;\n// Choose between native implementation (global) or custom implementation (__self__)\n// var ctx = global.fetch ? global : __self__;\nvar ctx = __self__; // this line disable service worker support temporarily\nexports = ctx.fetch // To enable: import fetch from 'cross-fetch'\nexports.default = ctx.fetch // For TypeScript consumers without esModuleInterop.\nexports.fetch = ctx.fetch // To enable: import {fetch} from 'cross-fetch'\nexports.Headers = ctx.Headers\nexports.Request = ctx.Request\nexports.Response = ctx.Response\nmodule.exports = exports\n","import { defaultJsonSerializer } from './defaultJsonSerializer.js';\nimport { HeadersInstanceToPlainObject, uppercase } from './helpers.js';\nimport { parseBatchRequestArgs, parseRawRequestArgs, parseRawRequestExtendedArgs, parseRequestArgs, parseRequestExtendedArgs, } from './parseArgs.js';\nimport { resolveRequestDocument } from './resolveRequestDocument.js';\nimport { ClientError, } from './types.js';\nimport crossFetch, * as CrossFetch from 'cross-fetch';\n/**\n * Convert the given headers configuration into a plain object.\n */\nconst resolveHeaders = (headers) => {\n    let oHeaders = {};\n    if (headers) {\n        if ((typeof Headers !== `undefined` && headers instanceof Headers) ||\n            (CrossFetch && CrossFetch.Headers && headers instanceof CrossFetch.Headers)) {\n            oHeaders = HeadersInstanceToPlainObject(headers);\n        }\n        else if (Array.isArray(headers)) {\n            headers.forEach(([name, value]) => {\n                if (name && value !== undefined) {\n                    oHeaders[name] = value;\n                }\n            });\n        }\n        else {\n            oHeaders = headers;\n        }\n    }\n    return oHeaders;\n};\n/**\n * Clean a GraphQL document to send it via a GET query\n */\nconst cleanQuery = (str) => str.replace(/([\\s,]|#[^\\n\\r]+)+/g, ` `).trim();\n/**\n * Create query string for GraphQL request\n */\nconst buildRequestConfig = (params) => {\n    if (!Array.isArray(params.query)) {\n        const params_ = params;\n        const search = [`query=${encodeURIComponent(cleanQuery(params_.query))}`];\n        if (params.variables) {\n            search.push(`variables=${encodeURIComponent(params_.jsonSerializer.stringify(params_.variables))}`);\n        }\n        if (params_.operationName) {\n            search.push(`operationName=${encodeURIComponent(params_.operationName)}`);\n        }\n        return search.join(`&`);\n    }\n    if (typeof params.variables !== `undefined` && !Array.isArray(params.variables)) {\n        throw new Error(`Cannot create query with given variable type, array expected`);\n    }\n    // Batch support\n    const params_ = params;\n    const payload = params.query.reduce((acc, currentQuery, index) => {\n        acc.push({\n            query: cleanQuery(currentQuery),\n            variables: params_.variables ? params_.jsonSerializer.stringify(params_.variables[index]) : undefined,\n        });\n        return acc;\n    }, []);\n    return `query=${encodeURIComponent(params_.jsonSerializer.stringify(payload))}`;\n};\nconst createHttpMethodFetcher = (method) => async (params) => {\n    const { url, query, variables, operationName, fetch, fetchOptions, middleware } = params;\n    const headers = { ...params.headers };\n    let queryParams = ``;\n    let body = undefined;\n    if (method === `POST`) {\n        body = createRequestBody(query, variables, operationName, fetchOptions.jsonSerializer);\n        if (typeof body === `string`) {\n            // @ts-expect-error todo\n            headers[`Content-Type`] = `application/json`;\n        }\n    }\n    else {\n        // @ts-expect-error todo needs ADT for TS to understand the different states\n        queryParams = buildRequestConfig({\n            query,\n            variables,\n            operationName,\n            jsonSerializer: fetchOptions.jsonSerializer ?? defaultJsonSerializer,\n        });\n    }\n    const init = {\n        method,\n        headers,\n        body,\n        ...fetchOptions,\n    };\n    let urlResolved = url;\n    let initResolved = init;\n    if (middleware) {\n        const result = await Promise.resolve(middleware({ ...init, url, operationName, variables }));\n        const { url: urlNew, ...initNew } = result;\n        urlResolved = urlNew;\n        initResolved = initNew;\n    }\n    if (queryParams) {\n        urlResolved = `${urlResolved}?${queryParams}`;\n    }\n    return await fetch(urlResolved, initResolved);\n};\n/**\n * GraphQL Client.\n */\nclass GraphQLClient {\n    constructor(url, requestConfig = {}) {\n        this.url = url;\n        this.requestConfig = requestConfig;\n        /**\n         * Send a GraphQL query to the server.\n         */\n        this.rawRequest = async (...args) => {\n            const [queryOrOptions, variables, requestHeaders] = args;\n            const rawRequestOptions = parseRawRequestArgs(queryOrOptions, variables, requestHeaders);\n            const { headers, fetch = crossFetch, method = `POST`, requestMiddleware, responseMiddleware, ...fetchOptions } = this.requestConfig;\n            const { url } = this;\n            if (rawRequestOptions.signal !== undefined) {\n                fetchOptions.signal = rawRequestOptions.signal;\n            }\n            const { operationName } = resolveRequestDocument(rawRequestOptions.query);\n            return makeRequest({\n                url,\n                query: rawRequestOptions.query,\n                variables: rawRequestOptions.variables,\n                headers: {\n                    ...resolveHeaders(callOrIdentity(headers)),\n                    ...resolveHeaders(rawRequestOptions.requestHeaders),\n                },\n                operationName,\n                fetch,\n                method,\n                fetchOptions,\n                middleware: requestMiddleware,\n            })\n                .then((response) => {\n                if (responseMiddleware) {\n                    responseMiddleware(response);\n                }\n                return response;\n            })\n                .catch((error) => {\n                if (responseMiddleware) {\n                    responseMiddleware(error);\n                }\n                throw error;\n            });\n        };\n    }\n    async request(documentOrOptions, ...variablesAndRequestHeaders) {\n        const [variables, requestHeaders] = variablesAndRequestHeaders;\n        const requestOptions = parseRequestArgs(documentOrOptions, variables, requestHeaders);\n        const { headers, fetch = crossFetch, method = `POST`, requestMiddleware, responseMiddleware, ...fetchOptions } = this.requestConfig;\n        const { url } = this;\n        if (requestOptions.signal !== undefined) {\n            fetchOptions.signal = requestOptions.signal;\n        }\n        const { query, operationName } = resolveRequestDocument(requestOptions.document);\n        return makeRequest({\n            url,\n            query,\n            variables: requestOptions.variables,\n            headers: {\n                ...resolveHeaders(callOrIdentity(headers)),\n                ...resolveHeaders(requestOptions.requestHeaders),\n            },\n            operationName,\n            fetch,\n            method,\n            fetchOptions,\n            middleware: requestMiddleware,\n        })\n            .then((response) => {\n            if (responseMiddleware) {\n                responseMiddleware(response);\n            }\n            return response.data;\n        })\n            .catch((error) => {\n            if (responseMiddleware) {\n                responseMiddleware(error);\n            }\n            throw error;\n        });\n    }\n    // prettier-ignore\n    batchRequests(documentsOrOptions, requestHeaders) {\n        const batchRequestOptions = parseBatchRequestArgs(documentsOrOptions, requestHeaders);\n        const { headers, ...fetchOptions } = this.requestConfig;\n        if (batchRequestOptions.signal !== undefined) {\n            fetchOptions.signal = batchRequestOptions.signal;\n        }\n        const queries = batchRequestOptions.documents.map(({ document }) => resolveRequestDocument(document).query);\n        const variables = batchRequestOptions.documents.map(({ variables }) => variables);\n        return makeRequest({\n            url: this.url,\n            query: queries,\n            // @ts-expect-error TODO reconcile batch variables into system.\n            variables,\n            headers: {\n                ...resolveHeaders(callOrIdentity(headers)),\n                ...resolveHeaders(batchRequestOptions.requestHeaders),\n            },\n            operationName: undefined,\n            fetch: this.requestConfig.fetch ?? crossFetch,\n            method: this.requestConfig.method || `POST`,\n            fetchOptions,\n            middleware: this.requestConfig.requestMiddleware,\n        })\n            .then((response) => {\n            if (this.requestConfig.responseMiddleware) {\n                this.requestConfig.responseMiddleware(response);\n            }\n            return response.data;\n        })\n            .catch((error) => {\n            if (this.requestConfig.responseMiddleware) {\n                this.requestConfig.responseMiddleware(error);\n            }\n            throw error;\n        });\n    }\n    setHeaders(headers) {\n        this.requestConfig.headers = headers;\n        return this;\n    }\n    /**\n     * Attach a header to the client. All subsequent requests will have this header.\n     */\n    setHeader(key, value) {\n        const { headers } = this.requestConfig;\n        if (headers) {\n            // todo what if headers is in nested array form... ?\n            //@ts-expect-error todo\n            headers[key] = value;\n        }\n        else {\n            this.requestConfig.headers = { [key]: value };\n        }\n        return this;\n    }\n    /**\n     * Change the client endpoint. All subsequent requests will send to this endpoint.\n     */\n    setEndpoint(value) {\n        this.url = value;\n        return this;\n    }\n}\nconst makeRequest = async (params) => {\n    const { query, variables, fetchOptions } = params;\n    const fetcher = createHttpMethodFetcher(uppercase(params.method ?? `post`));\n    const isBatchingQuery = Array.isArray(params.query);\n    const response = await fetcher(params);\n    const result = await getResult(response, fetchOptions.jsonSerializer ?? defaultJsonSerializer);\n    const successfullyReceivedData = Array.isArray(result)\n        ? !result.some(({ data }) => !data)\n        : Boolean(result.data);\n    const successfullyPassedErrorPolicy = Array.isArray(result) ||\n        !result.errors ||\n        (Array.isArray(result.errors) && !result.errors.length) ||\n        fetchOptions.errorPolicy === `all` ||\n        fetchOptions.errorPolicy === `ignore`;\n    if (response.ok && successfullyPassedErrorPolicy && successfullyReceivedData) {\n        // @ts-expect-error TODO fixme\n        const { errors: _, ...rest } = Array.isArray(result) ? result : result;\n        const data = fetchOptions.errorPolicy === `ignore` ? rest : result;\n        const dataEnvelope = isBatchingQuery ? { data } : data;\n        // @ts-expect-error TODO\n        return {\n            ...dataEnvelope,\n            headers: response.headers,\n            status: response.status,\n        };\n    }\n    else {\n        const errorResult = typeof result === `string`\n            ? {\n                error: result,\n            }\n            : result;\n        throw new ClientError(\n        // @ts-expect-error TODO\n        { ...errorResult, status: response.status, headers: response.headers }, { query, variables });\n    }\n};\n/**\n * Send a GraphQL Query to the GraphQL server for execution.\n */\nconst rawRequest = async (...args) => {\n    const [urlOrOptions, query, ...variablesAndRequestHeaders] = args;\n    const requestOptions = parseRawRequestExtendedArgs(urlOrOptions, query, ...variablesAndRequestHeaders);\n    const client = new GraphQLClient(requestOptions.url);\n    return client.rawRequest({\n        ...requestOptions,\n    });\n};\n// prettier-ignore\n// eslint-disable-next-line\nasync function request(urlOrOptions, document, ...variablesAndRequestHeaders) {\n    const requestOptions = parseRequestExtendedArgs(urlOrOptions, document, ...variablesAndRequestHeaders);\n    const client = new GraphQLClient(requestOptions.url);\n    return client.request({\n        ...requestOptions,\n    });\n}\n/**\n * Send a batch of GraphQL Document to the GraphQL server for execution.\n *\n * @example\n *\n * ```ts\n * // You can pass a raw string\n *\n * await batchRequests('https://foo.bar/graphql', [\n * {\n *  query: `\n *   {\n *     query {\n *       users\n *     }\n *   }`\n * },\n * {\n *   query: `\n *   {\n *     query {\n *       users\n *     }\n *   }`\n * }])\n *\n * // You can also pass a GraphQL DocumentNode as query. Convenient if you\n * // are using graphql-tag package.\n *\n * import gql from 'graphql-tag'\n *\n * await batchRequests('https://foo.bar/graphql', [{ query: gql`...` }])\n * ```\n */\nconst batchRequests = async (...args) => {\n    const params = parseBatchRequestsArgsExtended(args);\n    const client = new GraphQLClient(params.url);\n    return client.batchRequests(params);\n};\nconst parseBatchRequestsArgsExtended = (args) => {\n    if (args.length === 1) {\n        return args[0];\n    }\n    else {\n        return {\n            url: args[0],\n            documents: args[1],\n            requestHeaders: args[2],\n            signal: undefined,\n        };\n    }\n};\nconst createRequestBody = (query, variables, operationName, jsonSerializer) => {\n    const jsonSerializer_ = jsonSerializer ?? defaultJsonSerializer;\n    if (!Array.isArray(query)) {\n        return jsonSerializer_.stringify({ query, variables, operationName });\n    }\n    if (typeof variables !== `undefined` && !Array.isArray(variables)) {\n        throw new Error(`Cannot create request body with given variable type, array expected`);\n    }\n    // Batch support\n    const payload = query.reduce((acc, currentQuery, index) => {\n        acc.push({ query: currentQuery, variables: variables ? variables[index] : undefined });\n        return acc;\n    }, []);\n    return jsonSerializer_.stringify(payload);\n};\nconst getResult = async (response, jsonSerializer) => {\n    let contentType;\n    response.headers.forEach((value, key) => {\n        if (key.toLowerCase() === `content-type`) {\n            contentType = value;\n        }\n    });\n    if (contentType &&\n        (contentType.toLowerCase().startsWith(`application/json`) ||\n            contentType.toLowerCase().startsWith(`application/graphql+json`) ||\n            contentType.toLowerCase().startsWith(`application/graphql-response+json`))) {\n        return jsonSerializer.parse(await response.text());\n    }\n    else {\n        return response.text();\n    }\n};\nconst callOrIdentity = (value) => {\n    return typeof value === `function` ? value() : value;\n};\n/**\n * Convenience passthrough template tag to get the benefits of tooling for the gql template tag. This does not actually parse the input into a GraphQL DocumentNode like graphql-tag package does. It just returns the string with any variables given interpolated. Can save you a bit of performance and having to install another package.\n *\n * @example\n * ```\n * import { gql } from 'graphql-request'\n *\n * await request('https://foo.bar/graphql', gql`...`)\n * ```\n *\n * @remarks\n *\n * Several tools in the Node GraphQL ecosystem are hardcoded to specially treat any template tag named \"gql\". For example see this prettier issue: https://github.com/prettier/prettier/issues/4360. Using this template tag has no runtime effect beyond variable interpolation.\n */\nexport const gql = (chunks, ...variables) => {\n    return chunks.reduce((acc, chunk, index) => `${acc}${chunk}${index in variables ? String(variables[index]) : ``}`, ``);\n};\nexport { GraphQLWebSocketClient } from './graphql-ws.js';\nexport { resolveRequestDocument } from './resolveRequestDocument.js';\nexport { batchRequests, ClientError, GraphQLClient, rawRequest, request, };\nexport default request;\n//# sourceMappingURL=index.js.map","import { request, gql } from 'graphql-request'\nimport settings from \"@/productBundles/settings.js\";\n/*\n* Using the graphql-request library for graphql requests.\n* https://github.com/jasonkuhrt/graphql-request\n*/\n\n/*\n* The storefront api [public] access token for fetching data.\n* https://admin.shopify.com/store/dev-expanse-bootstrap/settings/apps/development/44845432833/api_credentials\n*/\nconst apiUrl = `https://${settings.storeUrl}/api/2023-04/graphql.json`\nconst requestVars = {}\nconst requestHeaders = {\n  \"X-Shopify-Storefront-Access-Token\": settings.accessToken\n}\n\n/*\n* We have no max for fetching, as we have no api for variants only, and each\n* product may have an unknown number of variants. Technicaly we want to show\n* the variants, and not just the products.\n*/\nconst maxPerPage = 250\n\n\nconst collectionQuery = gql`\n{\n  collection(handle: \"${settings.bundleCollectionHandle}\") {\n    handle\n    id\n    products(first: ${maxPerPage}) {\n      edges {\n        node {\n          id\n          title\n          availableForSale\n          images(first: 1) {\n            edges {\n              node {\n                id\n                height\n                width\n                url\n              }\n            }\n          }\n          variants(first: ${maxPerPage}) {\n            edges {\n              node {\n                id\n                availableForSale\n                title\n                price {\n                  amount\n                  currencyCode\n                }\n                image {\n                  id\n                  url\n                  height\n                  width                      \n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }  \n}\n`\n\nconst getCollection = async () => {\n  try {\n    const response = await request(apiUrl, collectionQuery, requestVars, requestHeaders)\n    return response.collection\n  } catch (error) {\n    console.error(error)\n    process.exit(1)\n  }\n\n}\n\nexport { getCollection }\n","import settings from \"@/productBundles/settings.js\";\n\nclass Paginator {\n  constructor(items= [], currentPage=0) {\n    this.items = items\n    this.productsPerPage = settings.productsPerPage\n    this.currentPage = currentPage\n  }\n\n  /*\n  0-based offset, where the pagination should start.\n  The -1 is used to apply to any non-zero offset.\n  */\n  get offset() {\n    const baseOffset = (this.currentPage * this.productsPerPage) - 1\n    return Math.max(baseOffset, 0)\n  }\n\n  get pageEnd() {\n    return this.offset + this.productsPerPage\n  }\n\n  get currentItems() {\n    const items = this.items.slice(this.offset, this.pageEnd)\n    return items\n  }\n\n  get itemCount() {\n    return this.items.length\n  }\n\n  get pageCount() {\n    return Math.ceil(this.itemCount / this.productsPerPage)\n  }\n\n  get showPages() {\n    return this.pageCount > 1 ? true : false\n  }\n\n}\n\nexport default Paginator\n","import ProductVariant from \"@/productBundles/ProductVariant.js\";\n\nclass ProductVariantParser {\n  constructor(productData=[]) {\n    this.productData = productData\n  }\n\n  variantData() {\n    const attribs = this.productData.map((product) => {\n      return product.node.variants.edges.map((variantData) => {\n        return Object.assign(variantData.node, {main_product_title: product.node.title})\n      })\n    })\n    const flatAttribs = attribs.flat()\n    return flatAttribs.filter((variant) => variant.availableForSale)\n  }\n\n  variants() {\n    const data = this.variantData()\n    return data.map((attribs) => new ProductVariant(attribs))\n  }\n}\n\nexport default ProductVariantParser\n","<script>\n  import {bundle} from \"~/productBundles/store.js\";\n\n  export let product\n  export let complete = false\n  // Add the product to the bundle store and assign the store to trigger\n  // reactivity.\n  const addProduct = () => {\n    const newBundle = [...$bundle, product]\n    bundle.save(newBundle)\n  }\n</script>\n\n<div class:complete class=\"product-box\" data-product-id=\"{product.id}\">\n  <div class=\"product-details\">\n    <div class=\"product-image\">\n      <img src=\"{product.image}\" alt=\"{product.title}\" />\n    </div>\n    <div class=\"product-title\">\n      {product.title}\n    </div>\n    <div class=\"product-price\">\n      ${product.price}\n    </div>\n  </div>\n  <div class=\"btn-area\">\n    <button type=\"button\" disabled={complete} class=\"btn btn-bundle\" on:click={addProduct}>\n      Add to Bundle\n    </button>\n  </div>\n</div>\n\n<style>\n  .product-box {\n      display: block;\n      border: solid 5px #ccc;\n      border-radius: 10px;\n      padding: 1em;\n      max-width: 250px;\n      text-align: center;\n      display: flex;\n      flex-direction: column;\n  }\n\n  .product-box.complete {\n    opacity: 0.6;\n  }\n\n  .product-price {\n    font-weight: bold;\n    font-size: 2em;\n  }\n\n  .product-box .btn-area {\n      display: flex;\n      justify-content: center;\n      align-items: center;\n      height: 100px;\n  }\n\n  .product-box .product-title {\n      font-weight: 800;\n      text-align: center;\n  }\n\n  .btn-bundle {\n    border-radius: 30px;\n    font-size: .7rem;\n    white-space: nowrap;\n    line-height: 1rem;\n    text-transform: uppercase;\n  }\n\n  .btn-bundle:hover {\n    background-color: var(--button-custom-hover-color, darkgray);\n    transition: .2s;\n  }\n  \n  .product-details{\n    flex: 1 0 auto;\n  }\n\n</style>\n","<script>\n  import {bundle} from \"@/productBundles/store.js\";\n  export let bundleIndex = 0\n\n  let product\n  let image\n  let title\n  let bgStyle\n\n  /*\n  * Reset the bundle to have everything but this product.\n  * Will only remove one instance of the product (in the event that the product\n  * is bundled multiple times)\n  */\n  const removeItem = () => {\n    let removed = false\n    const newBundle = $bundle.filter((prod) => {\n      if (!removed && prod.id === product.id) {\n        removed = true\n        return false\n      }\n\n      return true\n    })\n    bundle.save(newBundle)\n  }\n\n  $: {\n    product = $bundle[bundleIndex]\n    image = product?.image || ''\n    title = product?.title || ''\n    if(image) {\n      bgStyle = `background-image: url(${image});`\n    } else {\n      bgStyle = ''\n    }\n  }\n</script>\n\n<div class=\"selected-product-box\">\n  {#if product}\n    <button class=\"remove-btn\" on:click={removeItem}>&times;</button>\n  {/if}\n  <div class=\"selected-product-image\"\n       style=\"{bgStyle}\"\n       role=\"img\"\n       alt=\"{title}\"\n       title=\"{title}\"\n       aria-label=\"{title}\"></div>\n</div>\n\n<style>\n  .remove-btn {\n    position: absolute;\n    top: 0;\n    right: 0;\n    padding: 0px 3px;\n    line-height: 1em;\n    border-radius: 0 5px 0 5px;\n    background: #666;\n    color: white;\n    font-weight: bold;\n    font-size: 1.5em;\n    cursor: pointer;\n  }\n\n  .remove-btn:hover {\n    background: #333;\n  }\n\n  .selected-product-image {\n    width: 100%;\n    height: 100%;\n    background-position: center;\n    background-size: cover;\n  }\n\n  .selected-product-box {\n    position: relative;\n    height: 100px;\n    width: 100px;\n    overflow: hidden;\n    border: solid 5px #ccc;\n    border-radius: 8px;\n    background: #eee;\n  }\n</style>\n","<script>\n  import {bundle} from \"~/productBundles/store.js\";\n\n  // Uses the Cart API.\n  // https://shopify.dev/docs/api/ajax/reference/cart\n  const cartAddUrl = `${window.Shopify.routes.root}cart/add.js`\n  const cartDrawerElem = document.querySelector('#HeaderCart')\n\n  const lineItemData = () => {\n    return $bundle.map((prod) => {\n      return {\n        id: prod.shortId,\n        quantity: 1,\n        properties: {\n          \"Bundled Item\": 'Added as bundle'\n        }\n      }\n    })\n  }\n  const showCart = () => {\n    // Only good for archetype themes. Will cause the cart counter to update.\n    // https://archetypethemes.co/blogs/expanse/javascript-events-for-developers\n    document.dispatchEvent(new CustomEvent('cart:build'));\n    cartDrawerElem.classList.add('is-active')\n  }\n\n  const addBundleToCart = async () => {\n    const data = {items: lineItemData()}\n    const response = await fetch(\n      cartAddUrl,\n      {\n        method: 'POST',\n        headers:{\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(data)\n      }\n    )\n    showCart()\n  }\n</script>\n\n<button type=\"button\" class=\"btn add-to-cart\" on:click={addBundleToCart}>\n  Add Bundle to Cart\n</button>\n\n\n<style>\n  .add-to-cart {\n    margin-bottom: 10px;\n  }\n</style>\n","<script>\n  import { createEventDispatcher } from 'svelte'\n\n  const dispatch = createEventDispatcher()\n  export let page = 0\n  export let buttonText = page + 1\n  export let currentPage = 0\n  let current = false\n\n\n  const buttonClass = () => {\n    const isInt = !!parseInt(buttonText)\n    if(isInt) return \"page-btn\"\n\n    return \"arrow-btn\"\n  }\n  /*\n  * Set the currentPage to whatever this page number is.\n  */\n  const setCurrentPage = () => {\n    console.log(\"setting the currentPage to page\", {page, currentPage})\n    dispatch('set-current-page', {\n      currentPage: page\n    })\n  }\n\n  $: {\n    current = page === currentPage\n  }\n</script>\n\n\n<button class=\"{buttonClass()}\" class:current disabled={current} on:click={setCurrentPage}>\n  {buttonText}\n</button>\n\n\n<style>\n  .page-btn {\n    display: inline-block;\n    font-size: 1.5em;\n    width: 2em;\n    margin: 0 2px;\n    border: solid 2px #333;\n    background: white;\n    cursor: pointer;\n    border-radius: 5px;\n    font-weight: bold;\n  }\n\n  .page-btn:hover, .page-btn.current {\n    background: #333;\n    color: white;\n  }\n\n  .arrow-btn {\n    font-size: 1.5em;\n    font-weight: bold;\n    cursor: pointer;\n  }\n\n  .page-btn.current {\n    cursor: default;\n  }\n\n</style>\n","<script>\n  import {onMount} from \"svelte\"\n  import settings from '@/productBundles/settings.js'\n  import {bundle} from \"@/productBundles/store.js\";\n  import {getCollection} from \"@/productBundles/fetcher.js\"\n  import Paginator from \"@/productBundles/Paginator.js\";\n  import ProductVariantParser from \"@/productBundles/ProductVariantParser.js\";\n  import ProductBox from \"@/productBundles/ProductBox.svelte\";\n  import SelectedProductThumbnail from \"@/productBundles/SelectedProductThumbnail.svelte\";\n  import AddBundleToCartBtn from \"@/productBundles/AddBundleToCartBtn.svelte\";\n  import PageButton from \"@/productBundles/PageButton.svelte\";\n\n  let loading = true\n  let products = []\n  let allProducts = []\n  let complete = false\n  let leftToGo = settings.bundleCount\n  let paginator\n  let currentPage = 0\n  let runningTotal = 0\n  /*\n  * Set the `currentPage` variable. Triggered by an event dispatched from a\n  * child component.\n  */\n  const setCurrentPage = (e) => {\n    currentPage = e.detail.currentPage\n  }\n\n  const getTotalForBundle = (selectedBundle) => {\n    const total = selectedBundle.reduce((sum, variant) => {\n      return sum + variant.price;\n    }, 0);\n    return total.toFixed(2); //Show up to 2 decimals\n  };\n\n  onMount(async () => {\n    bundle.load()\n    const collectionData = await getCollection()\n    const parser = new ProductVariantParser(collectionData.products.edges)\n    allProducts = parser.variants()\n    loading = false\n  })\n\n  $: {\n    complete = $bundle.length >= settings.bundleCount\n    leftToGo = settings.bundleCount - $bundle.length\n    paginator = new Paginator(allProducts, currentPage)\n    products = paginator.currentItems\n    runningTotal = getTotalForBundle($bundle)\n  }\n</script>\n\n<div id=\"bundle-products-container\">\n  {#if loading}\n    <div id=\"loading-products\">...loading...</div>\n  {:else}\n    <div class=\"bundler-title\">\n      Bundle {settings.bundleCount} Products\n    </div>\n    <div class=\"product-box-container\">\n      <div class=\"product-box-rows\">\n        {#each products as product}\n          <ProductBox product={product} complete={complete} />\n        {/each}\n      </div>\n      {#if paginator.showPages}\n        <div class=\"page-buttons\">\n          {#if currentPage > 0}\n            <PageButton page={currentPage - 1} {currentPage} buttonText=\"&laquo;\" on:set-current-page={setCurrentPage} />\n          {/if}\n          {#each Array(paginator.pageCount) as _, i}\n            <PageButton page={i} {currentPage} on:set-current-page={setCurrentPage} />\n          {/each}\n          {#if currentPage + 1 < paginator.pageCount}\n            <PageButton page={currentPage + 1} {currentPage} buttonText=\"&raquo;\" on:set-current-page={setCurrentPage} />\n          {/if}\n        </div>\n      {/if}\n      <div id=\"sticky-bundle-container\">\n        {#if complete}\n          <AddBundleToCartBtn />\n        {:else}\n          <div class=\"selected-bundle-title\">Your Bundle</div>\n          <div class=\"selected-bundle-status\">\n            Add <span class=\"left-to-go\">{leftToGo}</span> item(s) to complete your bundle\n          </div>\n        {/if}\n        <div class=\"selected-bundle-products\">\n          {#each Array(settings.bundleCount) as _, i}\n            <SelectedProductThumbnail bundleIndex={i} />\n          {/each}\n        </div>\n        {#if settings.showTotal && runningTotal}\n          <div class=\"running-total\">\n            TOTAL: ${runningTotal}\n          </div>\n        {/if}\n      </div>\n    </div>\n  {/if}\n</div>\n\n\n<style>\n  #loading-products {\n    font-weight: bold;\n    font-size: 3em;\n    text-align: center;\n  }\n\n  .left-to-go {\n    font-weight: bold;\n    font-size: 1.2em;\n  }\n\n  .bundler-title {\n    font-size: 3em;\n    text-align: center;\n  }\n\n  .selected-bundle-title {\n    font-size: 1.8em;\n    font-weight: bold;\n  }\n\n  .selected-bundle-status {\n    font-size: 1.2em;\n    margin-bottom: 3px;\n  }\n\n  #bundle-products-container {\n    position: relative;\n  }\n\n  #sticky-bundle-container {\n    position: sticky;\n    bottom: 0px;\n    border-top: solid 2px #666;\n    padding: 10px 0;\n    background: white;\n    width: 100%;\n    text-align: center;\n  }\n\n  .selected-bundle-products {\n    display: flex;\n    gap: 10px;\n    justify-content: center;\n  }\n\n  .product-box-rows {\n    justify-content: center;\n    display: flex;\n    flex-wrap: wrap;\n    gap: 10px;\n  }\n\n  .product-box-container {\n    justify-content: center;\n  }\n\n  .page-buttons {\n    text-align: center;\n    position: sticky;\n    bottom: 0px;\n    margin: 1em 0;\n  }\n\n  .running-total {\n    font-weight: bold;\n    font-size: 1.8em;\n  }\n</style>\n","import App from '@/productBundles/App.svelte';\n\nconst target = document.querySelector('#product-bundle-app')\n\nconst app = new App({\n  target: target\n});\n\nexport default app;\n"],"names":["noop","run","fn","blank_object","run_all","fns","is_function","thing","safe_not_equal","a","b","src_url_equal_anchor","src_url_equal","element_src","url","is_empty","obj","subscribe","store","callbacks","unsub","component_subscribe","component","callback","null_to_empty","value","append","target","node","insert","anchor","detach","destroy_each","iterations","detaching","i","element","name","text","data","space","listen","event","handler","options","attr","attribute","children","set_data","toggle_class","toggle","custom_event","type","detail","bubbles","cancelable","e","current_component","set_current_component","get_current_component","onMount","createEventDispatcher","dirty_components","binding_callbacks","render_callbacks","flush_callbacks","resolved_promise","update_scheduled","schedule_update","flush","add_render_callback","seen_callbacks","flushidx","saved_component","update","$$","dirty","flush_render_callbacks","filtered","targets","c","outroing","outros","group_outros","check_outros","transition_in","block","local","transition_out","create_component","mount_component","customElement","fragment","after_update","new_on_destroy","destroy_component","make_dirty","init","instance","create_fragment","not_equal","props","append_styles","parent_component","ready","ret","rest","nodes","SvelteComponent","index","$$props","settings","DEFAULT_BUNDLE_COUNT","getAccessToken","accessToken","storeUrl","bundleCount","bundleCollectionHandle","showTotal","maxImageWidth","productsPerPage","settings$1","subscriber_queue","writable","start","stop","subscribers","set","new_value","run_queue","subscriber","invalidate","parseId","gid","strId","_a","SHOPIFY_DEFAULT_TITLE_MATCHER","ProductVariant","attribs","mainTitle","STORAGE_KEY","attribsForProducts","products","prod","StorageManager","strData","storageManager","createBundleStore","bundle","defaultJsonSerializer","uppercase","str","HeadersInstanceToPlainObject","headers","o","v","k","parseRequestArgs","documentOrOptions","variables","requestHeaders","parseRawRequestArgs","queryOrOptions","parseBatchRequestArgs","documentsOrOptions","parseRequestExtendedArgs","urlOrOptions","document","variablesAndRequestHeaders","devAssert","condition","message","isObjectLike","invariant","LineRegExp","getLocation","source","position","lastLineStart","line","match","printLocation","location","printSourceLocation","sourceLocation","firstLineColumnOffset","body","lineIndex","lineOffset","lineNum","columnOffset","columnNum","locationStr","lines","locationLine","subLineIndex","subLineColumnNum","subLines","printPrefixedLines","subLine","existingLines","_","padLen","prefix","toNormalizedOptions","args","firstArg","GraphQLError","rawArgs","_this$nodes","_nodeLocations$","_ref","positions","path","originalError","extensions","undefinedIfEmpty","nodeLocations","loc","pos","originalExtensions","output","formattedError","array","syntaxError","description","Location","startToken","endToken","Token","kind","end","column","QueryDocumentKeys","kindValues","isNode","maybeNode","maybeKind","OperationTypeNode","DirectiveLocation","Kind","isWhiteSpace","code","isDigit","isLetter","isNameStart","isNameContinue","dedentBlockStringLines","_firstNonEmptyLine2","commonIndent","firstNonEmptyLine","lastNonEmptyLine","_firstNonEmptyLine","indent","leadingWhitespace","printBlockString","escapedValue","isSingleLine","forceLeadingNewLine","hasTrailingTripleQuotes","hasTrailingQuote","hasTrailingSlash","forceTrailingNewline","printAsMultipleLines","result","skipLeadingNewLine","TokenKind","Lexer","startOfFileToken","token","nextToken","readNextToken","isPunctuatorTokenKind","isUnicodeScalarValue","isSupplementaryCodePoint","isLeadingSurrogate","isTrailingSurrogate","printCodePointAt","lexer","char","createToken","col","bodyLength","readComment","readBlockString","readString","readNumber","readName","firstCode","isFloat","readDigits","chunkStart","escape","readEscapedUnicodeVariableWidth","readEscapedUnicodeFixedWidth","readEscapedCharacter","point","size","readHexDigit","read16BitHexCode","trailingCode","lineStart","currentLine","blockLines","MAX_ARRAY_LENGTH","MAX_RECURSIVE_DEPTH","inspect","formatValue","seenValues","formatObjectValue","previouslySeenValues","isJSONable","jsonValue","formatArray","formatObject","object","entries","getObjectTag","key","len","remaining","items","tag","instanceOf","constructor","Source","locationOffset","isSource","parse","Parser","sourceObj","hasDescription","keywordToken","operation","operationToken","nameOrAlias","alias","isConst","item","hasTypeCondition","varName","directives","innerType","operationTypes","interfaces","fields","defaultValue","types","values","getTokenDesc","repeatable","locations","getTokenKindDesc","atToken","openKind","parseFn","closeKind","delimiterKind","maxTokens","printString","escapedRegExp","escapedReplacer","escapeSequences","BREAK","visit","root","visitor","visitorKeys","enterLeaveMap","getEnterLeaveForKind","stack","inArray","keys","edits","parent","ancestors","isLeaving","isEdited","editOffset","editKey","editValue","arrayKey","_enterLeaveMap$get","_enterLeaveMap$get2","visitFn","_node$kind","kindVisitor","print","ast","printDocASTReducer","MAX_LINE_LENGTH","join","varDefs","wrap","variable","selections","selectionSet","argsLine","typeCondition","variableDefinitions","isBlockString","hasMultilineItems","maybeArray","separator","_maybeArray$filter$jo","x","maybeString","_maybeArray$some","extractOperationName","operationName","operationDefinitions","definition","_b","resolveRequestDocument","parsedDocument","ClientError","response","request","global","this","__self__","F","self","exports","support","isDataView","viewClasses","isArrayBufferView","normalizeName","normalizeValue","iteratorFor","iterator","Headers","header","oldValue","thisArg","consumed","fileReaderReady","reader","resolve","reject","readBlobAsArrayBuffer","blob","promise","readBlobAsText","readArrayBufferAsText","buf","view","chars","bufferClone","Body","rejected","decode","methods","normalizeMethod","method","upcased","Request","input","form","bytes","split","parseHeaders","rawHeaders","preProcessedHeaders","parts","Response","bodyInit","redirectStatuses","status","error","fetch","xhr","abortXhr","ctx","module","resolveHeaders","oHeaders","CrossFetch","CrossFetch.Headers","cleanQuery","buildRequestConfig","params","params_","search","payload","acc","currentQuery","createHttpMethodFetcher","query","fetchOptions","middleware","queryParams","createRequestBody","urlResolved","initResolved","urlNew","initNew","GraphQLClient","requestConfig","rawRequestOptions","crossFetch","requestMiddleware","responseMiddleware","makeRequest","callOrIdentity","requestOptions","batchRequestOptions","queries","fetcher","isBatchingQuery","getResult","successfullyReceivedData","successfullyPassedErrorPolicy","errorResult","jsonSerializer","jsonSerializer_","contentType","gql","chunks","chunk","apiUrl","requestVars","maxPerPage","collectionQuery","getCollection","Paginator","currentPage","baseOffset","ProductVariantParser","productData","product","variantData","variant","t1_value","t4_value","img","img_src_value","img_alt_value","div5","div5_data_product_id_value","div3","div0","div1","div2","div4","button","t1","t4","complete","addProduct","newBundle","$bundle","create_if_block","bundleIndex","image","title","bgStyle","removeItem","removed","$$invalidate","cartAddUrl","cartDrawerElem","lineItemData","showCart","dispatch","page","buttonText","current","buttonClass","setCurrentPage","if_block0","create_if_block_3","create_if_block_1","each_blocks_1","div","create_if_block_5","if_block1","create_if_block_4","each_blocks","pagebutton_changes","span","loading","allProducts","leftToGo","paginator","runningTotal","getTotalForBundle","selectedBundle","sum","collectionData","parser","App"],"mappings":"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","x_google_ignoreList":[0,2,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34]}